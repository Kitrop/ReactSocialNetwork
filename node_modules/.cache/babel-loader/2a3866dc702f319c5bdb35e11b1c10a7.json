{"ast":null,"code":"// actions\nimport { userApi } from '../../compo/api/api'; // name action\n\nconst FOLLOW_USER = 'follow/FOLLOW_USER';\nconst UNFOLLOW_USER = 'unfollow/UNFOLLOW_USER';\nconst SET_USERS = 'setUsers/SET_USERS';\nconst SET_CURRENT_PAGE = 'setCurrentPage/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'setTotalUsersCount/SET_TOTAL_USERS_COUNT';\nconst SWITCH_IS_FETCHING = 'switchIsFetching/SWITCH_IS_FETCHING';\nconst SWITCH_IS_FOLLOWING = 'switchIsFollowing/SWITCH_IS_FOLLOWING'; // state\n\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  ifFetching: true,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFollowing: []\n}; //reducer\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW_USER:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW_USER:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n\n    case SWITCH_IS_FETCHING:\n      {\n        return { ...state,\n          ifFetching: action.ifFetching\n        };\n      }\n\n    case SWITCH_IS_FOLLOWING:\n      {\n        return { ...state,\n          isFollowing: action.ifFetching ? [...state.isFollowing, action.userId] : state.isFollowing.filter(id => id !== action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // actionCreator\n\n\nexport const follow = userId => ({\n  type: FOLLOW_USER,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW_USER,\n  userId\n});\n\nconst followUnfollowFlow = userId => ({});\n\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const switchIsFetching = ifFetching => ({\n  type: SWITCH_IS_FETCHING,\n  ifFetching\n});\nexport const switchIsFollowing = (ifFetching, userId) => ({\n  type: SWITCH_IS_FOLLOWING,\n  ifFetching,\n  userId\n}); // thunkCreator\n\nexport const getUserThunk = (currentPage, pageSize) => async dispatch => {\n  dispatch(switchIsFetching(true));\n  let data = await userApi.getUserApi(currentPage, pageSize);\n  dispatch(switchIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const unfollowThunk = id => async dispatch => {\n  dispatch(switchIsFollowing(true, id));\n  let data = await userApi.deleteUserApi(id);\n\n  if (data.resultCode === 0) {\n    dispatch(unfollow(id));\n  }\n\n  dispatch(switchIsFollowing(false, id));\n};\nexport const followThunk = id => async dispatch => {\n  dispatch(switchIsFollowing(true, id));\n  let data = await userApi.postUserApi(id);\n\n  if (data.resultCode === 0) {\n    dispatch(follow(id));\n  }\n\n  dispatch(switchIsFollowing(false, id));\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/reducers/usersReducer.js"],"names":["userApi","FOLLOW_USER","UNFOLLOW_USER","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SWITCH_IS_FETCHING","SWITCH_IS_FOLLOWING","initialState","users","pageSize","ifFetching","totalUsersCount","currentPage","isFollowing","usersReducer","state","action","type","map","u","id","userId","followed","filter","follow","unfollow","followUnfollowFlow","setUsers","setCurrentPage","setTotalUsersCount","switchIsFetching","switchIsFollowing","getUserThunk","dispatch","data","getUserApi","items","totalCount","unfollowThunk","deleteUserApi","resultCode","followThunk","postUserApi"],"mappings":"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","sourcesContent":["// actions\r\nimport {userApi} from '../../compo/api/api'\r\n\r\n// name action\r\nconst FOLLOW_USER = 'follow/FOLLOW_USER'\r\nconst UNFOLLOW_USER = 'unfollow/UNFOLLOW_USER'\r\nconst SET_USERS = 'setUsers/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'setCurrentPage/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'setTotalUsersCount/SET_TOTAL_USERS_COUNT'\r\nconst SWITCH_IS_FETCHING = 'switchIsFetching/SWITCH_IS_FETCHING'\r\nconst SWITCH_IS_FOLLOWING = 'switchIsFollowing/SWITCH_IS_FOLLOWING'\r\n\r\n// state\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    ifFetching: true,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFollowing: []\r\n}\r\n\r\n//reducer\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case SWITCH_IS_FETCHING: {\r\n            return {...state, ifFetching: action.ifFetching}\r\n        }\r\n        case SWITCH_IS_FOLLOWING: {\r\n            return {\r\n                ...state,\r\n                isFollowing: action.ifFetching\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actionCreator\r\nexport const follow = (userId) => ({type: FOLLOW_USER, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW_USER, userId})\r\nconst followUnfollowFlow = (userId) => ({})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const switchIsFetching = (ifFetching) => ({type: SWITCH_IS_FETCHING, ifFetching})\r\nexport const switchIsFollowing = (ifFetching, userId) => ({type: SWITCH_IS_FOLLOWING, ifFetching, userId})\r\n\r\n// thunkCreator\r\nexport const getUserThunk = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(switchIsFetching(true))\r\n    let data = await userApi.getUserApi(currentPage, pageSize)\r\n        dispatch(switchIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\nexport const unfollowThunk = (id) => async (dispatch) => {\r\n    dispatch(switchIsFollowing(true, id))\r\n    let data = await userApi.deleteUserApi(id)\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollow(id))\r\n        }\r\n    dispatch(switchIsFollowing(false, id))\r\n}\r\nexport const followThunk = (id) => async (dispatch) => {\r\n    dispatch(switchIsFollowing(true, id))\r\n    let data = await userApi.postUserApi(id)\r\n        if (data.resultCode === 0) {\r\n            dispatch(follow(id))\r\n        }\r\n    dispatch(switchIsFollowing(false, id))\r\n}\r\n\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}