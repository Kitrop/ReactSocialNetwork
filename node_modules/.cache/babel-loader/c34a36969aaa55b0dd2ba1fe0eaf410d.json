{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Profile\\\\Posts\\\\MyPostForm.jsx\";\nimport posts from \"./MyPosts.module.css\";\nimport { Formik, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPostForm = props => {\n  let initialValues = {\n    postText: ''\n  };\n  let SignupSchema = Yup.object().shape({\n    postText: Yup.string().min(2, 'Too Short!').max(250, 'Too Long!')\n  });\n\n  let submitCallback = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    setTimeout(() => {\n      props.onAddPost(values.postText);\n      setSubmitting(false);\n    }, 400);\n  };\n\n  let validateValues = values => {\n    const errors = {};\n\n    if (!values.postText) {\n      errors.postText = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.postText)) {\n      errors.postText = 'Invalid PostText address';\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: SignupSchema,\n    validateValues: validateValues,\n    onSubmit: submitCallback,\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            type: 'text',\n            name: 'postText',\n            placeholder: 'Your post text',\n            className: posts.textarea,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.postText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), errors.postText && touched.postText && errors.postText, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: posts.mybutton,\n            disabled: isSubmitting,\n            children: \"Add post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyPostForm;\nexport default MyPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostForm\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Profile/Posts/MyPostForm.jsx"],"names":["posts","Formik","Field","Yup","MyPostForm","props","initialValues","postText","SignupSchema","object","shape","string","min","max","submitCallback","values","setSubmitting","setTimeout","onAddPost","validateValues","errors","test","touched","handleChange","handleBlur","handleSubmit","isSubmitting","textarea","mybutton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,sBAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,QAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE1B,MAAIC,aAAa,GAAG;AAChBC,IAAAA,QAAQ,EAAE;AADM,GAApB;AAGA,MAAIC,YAAY,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAClCH,IAAAA,QAAQ,EAAEJ,GAAG,CAACQ,MAAJ,GACLC,GADK,CACD,CADC,EACE,YADF,EAELC,GAFK,CAED,GAFC,EAEI,WAFJ;AADwB,GAAnB,CAAnB;;AAKA,MAAIC,cAAc,GAAI,CAACC,MAAD,WAA+B;AAAA,QAAtB;AAAEC,MAAAA;AAAF,KAAsB;AACjDC,IAAAA,UAAU,CAAC,MAAM;AACbZ,MAAAA,KAAK,CAACa,SAAN,CAAgBH,MAAM,CAACR,QAAvB;AACAS,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAHS,EAGP,GAHO,CAAV;AAIH,GALD;;AAMA,MAAIG,cAAc,GAAGJ,MAAM,IAAI;AAC3B,UAAMK,MAAM,GAAG,EAAf;;AACA,QAAI,CAACL,MAAM,CAACR,QAAZ,EAAsB;AAClBa,MAAAA,MAAM,CAACb,QAAP,GAAkB,UAAlB;AACH,KAFD,MAEO,IACH,CAAC,2CAA2Cc,IAA3C,CAAgDN,MAAM,CAACR,QAAvD,CADE,EAEL;AACEa,MAAAA,MAAM,CAACb,QAAP,GAAkB,0BAAlB;AACH;;AACD,WAAOa,MAAP;AACH,GAVD;;AAYA,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAId,aADrB;AAEI,IAAA,gBAAgB,EAAIE,YAFxB;AAGI,IAAA,cAAc,EAAIW,cAHtB;AAII,IAAA,QAAQ,EAAIL,cAJhB;AAAA,cAKK;AAAA,UAAC;AACIC,QAAAA,MADJ;AAEIK,QAAAA,MAFJ;AAGIE,QAAAA,OAHJ;AAIIC,QAAAA,YAJJ;AAKIC,QAAAA,UALJ;AAMIC,QAAAA,YANJ;AAOIC,QAAAA;AACA;;AARJ,OAAD;AAAA,0BAUG;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA,gCACI;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,MAAb;AAAqB,YAAA,IAAI,EAAE,UAA3B;AAAuC,YAAA,WAAW,EAAE,gBAApD;AAAsE,YAAA,SAAS,EAAEzB,KAAK,CAAC2B,QAAvF;AAAiG,YAAA,QAAQ,EAAEJ,YAA3G;AAAyH,YAAA,MAAM,EAAEC,UAAjI;AAA6I,YAAA,KAAK,EAAET,MAAM,CAACR;AAA3J;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKa,MAAM,CAACb,QAAP,IAAmBe,OAAO,CAACf,QAA3B,IAAuCa,MAAM,CAACb,QAJnD,eAKI;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAEP,KAAK,CAAC4B,QAAvC;AAAiD,YAAA,QAAQ,EAAEF,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVH;AAAA;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAxDD;;KAAMtB,U;AA0DN,eAAeA,UAAf","sourcesContent":["import posts from \"./MyPosts.module.css\";\r\nimport {Formik, Field} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst MyPostForm = (props) => {\r\n\r\n    let initialValues = {\r\n        postText: ''\r\n    }\r\n    let SignupSchema = Yup.object().shape({\r\n        postText: Yup.string()\r\n            .min(2, 'Too Short!')\r\n            .max(250, 'Too Long!')\r\n    });\r\n    let submitCallback =  (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            props.onAddPost(values.postText)\r\n            setSubmitting(false);\r\n        }, 400);\r\n    }\r\n    let validateValues = values => {\r\n        const errors = {};\r\n        if (!values.postText) {\r\n            errors.postText = 'Required';\r\n        } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.postText)\r\n        ) {\r\n            errors.postText = 'Invalid PostText address';\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues = {initialValues}\r\n            validationSchema = {SignupSchema}\r\n            validateValues = {validateValues}\r\n            onSubmit = {submitCallback}>\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field type={'text'} name={'postText'} placeholder={'Your post text'} className={posts.textarea} onChange={handleChange} onBlur={handleBlur} value={values.postText}/>\r\n                    </div>\r\n                    {errors.postText && touched.postText && errors.postText}\r\n                    <div>\r\n                        <button type=\"submit\" className={posts.mybutton} disabled={isSubmitting}>Add post</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default MyPostForm"]},"metadata":{},"sourceType":"module"}