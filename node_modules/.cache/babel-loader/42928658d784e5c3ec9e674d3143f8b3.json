{"ast":null,"code":"// import {SendMessageActionCreater, UpdateNewMessageActionCreater} from \"../../redux/dialogsReducer\";\n// import Dialogs from \"./Dialogs\";\n// import {connect, useDispatch, useSelector} from \"react-redux\";\n// import {getIsAuth, getMessage} from \"../../redux/dialogSelectors\";\n// import {useNavigate} from \"react-router-dom\";\n// import {useEffect} from \"react\";\n//\n//\n//\n//\n// // const DialogsContainer = (props) => {\n// //     const selectDialogState = createSelector(\n// //         (state) => state.dialogsPage,\n// //         (state) => state.auth.isAuth\n// //     )\n// //     const selectorsDialog = useSelector(selectDialogState)\n// //     const dispatch = useDispatch()\n// //     return (\n// //         RedirectToAuth(Dialogs)\n// //     )\n// // }\n//\n//\n// const DialogsContainer = (props) => {\n//     let navigator = useNavigate()\n//     useEffect(() => {\n//         if (props.isAuth === false) {\n//             return navigator('/login')\n//         }\n//     }, [navigator, props.isAuth]);\n//\n//     const dialogsPage = useSelector( state => getMessage(state))\n//     const isAuth = useSelector( state => getIsAuth(state))\n//     const dispatch = useDispatch()\n//\n//     return (\n//         <Dialogs SendMessageActionCreater={dispatch(SendMessageActionCreater)}\n//                  UpdateNewMessageActionCreater={dispatch(UpdateNewMessageActionCreater)}\n//                  dialogsPage={dialogsPage}\n//                  isAuth={isAuth}/>\n//     )\n// }\n//\n//\n//\n//\n//\n// // const mapStateToProps = (state) => {\n// //     return {\n// //         dialogsPage: getMessage(state),\n// //         isAuth: state.auth.isAuth\n// //     }\n// // }\n//\n// // connect(mapStateToProps, {SendMessageActionCreater, UpdateNewMessageActionCreater})(DialogsContainer);\n//\n// export default DialogsContainer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Message/DialogsContainer.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import {SendMessageActionCreater, UpdateNewMessageActionCreater} from \"../../redux/dialogsReducer\";\r\n// import Dialogs from \"./Dialogs\";\r\n// import {connect, useDispatch, useSelector} from \"react-redux\";\r\n// import {getIsAuth, getMessage} from \"../../redux/dialogSelectors\";\r\n// import {useNavigate} from \"react-router-dom\";\r\n// import {useEffect} from \"react\";\r\n//\r\n//\r\n//\r\n//\r\n// // const DialogsContainer = (props) => {\r\n// //     const selectDialogState = createSelector(\r\n// //         (state) => state.dialogsPage,\r\n// //         (state) => state.auth.isAuth\r\n// //     )\r\n// //     const selectorsDialog = useSelector(selectDialogState)\r\n// //     const dispatch = useDispatch()\r\n// //     return (\r\n// //         RedirectToAuth(Dialogs)\r\n// //     )\r\n// // }\r\n//\r\n//\r\n// const DialogsContainer = (props) => {\r\n//     let navigator = useNavigate()\r\n//     useEffect(() => {\r\n//         if (props.isAuth === false) {\r\n//             return navigator('/login')\r\n//         }\r\n//     }, [navigator, props.isAuth]);\r\n//\r\n//     const dialogsPage = useSelector( state => getMessage(state))\r\n//     const isAuth = useSelector( state => getIsAuth(state))\r\n//     const dispatch = useDispatch()\r\n//\r\n//     return (\r\n//         <Dialogs SendMessageActionCreater={dispatch(SendMessageActionCreater)}\r\n//                  UpdateNewMessageActionCreater={dispatch(UpdateNewMessageActionCreater)}\r\n//                  dialogsPage={dialogsPage}\r\n//                  isAuth={isAuth}/>\r\n//     )\r\n// }\r\n//\r\n//\r\n//\r\n//\r\n//\r\n// // const mapStateToProps = (state) => {\r\n// //     return {\r\n// //         dialogsPage: getMessage(state),\r\n// //         isAuth: state.auth.isAuth\r\n// //     }\r\n// // }\r\n//\r\n// // connect(mapStateToProps, {SendMessageActionCreater, UpdateNewMessageActionCreater})(DialogsContainer);\r\n//\r\n// export default DialogsContainer;\r\n"]},"metadata":{},"sourceType":"module"}