{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Profile\\\\ProfileInfo\\\\ProfileStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport i from './ProfileInfo.module.css';\nimport { createRef, useState } from \"react\";\nimport { putProfileStatus } from \"../../../redux/profileReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileStatus = props => {\n  _s();\n\n  status: props.status;\n\n  let [status, setStatus] = useState(props.status);\n  let [toggleView, setToggleView] = useState(true); // при нажатии enter выключается ред.\n\n  const keyPressStatus = event => {\n    if (event.key === 'Enter') {\n      setToggleView(true);\n    }\n  }; // устанавливает обновленный статус\n\n\n  const changeStatus = event => {\n    if (event.currentTarget.value !== ' ') {\n      setStatus(event.currentTarget.value);\n      putProfileStatus(statusInputRef.current.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: toggleView ? /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: () => {\n        setToggleView(false);\n      },\n      className: i.info_profile,\n      children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: i.desc_txt,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: statusInputRef,\n        type: \"text\",\n        autoFocus: true,\n        value: status,\n        onBlur: () => {\n          setToggleView(true);\n        },\n        onKeyPress: keyPressStatus,\n        onChange: changeStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileStatus, \"dILFFnGXQxOUriPuV5YdTiCp1Kg=\");\n\n_c = ProfileStatus;\nexport default ProfileStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileStatus\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Profile/ProfileInfo/ProfileStatus.jsx"],"names":["i","createRef","useState","putProfileStatus","ProfileStatus","props","status","setStatus","toggleView","setToggleView","keyPressStatus","event","key","changeStatus","currentTarget","value","statusInputRef","current","info_profile","desc_txt"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,0BAAd;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7BC,EAAAA,MAAM,EAAED,KAAK,CAACC,MAAN;;AAER,MAAI,CAACA,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACG,KAAK,CAACC,MAAP,CAAlC;AACA,MAAI,CAACE,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA1C,CAL6B,CAO7B;;AACA,QAAMQ,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvBH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAJD,CAR6B,CAc7B;;;AACA,QAAMI,YAAY,GAAIF,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACG,aAAN,CAAoBC,KAApB,KAA8B,GAAlC,EAAuC;AACnCR,MAAAA,SAAS,CAACI,KAAK,CAACG,aAAN,CAAoBC,KAArB,CAAT;AACAZ,MAAAA,gBAAgB,CAACa,cAAc,CAACC,OAAf,CAAuBF,KAAxB,CAAhB;AACH;AACJ,GALD;;AAOA,sBACI;AAAA,cACKP,UAAU,gBACX;AAAM,MAAA,aAAa,EAAG,MAAM;AAACC,QAAAA,aAAa,CAAC,KAAD,CAAb;AAAqB,OAAlD;AAAqD,MAAA,SAAS,EAAET,CAAC,CAACkB,YAAlE;AAAA,yCACI;AAAM,QAAA,SAAS,EAAElB,CAAC,CAACmB,QAAnB;AAAA,kBACKb;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAOX;AAAA,6BACI;AAAO,QAAA,GAAG,EAAEU,cAAZ;AAA4B,QAAA,IAAI,EAAE,MAAlC;AAA0C,QAAA,SAAS,EAAE,IAArD;AAA2D,QAAA,KAAK,EAAEV,MAAlE;AAA0E,QAAA,MAAM,EAAE,MAAM;AAAEG,UAAAA,aAAa,CAAC,IAAD,CAAb;AAAoB,SAA9G;AAAiH,QAAA,UAAU,EAAGC,cAA9H;AAA+I,QAAA,QAAQ,EAAGG;AAA1J;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArCD;;GAAMT,a;;KAAAA,a;AAuCN,eAAeA,aAAf","sourcesContent":["import i from './ProfileInfo.module.css';\r\nimport {createRef, useState} from \"react\";\r\nimport {putProfileStatus} from \"../../../redux/profileReducer\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    status: props.status\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n    let [toggleView, setToggleView] = useState(true)\r\n\r\n    // при нажатии enter выключается ред.\r\n    const keyPressStatus = (event) => {\r\n        if (event.key === 'Enter') {\r\n            setToggleView(true)\r\n        }\r\n    }\r\n\r\n    // устанавливает обновленный статус\r\n    const changeStatus = (event) => {\r\n        if (event.currentTarget.value !== ' ') {\r\n            setStatus(event.currentTarget.value)\r\n            putProfileStatus(statusInputRef.current.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {toggleView ?\r\n            <span onDoubleClick={ () => {setToggleView(false)} } className={i.info_profile}>Status:\r\n                <span className={i.desc_txt}>\r\n                    {status}\r\n                </span>\r\n            </span>\r\n                :\r\n            <div>\r\n                <input ref={statusInputRef} type={\"text\"} autoFocus={true} value={status} onBlur={() => { setToggleView(true)} } onKeyPress={ keyPressStatus } onChange={ changeStatus }/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;"]},"metadata":{},"sourceType":"module"}