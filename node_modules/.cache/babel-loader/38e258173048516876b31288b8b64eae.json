{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Message\\\\DialogsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { SendMessageActionCreater, UpdateNewMessageActionCreater } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { getMessage } from \"../../redux/dialogSelectors\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\"; // const DialogsContainer = (props) => {\n//     const selectDialogState = createSelector(\n//         (state) => state.dialogsPage,\n//         (state) => state.auth.isAuth\n//     )\n//     const selectorsDialog = useSelector(selectDialogState)\n//     const dispatch = useDispatch()\n//     return (\n//         RedirectToAuth(Dialogs)\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsContainer = props => {\n  _s();\n\n  let navigator = useNavigate();\n  useEffect(() => {\n    if (props.isAuth === false) {\n      return navigator('/login');\n    }\n  }, [navigator, props.isAuth]);\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    SendMessageActionCreater: props.SendMessageActionCreater,\n    UpdateNewMessageActionCreater: props.UpdateNewMessageActionCreater,\n    dialogsPage: props.dialogsPage,\n    isAuth: props.isAuth\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DialogsContainer, \"XwGFUYORZbTPyzinRxEYG8OBqy0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DialogsContainer;\n\nconst mapStateToProps = state => {\n  return {\n    dialogsPage: getMessage(state),\n    isAuth: state.auth.isAuth\n  };\n};\n\nconnect(mapStateToProps, {\n  SendMessageActionCreater,\n  UpdateNewMessageActionCreater\n})(DialogsContainer);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Message/DialogsContainer.jsx"],"names":["SendMessageActionCreater","UpdateNewMessageActionCreater","Dialogs","connect","getMessage","useNavigate","useEffect","DialogsContainer","props","navigator","isAuth","dialogsPage","mapStateToProps","state","auth"],"mappings":";;;AAAA,SAAQA,wBAAR,EAAkCC,6BAAlC,QAAsE,4BAAtE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,SAAR,QAAwB,OAAxB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAKA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAChC,MAAIC,SAAS,GAAGJ,WAAW,EAA3B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIE,KAAK,CAACE,MAAN,KAAiB,KAArB,EAA4B;AACxB,aAAOD,SAAS,CAAC,QAAD,CAAhB;AACH;AACJ,GAJQ,EAIN,CAACA,SAAD,EAAWD,KAAK,CAACE,MAAjB,CAJM,CAAT;AAKA,sBACI,QAAC,OAAD;AAAS,IAAA,wBAAwB,EAAEF,KAAK,CAACR,wBAAzC;AACS,IAAA,6BAA6B,EAAEQ,KAAK,CAACP,6BAD9C;AAES,IAAA,WAAW,EAAEO,KAAK,CAACG,WAF5B;AAGS,IAAA,MAAM,EAAEH,KAAK,CAACE;AAHvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAbD;;GAAMH,gB;UACcF,W;;;KADdE,gB;;AAmBN,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,WAAW,EAAEP,UAAU,CAACS,KAAD,CADpB;AAEHH,IAAAA,MAAM,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AAFhB,GAAP;AAIH,CALD;;AAOAP,OAAO,CAACS,eAAD,EAAkB;AAACZ,EAAAA,wBAAD;AAA2BC,EAAAA;AAA3B,CAAlB,CAAP,CAAoFM,gBAApF;AAEA,eAAeA,gBAAf","sourcesContent":["import {SendMessageActionCreater, UpdateNewMessageActionCreater} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {getMessage} from \"../../redux/dialogSelectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//     const selectDialogState = createSelector(\r\n//         (state) => state.dialogsPage,\r\n//         (state) => state.auth.isAuth\r\n//     )\r\n//     const selectorsDialog = useSelector(selectDialogState)\r\n//     const dispatch = useDispatch()\r\n//     return (\r\n//         RedirectToAuth(Dialogs)\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n    let navigator = useNavigate()\r\n    useEffect(() => {\r\n        if (props.isAuth === false) {\r\n            return navigator('/login')\r\n        }\r\n    }, [navigator,props.isAuth]);\r\n    return (\r\n        <Dialogs SendMessageActionCreater={props.SendMessageActionCreater}\r\n                 UpdateNewMessageActionCreater={props.UpdateNewMessageActionCreater}\r\n                 dialogsPage={props.dialogsPage}\r\n                 isAuth={props.isAuth}/>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: getMessage(state),\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconnect(mapStateToProps, {SendMessageActionCreater, UpdateNewMessageActionCreater})(DialogsContainer);\r\n\r\nexport default DialogsContainer;\r\n"]},"metadata":{},"sourceType":"module"}