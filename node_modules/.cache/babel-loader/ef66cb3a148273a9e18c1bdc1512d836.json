{"ast":null,"code":"import { loginApi, profileApi } from \"../../compo/api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  rememberMe: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.data\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // actionCreator\n\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login,\n    isAuth\n  }\n}); // thunkCreator\n\nexport const loginMeThunk = () => async dispatch => {\n  let data = await profileApi.getLoginMeApi();\n\n  if (data.resultCode === 0) {\n    let {\n      id,\n      login,\n      email\n    } = data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\nexport const loginThunk = (email, password, rememberMe) => async dispatch => {\n  let data = await loginApi.loginApi(email, password, rememberMe);\n\n  if (data.resultCode === 0) {\n    dispatch(loginMeThunk());\n  }\n};\nexport const logoutThunk = () => async dispatch => {\n  let data = await loginApi.logoutApi();\n\n  if (data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/reducers/authReducer.js"],"names":["loginApi","profileApi","SET_USER_DATA","initialState","id","email","login","isAuth","rememberMe","authReducer","state","action","type","data","setAuthUserData","loginMeThunk","dispatch","getLoginMeApi","resultCode","loginThunk","password","logoutThunk","logoutApi"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,UAAlB,QAAmC,qBAAnC;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE,KAJO;AAKfC,EAAAA,UAAU,EAAE;AALG,CAAnB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGQ,KADA;AAEH,aAAGC,MAAM,CAACE;AAFP,SAAP;AAIH;;AACD;AACI,aAAOH,KAAP;AARR;AAUH,CAXD,C,CAYA;;;AACA,OAAO,MAAMI,eAAe,GAAG,CAACV,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmBC,MAAnB,MAA+B;AAACK,EAAAA,IAAI,EAAEV,aAAP;AAAsBW,EAAAA,IAAI,EAAE;AAACT,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB;AAA5B,CAA/B,CAAxB,C,CAEP;;AACA,OAAO,MAAMQ,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClD,MAAIH,IAAI,GAAG,MAAMZ,UAAU,CAACgB,aAAX,EAAjB;;AACA,MAAIJ,IAAI,CAACK,UAAL,KAAoB,CAAxB,EAA2B;AACvB,QAAI;AAACd,MAAAA,EAAD;AAAKE,MAAAA,KAAL;AAAYD,MAAAA;AAAZ,QAAqBQ,IAAI,CAACA,IAA9B;AACAG,IAAAA,QAAQ,CAACF,eAAe,CAACV,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,CANM;AAOP,OAAO,MAAMa,UAAU,GAAG,CAACd,KAAD,EAAQe,QAAR,EAAkBZ,UAAlB,KAAiC,MAAOQ,QAAP,IAAoB;AAC3E,MAAIH,IAAI,GAAG,MAAMb,QAAQ,CAACA,QAAT,CAAkBK,KAAlB,EAAyBe,QAAzB,EAAmCZ,UAAnC,CAAjB;;AACA,MAAIK,IAAI,CAACK,UAAL,KAAoB,CAAxB,EAA2B;AACvBF,IAAAA,QAAQ,CAACD,YAAY,EAAb,CAAR;AACH;AACJ,CALM;AAMP,OAAO,MAAMM,WAAW,GAAG,MAAM,MAAOL,QAAP,IAAoB;AACjD,MAAIH,IAAI,GAAG,MAAMb,QAAQ,CAACsB,SAAT,EAAjB;;AACA,MAAIT,IAAI,CAACK,UAAL,KAAoB,CAAxB,EAA2B;AACvBF,IAAAA,QAAQ,CAACF,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAhB,CAAR;AACH;AACJ,CALM;AASP,eAAeL,WAAf","sourcesContent":["import {loginApi, profileApi} from \"../../compo/api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    rememberMe: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// actionCreator\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth} });\r\n\r\n// thunkCreator\r\nexport const loginMeThunk = () => async (dispatch) => {\r\n    let data = await profileApi.getLoginMeApi()\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const loginThunk = (email, password, rememberMe) => async (dispatch) => {\r\n    let data = await loginApi.loginApi(email, password, rememberMe)\r\n    if (data.resultCode === 0) {\r\n        dispatch(loginMeThunk())\r\n    }\r\n}\r\nexport const logoutThunk = () => async (dispatch) => {\r\n    let data = await loginApi.logoutApi()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}