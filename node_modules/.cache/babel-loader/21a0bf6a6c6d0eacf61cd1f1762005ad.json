{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Users\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport ums from './Users.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 15\n  } = _ref;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    if (pages.length < 15) {\n      pages.push(i);\n    }\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  const [numberPortion, setNumberPortion] = useState(1);\n  let rightBorder = (numberPortion - 1) * portionSize + 1;\n  let lefttBorder = numberPortion * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ums.num_bar,\n    children: [numberPortion > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNumberPortion(numberPortion - 1);\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 35\n    }, this), pages.map(p => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: currentPage === p && ums.selected,\n      onClick: e => onPageChanged(p),\n      children: [\" \", p, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }, this)), numberPortion < portionCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNumberPortion(numberPortion + 1);\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"Trkiu/WU9XPaJAoqHC6Y2oCD2CM=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/Pagination.jsx"],"names":["ums","useState","Pagination","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","length","push","portionCount","numberPortion","setNumberPortion","rightBorder","lefttBorder","num_bar","map","p","selected","e"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,UAAU,GAAG,QAAgF;AAAA;;AAAA,MAA/E;AAACC,IAAAA,eAAD;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA,aAAzC;AAAwDC,IAAAA,WAAW,GAAG;AAAtE,GAA+E;AAC/F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClC,QAAID,KAAK,CAACE,MAAN,GAAe,EAAnB,EAAuB;AACnBF,MAAAA,KAAK,CAACG,IAAN,CAAWF,CAAX;AACH;AACJ;;AAED,MAAIG,YAAY,GAAGN,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAlD;AACA,MAAIiB,WAAW,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBT,WAAtB,GAAoC,CAAtD;AACA,MAAIY,WAAW,GAAGH,aAAa,GAAGT,WAAlC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEP,GAAG,CAACoB,OAApB;AAAA,eACKJ,aAAa,GAAG,CAAhB,iBAAqB;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAoC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD1B,EAEKL,KAAK,CAACU,GAAN,CAAUC,CAAC,iBAAI;AAAM,MAAA,SAAS,EAAGjB,WAAW,KAAKiB,CAAhB,IAAqBtB,GAAG,CAACuB,QAA3C;AAAqD,MAAA,OAAO,EAAGC,CAAD,IAAOlB,aAAa,CAACgB,CAAD,CAAlF;AAAA,sBAA0FA,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf,CAFL,EAGKN,aAAa,GAAGD,YAAhB,iBAAgC;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACE,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAoC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHrC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArBD;;GAAMd,U;;KAAAA,U;AAuBN,eAAeA,UAAf","sourcesContent":["import ums from './Users.module.css'\r\nimport {useState} from 'react'\r\n\r\nconst Pagination = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 15 }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        if (pages.length < 15) {\r\n            pages.push(i);\r\n        }\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [numberPortion, setNumberPortion] = useState(1)\r\n    let rightBorder = (numberPortion - 1) * portionSize + 1\r\n    let lefttBorder = numberPortion * portionSize\r\n\r\n    return (\r\n        <div className={ums.num_bar}>\r\n            {numberPortion > 1 && <button onClick={() => {setNumberPortion(numberPortion - 1)}}>Prev</button>}\r\n            {pages.map(p => <span className={ currentPage === p && ums.selected} onClick={(e) => onPageChanged(p) }> {p} </span>) }\r\n            {numberPortion < portionCount && <button onClick={() => {setNumberPortion(numberPortion + 1)}}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}