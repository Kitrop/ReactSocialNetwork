{"ast":null,"code":"import { loginMeThunk } from \"./authReducer\";\nconst SET_INITIALIZED = 'SET_INITIALIZED';\nconst initialState = {\n  initialized: false\n};\n\nconst appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n}; // actionCreator\n\n\nconst initializingAC = () => ({\n  type: SET_INITIALIZED\n}); // thunkCreator\n\n\nexport const initializeApp = () => async dispatch => {\n  let promise = dispatch(loginMeThunk());\n  await Promise.all([promise]);\n  dispatch(initializingAC());\n};\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/reducers/appReducer.js"],"names":["loginMeThunk","SET_INITIALIZED","initialState","initialized","appReducer","state","action","type","initializingAC","initializeApp","dispatch","promise","Promise","all"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,eAA3B;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;;AAIA,MAAMC,UAAU,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,eAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD,C,CAaA;;;AACA,MAAMG,cAAc,GAAG,OAAO;AAACD,EAAAA,IAAI,EAACN;AAAN,CAAP,CAAvB,C,CAEA;;;AAEA,OAAO,MAAMQ,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAIC,OAAO,GAAGD,QAAQ,CAACV,YAAY,EAAb,CAAtB;AACA,QAAMY,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,CAAN;AACAD,EAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACH,CAJM;AAMP,eAAeJ,UAAf","sourcesContent":["import {loginMeThunk} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// actionCreator\r\nconst initializingAC = () => ({type:SET_INITIALIZED})\r\n\r\n// thunkCreator\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(loginMeThunk());\r\n    await Promise.all([promise])\r\n    dispatch(initializingAC());\r\n}\r\n\r\nexport default appReducer"]},"metadata":{},"sourceType":"module"}