{"ast":null,"code":"import _objectSpread from\"C:/Users/artem/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import myPosts from'./Profile.module.css';import'../Profile/Posts/MyPosts';import Profile from\"./Profile\";import{useEffect}from\"react\";import{connect}from\"react-redux\";import{getProfileStatus,getProfileThunk,putProfileStatus,setUserProfile}from\"../../redux/reducers/profileReducer\";import{useNavigate,useParams}from\"react-router-dom\";import{getIsAuth}from\"../../redux/selectors/authSelector\";import{profilePageState,profileStatusState}from\"../../redux/selectors/profileSelector\";import{jsx as _jsx}from\"react/jsx-runtime\";var ProfileContainer=function ProfileContainer(props){var navigate=useNavigate();useEffect(function(){if(props.isAuth===false){return navigate(\"/login\");}},[props.isAuth]);var _useParams=useParams(),userId=_useParams.userId;useEffect(function(){props.getProfileThunk(userId);props.getProfileStatus(userId);},[userId]);return/*#__PURE__*/_jsx(\"div\",{className:myPosts.content,children:/*#__PURE__*/_jsx(Profile,_objectSpread(_objectSpread({},props),{},{profile:props.profile,params:useParams(),isAuth:props.isAuth,status:props.status,putProfileStatus:props.putProfileStatus}))});};var mapStateToProps=function mapStateToProps(state){return{profile:profilePageState(state),status:profileStatusState(state),isAuth:getIsAuth(state)};};export default connect(mapStateToProps,{setUserProfile:setUserProfile,getProfileThunk:getProfileThunk,getProfileStatus:getProfileStatus,putProfileStatus:putProfileStatus})(ProfileContainer);","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Profile/ProfileContainer.jsx"],"names":["myPosts","Profile","useEffect","connect","getProfileStatus","getProfileThunk","putProfileStatus","setUserProfile","useNavigate","useParams","getIsAuth","profilePageState","profileStatusState","ProfileContainer","props","navigate","isAuth","userId","content","profile","status","mapStateToProps","state"],"mappings":"0GAAA,MAAOA,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAR,CAA0BC,eAA1B,CAA2CC,gBAA3C,CAA6DC,cAA7D,KAAkF,qCAAlF,CACA,OAAQC,WAAR,CAAqBC,SAArB,KAAqC,kBAArC,CACA,OAAQC,SAAR,KAAwB,oCAAxB,CACA,OAAQC,gBAAR,CAA0BC,kBAA1B,KAAmD,uCAAnD,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAEhC,GAAIC,CAAAA,QAAQ,CAAGP,WAAW,EAA1B,CACAN,SAAS,CAAC,UAAI,CACV,GAAGY,KAAK,CAACE,MAAN,GAAiB,KAApB,CAA0B,CACtB,MAAOD,CAAAA,QAAQ,CAAC,QAAD,CAAf,CACH,CACJ,CAJQ,CAIN,CAACD,KAAK,CAACE,MAAP,CAJM,CAAT,CAOA,eAAeP,SAAS,EAAxB,CAAKQ,MAAL,YAAKA,MAAL,CACAf,SAAS,CAAC,UAAM,CACZY,KAAK,CAACT,eAAN,CAAsBY,MAAtB,EACAH,KAAK,CAACV,gBAAN,CAAuBa,MAAvB,EACH,CAHQ,CAGN,CAACA,MAAD,CAHM,CAAT,CAKA,mBACI,YAAK,SAAS,CAAEjB,OAAO,CAACkB,OAAxB,uBACI,KAAC,OAAD,gCAAaJ,KAAb,MAAoB,OAAO,CAAEA,KAAK,CAACK,OAAnC,CAA4C,MAAM,CAAEV,SAAS,EAA7D,CAAiE,MAAM,CAAEK,KAAK,CAACE,MAA/E,CAAuF,MAAM,CAAIF,KAAK,CAACM,MAAvG,CAA+G,gBAAgB,CAAEN,KAAK,CAACR,gBAAvI,GADJ,EADJ,CAKH,CArBD,CAwBA,GAAIe,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAC9BH,OAAO,CAAER,gBAAgB,CAACW,KAAD,CADK,CAE9BF,MAAM,CAAER,kBAAkB,CAACU,KAAD,CAFI,CAG9BN,MAAM,CAAEN,SAAS,CAACY,KAAD,CAHa,CAAZ,EAAtB,CAMA,cAAenB,CAAAA,OAAO,CAACkB,eAAD,CAAiB,CAACd,cAAc,CAAdA,cAAD,CAAiBF,eAAe,CAAfA,eAAjB,CAAkCD,gBAAgB,CAAhBA,gBAAlC,CAAoDE,gBAAgB,CAAhBA,gBAApD,CAAjB,CAAP,CAA+FO,gBAA/F,CAAf","sourcesContent":["import myPosts from './Profile.module.css'\r\nimport '../Profile/Posts/MyPosts'\r\nimport Profile from \"./Profile\";\r\nimport {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileStatus, getProfileThunk, putProfileStatus, setUserProfile} from \"../../redux/reducers/profileReducer\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {getIsAuth} from \"../../redux/selectors/authSelector\";\r\nimport {profilePageState, profileStatusState} from \"../../redux/selectors/profileSelector\";\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    let navigate = useNavigate()\r\n    useEffect(()=>{\r\n        if(props.isAuth === false){\r\n            return navigate(\"/login\")\r\n        }\r\n    }, [props.isAuth])\r\n\r\n\r\n    let {userId} = useParams()\r\n    useEffect(() => {\r\n        props.getProfileThunk(userId)\r\n        props.getProfileStatus(userId)\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div className={myPosts.content}>\r\n            <Profile {...props} profile={props.profile} params={useParams()} isAuth={props.isAuth} status = {props.status} putProfileStatus={props.putProfileStatus} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: profilePageState(state),\r\n    status: profileStatusState(state),\r\n    isAuth: getIsAuth(state)\r\n});\r\n\r\nexport default connect(mapStateToProps,{setUserProfile, getProfileThunk, getProfileStatus, putProfileStatus})(ProfileContainer);"]},"metadata":{},"sourceType":"module"}