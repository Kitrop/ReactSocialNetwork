{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"fbf5b600-2f44-40fb-bc63-1e40c8ffb8fc\"\n  }\n}); // API\n\nexport const getUserApi = (currentPage, pageSize) => {\n  return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(r => {\n    return r.data;\n  });\n};\nexport const postUserApi = id => {\n  return instance.post(`follow/${id}`, {}).then(r => {\n    return r.data;\n  });\n};\nexport const deleteUserApi = id => {\n  return instance.delete(`follow/${id}`).then(r => {\n    return r.data;\n  });\n};\nexport const getProfileAPI = userId => {\n  return instance.get(`profile/` + userId).then(r => {\n    return r.data;\n  });\n};\nexport const getLoginApi = () => {\n  return instance.get(`auth/me`).then(r => {\n    return r.data;\n  });\n};\nexport const userApi = {\n  getUserApi(currentPage, pageSize) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(r => {\n      return r.data;\n    });\n  },\n\n  postUserApi(id) {\n    return instance.post(`follow/${id}`, {}).then(r => {\n      return r.data;\n    });\n  },\n\n  deleteUserApi(id) {\n    return instance.delete(`follow/${id}`).then(r => {\n      return r.data;\n    });\n  }\n\n};\nexport const profileApi = {\n  getProfileAPI(userId) {\n    return instance.get(`profile/` + userId).then(r => {\n      return r.data;\n    });\n  },\n\n  getLoginApi() {\n    return instance.get(`auth/me`).then(r => {\n      return r.data;\n    });\n  },\n\n  getProfileStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  putProfileStatus(status) {\n    return instance.put(`profile/status`, {\n      status\n    });\n  }\n\n};","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","getUserApi","currentPage","pageSize","get","then","r","data","postUserApi","id","post","deleteUserApi","delete","getProfileAPI","userId","getLoginApi","userApi","profileApi","getProfileStatus","putProfileStatus","status","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"fbf5b600-2f44-40fb-bc63-1e40c8ffb8fc\"}\r\n});\r\n\r\n// API\r\nexport const getUserApi = (currentPage, pageSize) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(r => {\r\n            return r.data\r\n        })\r\n};\r\nexport const postUserApi= (id) => {\r\n    return instance.post(`follow/${id}`, {})\r\n        .then(r => {\r\n            return r.data\r\n        })\r\n};\r\nexport const deleteUserApi = (id) => {\r\n    return instance.delete(`follow/${id}`)\r\n        .then(r => {\r\n            return r.data\r\n        })\r\n}\r\nexport const getProfileAPI = (userId) => {\r\n    return instance.get(`profile/` + userId)\r\n        .then(r => {\r\n            return r.data\r\n        })\r\n};\r\nexport const getLoginApi = () => {\r\n    return instance.get(`auth/me`)\r\n        .then(r => {\r\n            return r.data\r\n        })\r\n}\r\n\r\nexport const userApi = {\r\n    getUserApi(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(r => {\r\n                return r.data\r\n            })\r\n    },\r\n    postUserApi(id){\r\n        return instance.post(`follow/${id}`, {})\r\n            .then(r => {\r\n                return r.data\r\n            })\r\n    },\r\n    deleteUserApi(id){\r\n        return instance.delete(`follow/${id}`)\r\n            .then(r => {\r\n                return r.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfileAPI(userId){\r\n        return instance.get(`profile/` + userId)\r\n            .then(r => {\r\n                return r.data\r\n            })\r\n    },\r\n    getLoginApi() {\r\n        return instance.get(`auth/me`)\r\n            .then(r => {\r\n                return r.data\r\n            })\r\n    },\r\n    getProfileStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    putProfileStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}