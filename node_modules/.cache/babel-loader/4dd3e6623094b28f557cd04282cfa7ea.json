{"ast":null,"code":"import message from'./Dialogs.module.css';import DialogItem from'./DialogItem/DialogsItem';import Message from\"./MessagesItem/Message\";import{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{getIsAuth,getMessage}from\"../../redux/selectors/dialogSelectors\";import DialogsForm from\"./DialogsForm\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dialogs(props){var isAuth=useSelector(function(state){return getIsAuth(state);});var navigator=useNavigate();useEffect(function(){if(isAuth===false){return navigator('/login');}},[isAuth,navigator]);var dialogsPage=useSelector(function(state){return getMessage(state);});var dialogsElements=dialogsPage.dialogsData.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{name:d.name,id:d.id},d.id);});var messagesElements=dialogsPage.messagesData.map(function(m){return/*#__PURE__*/_jsx(Message,{ava:m.ava,id:m.id,content:m.message},m.id);});var dispatch=useDispatch();// const sendMsgAC = (newMessageText) => dispatch(SendMessageActionCreator());\nvar sendMsgAC=function sendMsgAC(newMessageText){return dispatch({type:'SEND_MESSAGE',newMessageText:newMessageText});};return/*#__PURE__*/_jsxs(\"div\",{className:message.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:message.notify,children:dialogsElements}),/*#__PURE__*/_jsx(\"div\",{className:message.paper_dial,children:messagesElements}),/*#__PURE__*/_jsx(DialogsForm,{SendMessageActionCreater:sendMsgAC})]});}export default Dialogs;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Message/Dialogs.jsx"],"names":["message","DialogItem","Message","useEffect","useDispatch","useSelector","getIsAuth","getMessage","DialogsForm","useNavigate","Dialogs","props","isAuth","state","navigator","dialogsPage","dialogsElements","dialogsData","map","d","name","id","messagesElements","messagesData","m","ava","dispatch","sendMsgAC","newMessageText","type","dialogs","notify","paper_dial"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,SAAR,CAAmBC,UAAnB,KAAoC,uCAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAAQC,WAAR,KAA0B,kBAA1B,C,wFAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CAGpB,GAAMC,CAAAA,MAAM,CAAGP,WAAW,CAAE,SAAAQ,KAAK,QAAIP,CAAAA,SAAS,CAACO,KAAD,CAAb,EAAP,CAA1B,CACA,GAAIC,CAAAA,SAAS,CAAGL,WAAW,EAA3B,CACAN,SAAS,CAAC,UAAM,CACZ,GAAIS,MAAM,GAAK,KAAf,CAAsB,CAClB,MAAOE,CAAAA,SAAS,CAAC,QAAD,CAAhB,CACH,CACJ,CAJQ,CAIN,CAACF,MAAD,CAASE,SAAT,CAJM,CAAT,CAQA,GAAMC,CAAAA,WAAW,CAAGV,WAAW,CAAE,SAAAQ,KAAK,QAAIN,CAAAA,UAAU,CAACM,KAAD,CAAd,EAAP,CAA/B,CACA,GAAIG,CAAAA,eAAe,CAAGD,WAAW,CAACE,WAAZ,CAAwBC,GAAxB,CAA4B,SAAAC,CAAC,qBAAI,KAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAAqC,EAAE,CAAED,CAAC,CAACE,EAA3C,EAA+BF,CAAC,CAACE,EAAjC,CAAJ,EAA7B,CAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAGP,WAAW,CAACQ,YAAZ,CAAyBL,GAAzB,CAA6B,SAAAM,CAAC,qBAAI,KAAC,OAAD,EAAS,GAAG,CAAEA,CAAC,CAACC,GAAhB,CAAgC,EAAE,CAAED,CAAC,CAACH,EAAtC,CAA0C,OAAO,CAAEG,CAAC,CAACxB,OAArD,EAA0BwB,CAAC,CAACH,EAA5B,CAAJ,EAA9B,CAAvB,CAIA,GAAMK,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CACA;AACA,GAAMuB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,cAAD,QAAoBF,CAAAA,QAAQ,CAAC,CAACG,IAAI,CAAC,cAAN,CAAsBD,cAAc,CAAdA,cAAtB,CAAD,CAA5B,EAAlB,CAGA,mBACI,aAAK,SAAS,CAAE5B,OAAO,CAAC8B,OAAxB,wBACI,YAAK,SAAS,CAAE9B,OAAO,CAAC+B,MAAxB,UACKf,eADL,EADJ,cAII,YAAK,SAAS,CAAEhB,OAAO,CAACgC,UAAxB,UACKV,gBADL,EAJJ,cAOI,KAAC,WAAD,EAAa,wBAAwB,CAAEK,SAAvC,EAPJ,GADJ,CAWH,CAED,cAAejB,CAAAA,OAAf","sourcesContent":["import message from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from \"./MessagesItem/Message\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsAuth, getMessage} from \"../../redux/selectors/dialogSelectors\";\r\nimport DialogsForm from \"./DialogsForm\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction Dialogs(props) {\r\n\r\n\r\n    const isAuth = useSelector( state => getIsAuth(state))\r\n    let navigator = useNavigate()\r\n    useEffect(() => {\r\n        if (isAuth === false) {\r\n            return navigator('/login')\r\n        }\r\n    }, [isAuth, navigator]);\r\n\r\n\r\n\r\n    const dialogsPage = useSelector( state => getMessage(state))\r\n    let dialogsElements = dialogsPage.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElements = dialogsPage.messagesData.map(m => <Message ava={m.ava} key={m.id} id={m.id} content={m.message}/>)\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    // const sendMsgAC = (newMessageText) => dispatch(SendMessageActionCreator());\r\n    const sendMsgAC = (newMessageText) => dispatch({type:'SEND_MESSAGE', newMessageText})\r\n\r\n\r\n    return (\r\n        <div className={message.dialogs}>\r\n            <div className={message.notify}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={message.paper_dial}>\r\n                {messagesElements}\r\n            </div>\r\n            <DialogsForm SendMessageActionCreater={sendMsgAC}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}