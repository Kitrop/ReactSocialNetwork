{"ast":null,"code":"// actions\nimport { getProfileAPI, profileApi } from \"../compo/api/api\";\nconst ADD_POST = 'ADD-POST';\nconst NEW_TEXT_UPDATE = 'NEW-TEXT-UPDATE';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_PROFILE_STATUS = 'GET_PROFILE_STATUS';\nconst UPDATE_PROFILE_STATUS = 'UPDATE_PROFILE_STATUS'; // state\n\nlet initialState = {\n  postsData: [{\n    name: 'Evgeniy',\n    text: 'I need more React',\n    like: '16'\n  }, {\n    text: 'I love REACT!!!',\n    like: '45'\n  }],\n  newPostText: 'it-sphere',\n  profile: null,\n  status: null\n}; //reducer\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          name: 'Oleg',\n          text: state.newPostText,\n          like: '56'\n        };\n        return { ...state,\n          postsData: [...state.postsData, newPost],\n          newPostText: ''\n        };\n      }\n\n    case NEW_TEXT_UPDATE:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_PROFILE_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case UPDATE_PROFILE_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}; // actionCreater\n\n\nexport const addPostActionCreater = () => ({\n  type: ADD_POST\n});\nexport const updPostActionCreater = textPost => ({\n  type: NEW_TEXT_UPDATE,\n  newText: textPost\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setProfileStatus = status => ({\n  type: SET_PROFILE_STATUS,\n  status\n});\nexport const updateProfileStatus = status => ({\n  type: UPDATE_PROFILE_STATUS,\n  status\n}); // thunkCreator\n\nexport const getProfileThunk = userId => {\n  return dispatch => {\n    profileApi.getProfileAPI(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport const getProfileStatus = userId => {\n  return dispatch => {\n    profileApi.getProfileStatus(userId).then(data => {\n      dispatch(setProfileStatus(data));\n    });\n  };\n};\nexport const putProfileStatus = status => {\n  return dispatch => {\n    profileApi.putProfileStatus(status).then(data => {\n      dispatch(updateProfileStatus(data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/profileReducer.js"],"names":["getProfileAPI","profileApi","ADD_POST","NEW_TEXT_UPDATE","SET_USER_PROFILE","SET_PROFILE_STATUS","UPDATE_PROFILE_STATUS","initialState","postsData","name","text","like","newPostText","profile","status","profileReducer","state","action","type","newPost","newText","addPostActionCreater","updPostActionCreater","textPost","setUserProfile","setProfileStatus","updateProfileStatus","getProfileThunk","userId","dispatch","then","data","getProfileStatus","putProfileStatus"],"mappings":"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","sourcesContent":["// actions\r\nimport {getProfileAPI, profileApi} from \"../compo/api/api\";\r\n\r\nconst ADD_POST  = 'ADD-POST';\r\nconst NEW_TEXT_UPDATE  = 'NEW-TEXT-UPDATE';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_PROFILE_STATUS = 'GET_PROFILE_STATUS'\r\nconst UPDATE_PROFILE_STATUS = 'UPDATE_PROFILE_STATUS'\r\n\r\n// state\r\nlet initialState = {\r\n    postsData: [\r\n        {name: 'Evgeniy', text: 'I need more React', like: '16'},\r\n        {text: 'I love REACT!!!', like: '45'},\r\n    ],\r\n    newPostText: 'it-sphere',\r\n    profile: null,\r\n    status: null\r\n};\r\n\r\n//reducer\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n            name: 'Oleg',\r\n            text: state.newPostText,\r\n            like: '56',\r\n        };\r\n\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case NEW_TEXT_UPDATE: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_PROFILE_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case UPDATE_PROFILE_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n// actionCreater\r\nexport const addPostActionCreater = () =>({type: ADD_POST})\r\nexport const updPostActionCreater = (textPost) => ({type: NEW_TEXT_UPDATE, newText: textPost})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setProfileStatus = (status) => ({type: SET_PROFILE_STATUS, status})\r\nexport const updateProfileStatus = (status) => ({type: UPDATE_PROFILE_STATUS, status})\r\n\r\n// thunkCreator\r\nexport const getProfileThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileApi.getProfileAPI(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data))\r\n            })\r\n    }\r\n}\r\nexport const getProfileStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileApi.getProfileStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data))\r\n            })\r\n    }\r\n}\r\nexport const putProfileStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileApi.putProfileStatus(status)\r\n            .then(data => {\r\n                dispatch(updateProfileStatus(data))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}