{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Message\\\\Dialogs.jsx\",\n    _s = $RefreshSig$();\n\nimport message from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogsItem';\nimport Message from \"./MessagesItem/Message\";\nimport { createRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMessage } from \"../../redux/dialogSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dialogs(props) {\n  _s();\n\n  const dialogsPage = useSelector(getMessage);\n  const dispatch = useDispatch(); // let state = props.dialogsPage;\n\n  let dialogsElements = dialogsPage.dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 42\n  }, this));\n  let messagesElements = dialogsPage.messagesData.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    ava: m.ava,\n    id: m.id,\n    content: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 43\n  }, this));\n  let newMessageText = dialogsPage.newMessageText;\n  let newMessageElement = /*#__PURE__*/createRef();\n\n  let OnClickSendMessage = () => {\n    props.SendMessageActionCreater();\n  };\n\n  let OnNewMessageSend = e => {\n    let body = e.target.value;\n    props.UpdateNewMessageActionCreater(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: message.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.notify,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.paper_dial,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: OnNewMessageSend,\n        ref: newMessageElement,\n        value: newMessageText,\n        placeholder: \"Enter your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: message.mybutton,\n        onClick: OnClickSendMessage,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dialogs, \"cH/NgLU9VcNAqzBcY3R56OF+rB4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Message/Dialogs.jsx"],"names":["message","DialogItem","Message","createRef","useDispatch","useSelector","getMessage","Dialogs","props","dialogsPage","dispatch","dialogsElements","dialogsData","map","d","name","id","messagesElements","messagesData","m","ava","newMessageText","newMessageElement","OnClickSendMessage","SendMessageActionCreater","OnNewMessageSend","e","body","target","value","UpdateNewMessageActionCreater","dialogs","notify","paper_dial","mybutton"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,6BAAzB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEpB,QAAMC,WAAW,GAAGJ,WAAW,CAACC,UAAD,CAA/B;AACA,QAAMI,QAAQ,GAAGN,WAAW,EAA5B,CAHoB,CAKpB;;AAEA,MAAIO,eAAe,GACfF,WAAW,CAACG,WAAZ,CAAwBC,GAAxB,CAA4BC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAAqC,IAAA,EAAE,EAAED,CAAC,CAACE;AAA3C,KAA+BF,CAAC,CAACE,EAAjC;AAAA;AAAA;AAAA;AAAA,UAAjC,CADJ;AAEA,MAAIC,gBAAgB,GAChBR,WAAW,CAACS,YAAZ,CAAyBL,GAAzB,CAA6BM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAhB;AAAgC,IAAA,EAAE,EAAED,CAAC,CAACH,EAAtC;AAA0C,IAAA,OAAO,EAAEG,CAAC,CAACnB;AAArD,KAA0BmB,CAAC,CAACH,EAA5B;AAAA;AAAA;AAAA;AAAA,UAAlC,CADJ;AAEA,MAAIK,cAAc,GAAGZ,WAAW,CAACY,cAAjC;AAEA,MAAIC,iBAAiB,gBAAGnB,SAAS,EAAjC;;AAEA,MAAIoB,kBAAkB,GAAG,MAAM;AAC3Bf,IAAAA,KAAK,CAACgB,wBAAN;AACH,GAFD;;AAIA,MAAIC,gBAAgB,GAAIC,CAAD,IAAO;AAC1B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACArB,IAAAA,KAAK,CAACsB,6BAAN,CAAoCH,IAApC;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAE3B,OAAO,CAAC+B,OAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE/B,OAAO,CAACgC,MAAxB;AAAA,gBACKrB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACiC,UAAxB;AAAA,gBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI;AAAU,QAAA,QAAQ,EAAEQ,gBAApB;AAAsC,QAAA,GAAG,EAAEH,iBAA3C;AAA8D,QAAA,KAAK,EAAED,cAArE;AACU,QAAA,WAAW,EAAE;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAWI;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAErB,OAAO,CAACkC,QAA3B;AAAqC,QAAA,OAAO,EAAEX,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzCQhB,O;UAEeF,W,EACHD,W;;;KAHZG,O;AA2CT,eAAeA,OAAf","sourcesContent":["import message from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from \"./MessagesItem/Message\";\r\nimport {createRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMessage} from \"../../redux/dialogSelectors\";\r\n\r\nfunction Dialogs(props) {\r\n\r\n    const dialogsPage = useSelector(getMessage)\r\n    const dispatch = useDispatch()\r\n\r\n    // let state = props.dialogsPage;\r\n\r\n    let dialogsElements =\r\n        dialogsPage.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElements =\r\n        dialogsPage.messagesData.map(m => <Message ava={m.ava} key={m.id} id={m.id} content={m.message}/>)\r\n    let newMessageText = dialogsPage.newMessageText;\r\n\r\n    let newMessageElement = createRef();\r\n\r\n    let OnClickSendMessage = () => {\r\n        props.SendMessageActionCreater();\r\n    }\r\n\r\n    let OnNewMessageSend = (e) => {\r\n        let body = e.target.value;\r\n        props.UpdateNewMessageActionCreater(body);\r\n    }\r\n\r\n    return (\r\n        <div className={message.dialogs}>\r\n            <div className={message.notify}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={message.paper_dial}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <textarea onChange={OnNewMessageSend} ref={newMessageElement} value={newMessageText}\r\n                          placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button className={message.mybutton} onClick={OnClickSendMessage}>Send Message</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs\r\n"]},"metadata":{},"sourceType":"module"}