{"ast":null,"code":"import _objectSpread from\"C:/Users/artem/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{connect}from'react-redux';import Header from'./Header';import{useEffect}from'react';import{loginMeThunk,logoutThunk}from'../../redux/reducers/authReducer';import{getIsAuth,getLogin}from'../../redux/selectors/authSelector';import{jsx as _jsx}from\"react/jsx-runtime\";var HeaderContainer=function HeaderContainer(props){useEffect(function(){props.loginThunk();},[props]);return/*#__PURE__*/_jsx(Header,_objectSpread({},props));};var mapStateToProps=function mapStateToProps(state){return{isAuth:getIsAuth(state),login:getLogin(state)};};export default connect(mapStateToProps,{loginThunk:loginMeThunk,logoutThunk:logoutThunk})(HeaderContainer);","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Header/HeaderComponent.jsx"],"names":["connect","Header","useEffect","loginMeThunk","logoutThunk","getIsAuth","getLogin","HeaderContainer","props","loginThunk","mapStateToProps","state","isAuth","login"],"mappings":"0GAAA,OAAQA,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,OAAQC,YAAR,CAAsBC,WAAtB,KAAwC,kCAAxC,CACA,OAAQC,SAAR,CAAmBC,QAAnB,KAAkC,oCAAlC,C,2CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/BN,SAAS,CAAE,UAAM,CACbM,KAAK,CAACC,UAAN,GACH,CAFQ,CAEN,CAACD,KAAD,CAFM,CAAT,CAIA,mBAAO,KAAC,MAAD,kBAAYA,KAAZ,EAAP,CACH,CAND,CAQA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCC,MAAM,CAAEP,SAAS,CAACM,KAAD,CADe,CAEhCE,KAAK,CAAEP,QAAQ,CAACK,KAAD,CAFiB,CAAZ,EAAxB,CAKA,cAAeX,CAAAA,OAAO,CAACU,eAAD,CAAkB,CAACD,UAAU,CAAEN,YAAb,CAA2BC,WAAW,CAAXA,WAA3B,CAAlB,CAAP,CAAkEG,eAAlE,CAAf","sourcesContent":["import {connect} from 'react-redux'\r\nimport Header from './Header'\r\nimport {useEffect} from 'react'\r\nimport {loginMeThunk, logoutThunk} from '../../redux/reducers/authReducer'\r\nimport {getIsAuth, getLogin} from '../../redux/selectors/authSelector'\r\n\r\n\r\nconst HeaderContainer = (props) => {\r\n    useEffect( () => {\r\n        props.loginThunk()\r\n    }, [props]);\r\n\r\n    return <Header {...props}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, {loginThunk: loginMeThunk, logoutThunk})(HeaderContainer);"]},"metadata":{},"sourceType":"module"}