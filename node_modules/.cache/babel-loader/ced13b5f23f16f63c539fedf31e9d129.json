{"ast":null,"code":"import { Children, createContext, useContext, useRef, useEffect, useReducer, useCallback, useMemo, useImperativeHandle, createElement, useLayoutEffect, forwardRef, Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport clone from 'lodash-es/clone';\nimport toPath from 'lodash-es/toPath';\nimport invariant from 'tiny-warning';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport cloneDeep from 'lodash-es/cloneDeep';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n/** @private is the value an empty array? */\n\n\nvar isEmptyArray = function isEmptyArray(value) {\n  return Array.isArray(value) && value.length === 0;\n};\n/** @private is the given object a Function? */\n\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n/** @private is the given object an Object? */\n\n\nvar isObject = function isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n};\n/** @private is the given object an integer? */\n\n\nvar isInteger = function isInteger(obj) {\n  return String(Math.floor(Number(obj))) === obj;\n};\n/** @private is the given object a string? */\n\n\nvar isString = function isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n};\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\n\n\nvar isNaN$1 = function isNaN(obj) {\n  return obj !== obj;\n};\n/** @private Does a React component have exactly 0 children? */\n\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return Children.count(children) === 0;\n};\n/** @private is the given object/value a promise? */\n\n\nvar isPromise = function isPromise(value) {\n  return isObject(value) && isFunction(value.then);\n};\n/** @private is the given object/value a type of synthetic event? */\n\n\nvar isInputEvent = function isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n};\n/**\r\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\r\n * not safe to call document.activeElement if there is nothing focused.\r\n *\r\n * The activeElement will be null only if the document or document body is not\r\n * yet defined.\r\n *\r\n * @param {?Document} doc Defaults to current document.\r\n * @return {Element | null}\r\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\r\n */\n\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n/**\r\n * Deeply get a value from an object via its path.\r\n */\n\n\nfunction getIn(obj, key, def, p) {\n  if (p === void 0) {\n    p = 0;\n  }\n\n  var path = toPath(key);\n\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n\n  return obj === undefined ? def : obj;\n}\n/**\r\n * Deeply set a value from in object via it's path. If the value at `path`\r\n * has changed, return a shallow copy of obj with `value` set at `path`.\r\n * If `value` has not changed, return the original `obj`.\r\n *\r\n * Existing objects / arrays along `path` are also shallow copied. Sibling\r\n * objects along path retain the same internal js reference. Since new\r\n * objects / arrays are only created along `path`, we can test if anything\r\n * changed in a nested structure by comparing the object's reference in\r\n * the old and new object, similar to how russian doll cache invalidation\r\n * works.\r\n *\r\n * In earlier versions of this function, which used cloneDeep, there were\r\n * issues whereby settings a nested value would mutate the parent\r\n * instead of creating a new object. `clone` avoids that bug making a\r\n * shallow copy of the objects along the update path\r\n * so no object is mutated in place.\r\n *\r\n * Before changing this function, please read through the following\r\n * discussions.\r\n *\r\n * @see https://github.com/developit/linkstate\r\n * @see https://github.com/jaredpalmer/formik/pull/123\r\n */\n\n\nfunction setIn(obj, path, value) {\n  var res = clone(obj); // this keeps inheritance when obj is a class\n\n  var resVal = res;\n  var i = 0;\n  var pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    var currentPath = pathArray[i];\n    var currentObj = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      var nextPath = pathArray[i + 1];\n      resVal = resVal[currentPath] = isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  } // Return original object if new value is the same as current\n\n\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  } // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n\n\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n/**\r\n * Recursively a set the same value for all keys and arrays nested object, cloning\r\n * @param object\r\n * @param value\r\n * @param visited\r\n * @param response\r\n */\n\n\nfunction setNestedObjectValues(object, value, visited, response) {\n  if (visited === void 0) {\n    visited = new WeakMap();\n  }\n\n  if (response === void 0) {\n    response = {};\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(object); _i < _Object$keys.length; _i++) {\n    var k = _Object$keys[_i];\n    var val = object[k];\n\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true); // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\nvar FormikContext = /*#__PURE__*/createContext(undefined);\nFormikContext.displayName = 'FormikContext';\nvar FormikProvider = FormikContext.Provider;\nvar FormikConsumer = FormikContext.Consumer;\n\nfunction useFormikContext() {\n  var formik = useContext(FormikContext);\n  !!!formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.\") : invariant(false) : void 0;\n  return formik;\n}\n\nfunction formikReducer(state, msg) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return _extends({}, state, {\n        values: msg.payload\n      });\n\n    case 'SET_TOUCHED':\n      return _extends({}, state, {\n        touched: msg.payload\n      });\n\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        errors: msg.payload\n      });\n\n    case 'SET_STATUS':\n      return _extends({}, state, {\n        status: msg.payload\n      });\n\n    case 'SET_ISSUBMITTING':\n      return _extends({}, state, {\n        isSubmitting: msg.payload\n      });\n\n    case 'SET_ISVALIDATING':\n      return _extends({}, state, {\n        isValidating: msg.payload\n      });\n\n    case 'SET_FIELD_VALUE':\n      return _extends({}, state, {\n        values: setIn(state.values, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_TOUCHED':\n      return _extends({}, state, {\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_ERROR':\n      return _extends({}, state, {\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value)\n      });\n\n    case 'RESET_FORM':\n      return _extends({}, state, msg.payload);\n\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n\n    case 'SUBMIT_ATTEMPT':\n      return _extends({}, state, {\n        touched: setNestedObjectValues(state.values, true),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1\n      });\n\n    case 'SUBMIT_FAILURE':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    case 'SUBMIT_SUCCESS':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    default:\n      return state;\n  }\n} // Initial empty states // objects\n\n\nvar emptyErrors = {};\nvar emptyTouched = {};\n\nfunction useFormik(_ref) {\n  var _ref$validateOnChange = _ref.validateOnChange,\n      validateOnChange = _ref$validateOnChange === void 0 ? true : _ref$validateOnChange,\n      _ref$validateOnBlur = _ref.validateOnBlur,\n      validateOnBlur = _ref$validateOnBlur === void 0 ? true : _ref$validateOnBlur,\n      _ref$validateOnMount = _ref.validateOnMount,\n      validateOnMount = _ref$validateOnMount === void 0 ? false : _ref$validateOnMount,\n      isInitialValid = _ref.isInitialValid,\n      _ref$enableReinitiali = _ref.enableReinitialize,\n      enableReinitialize = _ref$enableReinitiali === void 0 ? false : _ref$enableReinitiali,\n      onSubmit = _ref.onSubmit,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"validateOnChange\", \"validateOnBlur\", \"validateOnMount\", \"isInitialValid\", \"enableReinitialize\", \"onSubmit\"]);\n\n  var props = _extends({\n    validateOnChange: validateOnChange,\n    validateOnBlur: validateOnBlur,\n    validateOnMount: validateOnMount,\n    onSubmit: onSubmit\n  }, rest);\n\n  var initialValues = useRef(props.initialValues);\n  var initialErrors = useRef(props.initialErrors || emptyErrors);\n  var initialTouched = useRef(props.initialTouched || emptyTouched);\n  var initialStatus = useRef(props.initialStatus);\n  var isMounted = useRef(false);\n  var fieldRegistry = useRef({});\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !(typeof isInitialValid === 'undefined') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.') : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  }\n\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n\n  var _React$useReducer = useReducer(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0\n  }),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var runValidateHandler = useCallback(function (values, field) {\n    return new Promise(function (resolve, reject) {\n      var maybePromisedErrors = props.validate(values, field);\n\n      if (maybePromisedErrors == null) {\n        // use loose null check here on purpose\n        resolve(emptyErrors);\n      } else if (isPromise(maybePromisedErrors)) {\n        maybePromisedErrors.then(function (errors) {\n          resolve(errors || emptyErrors);\n        }, function (actualException) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Warning: An unhandled error was caught during validation in <Formik validate />\", actualException);\n          }\n\n          reject(actualException);\n        });\n      } else {\n        resolve(maybePromisedErrors);\n      }\n    });\n  }, [props.validate]);\n  /**\r\n   * Run validation against a Yup schema and optionally run a function if successful\r\n   */\n\n  var runValidationSchema = useCallback(function (values, field) {\n    var validationSchema = props.validationSchema;\n    var schema = isFunction(validationSchema) ? validationSchema(field) : validationSchema;\n    var promise = field && schema.validateAt ? schema.validateAt(field, values) : validateYupSchema(values, schema);\n    return new Promise(function (resolve, reject) {\n      promise.then(function () {\n        resolve(emptyErrors);\n      }, function (err) {\n        // Yup will throw a validation error if validation fails. We catch those and\n        // resolve them into Formik errors. We can sniff if something is a Yup error\n        // by checking error.name.\n        // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n        if (err.name === 'ValidationError') {\n          resolve(yupToFormErrors(err));\n        } else {\n          // We throw any other errors\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Warning: An unhandled error was caught during validation in <Formik validationSchema />\", err);\n          }\n\n          reject(err);\n        }\n      });\n    });\n  }, [props.validationSchema]);\n  var runSingleFieldLevelValidation = useCallback(function (field, value) {\n    return new Promise(function (resolve) {\n      return resolve(fieldRegistry.current[field].validate(value));\n    });\n  }, []);\n  var runFieldLevelValidations = useCallback(function (values) {\n    var fieldKeysWithValidation = Object.keys(fieldRegistry.current).filter(function (f) {\n      return isFunction(fieldRegistry.current[f].validate);\n    }); // Construct an array with all of the field validation functions\n\n    var fieldValidations = fieldKeysWithValidation.length > 0 ? fieldKeysWithValidation.map(function (f) {\n      return runSingleFieldLevelValidation(f, getIn(values, f));\n    }) : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n    return Promise.all(fieldValidations).then(function (fieldErrorsList) {\n      return fieldErrorsList.reduce(function (prev, curr, index) {\n        if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n          return prev;\n        }\n\n        if (curr) {\n          prev = setIn(prev, fieldKeysWithValidation[index], curr);\n        }\n\n        return prev;\n      }, {});\n    });\n  }, [runSingleFieldLevelValidation]); // Run all validations and return the result\n\n  var runAllValidations = useCallback(function (values) {\n    return Promise.all([runFieldLevelValidations(values), props.validationSchema ? runValidationSchema(values) : {}, props.validate ? runValidateHandler(values) : {}]).then(function (_ref2) {\n      var fieldErrors = _ref2[0],\n          schemaErrors = _ref2[1],\n          validateErrors = _ref2[2];\n      var combinedErrors = deepmerge.all([fieldErrors, schemaErrors, validateErrors], {\n        arrayMerge: arrayMerge\n      });\n      return combinedErrors;\n    });\n  }, [props.validate, props.validationSchema, runFieldLevelValidations, runValidateHandler, runValidationSchema]); // Run all validations methods and update state accordingly\n\n  var validateFormWithHighPriority = useEventCallback(function (values) {\n    if (values === void 0) {\n      values = state.values;\n    }\n\n    dispatch({\n      type: 'SET_ISVALIDATING',\n      payload: true\n    });\n    return runAllValidations(values).then(function (combinedErrors) {\n      if (!!isMounted.current) {\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n        dispatch({\n          type: 'SET_ERRORS',\n          payload: combinedErrors\n        });\n      }\n\n      return combinedErrors;\n    });\n  });\n  useEffect(function () {\n    if (validateOnMount && isMounted.current === true && isEqual(initialValues.current, props.initialValues)) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n  var resetForm = useCallback(function (nextState) {\n    var values = nextState && nextState.values ? nextState.values : initialValues.current;\n    var errors = nextState && nextState.errors ? nextState.errors : initialErrors.current ? initialErrors.current : props.initialErrors || {};\n    var touched = nextState && nextState.touched ? nextState.touched : initialTouched.current ? initialTouched.current : props.initialTouched || {};\n    var status = nextState && nextState.status ? nextState.status : initialStatus.current ? initialStatus.current : props.initialStatus;\n    initialValues.current = values;\n    initialErrors.current = errors;\n    initialTouched.current = touched;\n    initialStatus.current = status;\n\n    var dispatchFn = function dispatchFn() {\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors: errors,\n          touched: touched,\n          status: status,\n          values: values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount: !!nextState && !!nextState.submitCount && typeof nextState.submitCount === 'number' ? nextState.submitCount : 0\n        }\n      });\n    };\n\n    if (props.onReset) {\n      var maybePromisedOnReset = props.onReset(state.values, imperativeMethods);\n\n      if (isPromise(maybePromisedOnReset)) {\n        maybePromisedOnReset.then(dispatchFn);\n      } else {\n        dispatchFn();\n      }\n    } else {\n      dispatchFn();\n    }\n  }, [props.initialErrors, props.initialStatus, props.initialTouched]);\n  useEffect(function () {\n    if (isMounted.current === true && !isEqual(initialValues.current, props.initialValues)) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [enableReinitialize, props.initialValues, resetForm, validateOnMount, validateFormWithHighPriority]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialErrors.current, props.initialErrors)) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialTouched.current, props.initialTouched)) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialStatus.current, props.initialStatus)) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n  var validateField = useEventCallback(function (name) {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n    if (fieldRegistry.current[name] && isFunction(fieldRegistry.current[name].validate)) {\n      var value = getIn(state.values, name);\n      var maybePromise = fieldRegistry.current[name].validate(value);\n\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: true\n        });\n        return maybePromise.then(function (x) {\n          return x;\n        }).then(function (error) {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: {\n              field: name,\n              value: error\n            }\n          });\n          dispatch({\n            type: 'SET_ISVALIDATING',\n            payload: false\n          });\n        });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise\n          }\n        });\n        return Promise.resolve(maybePromise);\n      }\n    } else if (props.validationSchema) {\n      dispatch({\n        type: 'SET_ISVALIDATING',\n        payload: true\n      });\n      return runValidationSchema(state.values, name).then(function (x) {\n        return x;\n      }).then(function (error) {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: error[name]\n          }\n        });\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n      });\n    }\n\n    return Promise.resolve();\n  });\n  var registerField = useCallback(function (name, _ref3) {\n    var validate = _ref3.validate;\n    fieldRegistry.current[name] = {\n      validate: validate\n    };\n  }, []);\n  var unregisterField = useCallback(function (name) {\n    delete fieldRegistry.current[name];\n  }, []);\n  var setTouched = useEventCallback(function (touched, shouldValidate) {\n    dispatch({\n      type: 'SET_TOUCHED',\n      payload: touched\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var setErrors = useCallback(function (errors) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: errors\n    });\n  }, []);\n  var setValues = useEventCallback(function (values, shouldValidate) {\n    var resolvedValues = isFunction(values) ? values(state.values) : values;\n    dispatch({\n      type: 'SET_VALUES',\n      payload: resolvedValues\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(resolvedValues) : Promise.resolve();\n  });\n  var setFieldError = useCallback(function (field, value) {\n    dispatch({\n      type: 'SET_FIELD_ERROR',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  }, []);\n  var setFieldValue = useEventCallback(function (field, value, shouldValidate) {\n    dispatch({\n      type: 'SET_FIELD_VALUE',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(setIn(state.values, field, value)) : Promise.resolve();\n  });\n  var executeChange = useCallback(function (eventOrTextValue, maybePath) {\n    // By default, assume that the first argument is a string. This allows us to use\n    // handleChange with React Native and React Native Web's onChangeText prop which\n    // provides just the value of the input.\n    var field = maybePath;\n    var val = eventOrTextValue;\n    var parsed; // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n    // so we handle like we would a normal HTML change event.\n\n    if (!isString(eventOrTextValue)) {\n      // If we can, persist the event\n      // @see https://reactjs.org/docs/events.html#event-pooling\n      if (eventOrTextValue.persist) {\n        eventOrTextValue.persist();\n      }\n\n      var target = eventOrTextValue.target ? eventOrTextValue.target : eventOrTextValue.currentTarget;\n      var type = target.type,\n          name = target.name,\n          id = target.id,\n          value = target.value,\n          checked = target.checked,\n          outerHTML = target.outerHTML,\n          options = target.options,\n          multiple = target.multiple;\n      field = maybePath ? maybePath : name ? name : id;\n\n      if (!field && process.env.NODE_ENV !== \"production\") {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n          handlerName: 'handleChange'\n        });\n      }\n\n      val = /number|range/.test(type) ? (parsed = parseFloat(value), isNaN(parsed) ? '' : parsed) : /checkbox/.test(type) // checkboxes\n      ? getValueForCheckbox(getIn(state.values, field), checked, value) : options && multiple // <select multiple>\n      ? getSelectedValues(options) : value;\n    }\n\n    if (field) {\n      // Set form fields by name\n      setFieldValue(field, val);\n    }\n  }, [setFieldValue, state.values]);\n  var handleChange = useEventCallback(function (eventOrPath) {\n    if (isString(eventOrPath)) {\n      return function (event) {\n        return executeChange(event, eventOrPath);\n      };\n    } else {\n      executeChange(eventOrPath);\n    }\n  });\n  var setFieldTouched = useEventCallback(function (field, touched, shouldValidate) {\n    if (touched === void 0) {\n      touched = true;\n    }\n\n    dispatch({\n      type: 'SET_FIELD_TOUCHED',\n      payload: {\n        field: field,\n        value: touched\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var executeBlur = useCallback(function (e, path) {\n    if (e.persist) {\n      e.persist();\n    }\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        id = _e$target.id,\n        outerHTML = _e$target.outerHTML;\n    var field = path ? path : name ? name : id;\n\n    if (!field && process.env.NODE_ENV !== \"production\") {\n      warnAboutMissingIdentifier({\n        htmlContent: outerHTML,\n        documentationAnchorLink: 'handleblur-e-any--void',\n        handlerName: 'handleBlur'\n      });\n    }\n\n    setFieldTouched(field, true);\n  }, [setFieldTouched]);\n  var handleBlur = useEventCallback(function (eventOrString) {\n    if (isString(eventOrString)) {\n      return function (event) {\n        return executeBlur(event, eventOrString);\n      };\n    } else {\n      executeBlur(eventOrString);\n    }\n  });\n  var setFormikState = useCallback(function (stateOrCb) {\n    if (isFunction(stateOrCb)) {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: stateOrCb\n      });\n    } else {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: function payload() {\n          return stateOrCb;\n        }\n      });\n    }\n  }, []);\n  var setStatus = useCallback(function (status) {\n    dispatch({\n      type: 'SET_STATUS',\n      payload: status\n    });\n  }, []);\n  var setSubmitting = useCallback(function (isSubmitting) {\n    dispatch({\n      type: 'SET_ISSUBMITTING',\n      payload: isSubmitting\n    });\n  }, []);\n  var submitForm = useEventCallback(function () {\n    dispatch({\n      type: 'SUBMIT_ATTEMPT'\n    });\n    return validateFormWithHighPriority().then(function (combinedErrors) {\n      // In case an error was thrown and passed to the resolved Promise,\n      // `combinedErrors` can be an instance of an Error. We need to check\n      // that and abort the submit.\n      // If we don't do that, calling `Object.keys(new Error())` yields an\n      // empty array, which causes the validation to pass and the form\n      // to be submitted.\n      var isInstanceOfError = combinedErrors instanceof Error;\n      var isActuallyValid = !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n\n      if (isActuallyValid) {\n        // Proceed with submit...\n        //\n        // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n        // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n        // This would be fine in simple cases, but make it impossible to disable submit\n        // buttons where people use callbacks or promises as side effects (which is basically\n        // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n        //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n        // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n        // cleanup of isSubmitting on behalf of the consumer.\n        var promiseOrUndefined;\n\n        try {\n          promiseOrUndefined = executeSubmit(); // Bail if it's sync, consumer is responsible for cleaning up\n          // via setSubmitting(false)\n\n          if (promiseOrUndefined === undefined) {\n            return;\n          }\n        } catch (error) {\n          throw error;\n        }\n\n        return Promise.resolve(promiseOrUndefined).then(function (result) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_SUCCESS'\n            });\n          }\n\n          return result;\n        })[\"catch\"](function (_errors) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_FAILURE'\n            }); // This is a legit error rejected by the onSubmit fn\n            // so we don't want to break the promise chain\n\n            throw _errors;\n          }\n        });\n      } else if (!!isMounted.current) {\n        // ^^^ Make sure Formik is still mounted before updating state\n        dispatch({\n          type: 'SUBMIT_FAILURE'\n        }); // throw combinedErrors;\n\n        if (isInstanceOfError) {\n          throw combinedErrors;\n        }\n      }\n\n      return;\n    });\n  });\n  var handleSubmit = useEventCallback(function (e) {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    } // Warn if form submission is triggered by a <button> without a\n    // specified `type` attribute during development. This mitigates\n    // a common gotcha in forms with both reset and submit buttons,\n    // where the dev forgets to add type=\"button\" to the reset button.\n\n\n    if (process.env.NODE_ENV !== \"production\" && typeof document !== 'undefined') {\n      // Safely get the active element (works with IE)\n      var activeElement = getActiveElement();\n\n      if (activeElement !== null && activeElement instanceof HTMLButtonElement) {\n        !(activeElement.attributes && activeElement.attributes.getNamedItem('type')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.') : invariant(false) : void 0;\n      }\n    }\n\n    submitForm()[\"catch\"](function (reason) {\n      console.warn(\"Warning: An unhandled error was caught from submitForm()\", reason);\n    });\n  });\n  var imperativeMethods = {\n    resetForm: resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    setErrors: setErrors,\n    setFieldError: setFieldError,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    setFormikState: setFormikState,\n    submitForm: submitForm\n  };\n  var executeSubmit = useEventCallback(function () {\n    return onSubmit(state.values, imperativeMethods);\n  });\n  var handleReset = useEventCallback(function (e) {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n  var getFieldMeta = useCallback(function (name) {\n    return {\n      value: getIn(state.values, name),\n      error: getIn(state.errors, name),\n      touched: !!getIn(state.touched, name),\n      initialValue: getIn(initialValues.current, name),\n      initialTouched: !!getIn(initialTouched.current, name),\n      initialError: getIn(initialErrors.current, name)\n    };\n  }, [state.errors, state.touched, state.values]);\n  var getFieldHelpers = useCallback(function (name) {\n    return {\n      setValue: function setValue(value, shouldValidate) {\n        return setFieldValue(name, value, shouldValidate);\n      },\n      setTouched: function setTouched(value, shouldValidate) {\n        return setFieldTouched(name, value, shouldValidate);\n      },\n      setError: function setError(value) {\n        return setFieldError(name, value);\n      }\n    };\n  }, [setFieldValue, setFieldTouched, setFieldError]);\n  var getFieldProps = useCallback(function (nameOrOptions) {\n    var isAnObject = isObject(nameOrOptions);\n    var name = isAnObject ? nameOrOptions.name : nameOrOptions;\n    var valueState = getIn(state.values, name);\n    var field = {\n      name: name,\n      value: valueState,\n      onChange: handleChange,\n      onBlur: handleBlur\n    };\n\n    if (isAnObject) {\n      var type = nameOrOptions.type,\n          valueProp = nameOrOptions.value,\n          is = nameOrOptions.as,\n          multiple = nameOrOptions.multiple;\n\n      if (type === 'checkbox') {\n        if (valueProp === undefined) {\n          field.checked = !!valueState;\n        } else {\n          field.checked = !!(Array.isArray(valueState) && ~valueState.indexOf(valueProp));\n          field.value = valueProp;\n        }\n      } else if (type === 'radio') {\n        field.checked = valueState === valueProp;\n        field.value = valueProp;\n      } else if (is === 'select' && multiple) {\n        field.value = field.value || [];\n        field.multiple = true;\n      }\n    }\n\n    return field;\n  }, [handleBlur, handleChange, state.values]);\n  var dirty = useMemo(function () {\n    return !isEqual(initialValues.current, state.values);\n  }, [initialValues.current, state.values]);\n  var isValid = useMemo(function () {\n    return typeof isInitialValid !== 'undefined' ? dirty ? state.errors && Object.keys(state.errors).length === 0 : isInitialValid !== false && isFunction(isInitialValid) ? isInitialValid(props) : isInitialValid : state.errors && Object.keys(state.errors).length === 0;\n  }, [isInitialValid, dirty, state.errors, props]);\n\n  var ctx = _extends({}, state, {\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur: handleBlur,\n    handleChange: handleChange,\n    handleReset: handleReset,\n    handleSubmit: handleSubmit,\n    resetForm: resetForm,\n    setErrors: setErrors,\n    setFormikState: setFormikState,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setFieldError: setFieldError,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    submitForm: submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    isValid: isValid,\n    dirty: dirty,\n    unregisterField: unregisterField,\n    registerField: registerField,\n    getFieldProps: getFieldProps,\n    getFieldMeta: getFieldMeta,\n    getFieldHelpers: getFieldHelpers,\n    validateOnBlur: validateOnBlur,\n    validateOnChange: validateOnChange,\n    validateOnMount: validateOnMount\n  });\n\n  return ctx;\n}\n\nfunction Formik(props) {\n  var formikbag = useFormik(props);\n  var component = props.component,\n      children = props.children,\n      render = props.render,\n      innerRef = props.innerRef; // This allows folks to pass a ref to <Formik />\n\n  useImperativeHandle(innerRef, function () {\n    return formikbag;\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !!props.render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>\") : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  }\n\n  return createElement(FormikProvider, {\n    value: formikbag\n  }, component ? createElement(component, formikbag) : render ? render(formikbag) : children // children come last, always called\n  ? isFunction(children) ? children(formikbag) : !isEmptyChildren(children) ? Children.only(children) : null : null);\n}\n\nfunction warnAboutMissingIdentifier(_ref4) {\n  var htmlContent = _ref4.htmlContent,\n      documentationAnchorLink = _ref4.documentationAnchorLink,\n      handlerName = _ref4.handlerName;\n  console.warn(\"Warning: Formik called `\" + handlerName + \"`, but you forgot to pass an `id` or `name` attribute to your input:\\n    \" + htmlContent + \"\\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#\" + documentationAnchorLink + \"\\n  \");\n}\n/**\r\n * Transform Yup ValidationError to a more usable object\r\n */\n\n\nfunction yupToFormErrors(yupError) {\n  var errors = {};\n\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n\n    for (var _iterator = yupError.inner, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref5 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref5 = _i.value;\n      }\n\n      var err = _ref5;\n\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n\n  return errors;\n}\n/**\r\n * Validate a yup schema.\r\n */\n\n\nfunction validateYupSchema(values, schema, sync, context) {\n  if (sync === void 0) {\n    sync = false;\n  }\n\n  if (context === void 0) {\n    context = {};\n  }\n\n  var validateData = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context\n  });\n}\n/**\r\n * Recursively prepare values.\r\n */\n\n\nfunction prepareDataForValidation(values) {\n  var data = Array.isArray(values) ? [] : {};\n\n  for (var k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      var key = String(k);\n\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map(function (value) {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n\n  return data;\n}\n/**\r\n * deepmerge array merging algorithm\r\n * https://github.com/KyleAMathews/deepmerge#combine-array\r\n */\n\n\nfunction arrayMerge(target, source, options) {\n  var destination = target.slice();\n  source.forEach(function merge(e, i) {\n    if (typeof destination[i] === 'undefined') {\n      var cloneRequested = options.clone !== false;\n      var shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? deepmerge(Array.isArray(e) ? [] : {}, e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n/** Return multi select values based on an array of options */\n\n\nfunction getSelectedValues(options) {\n  return Array.from(options).filter(function (el) {\n    return el.selected;\n  }).map(function (el) {\n    return el.value;\n  });\n}\n/** Return the next value for a checkbox */\n\n\nfunction getValueForCheckbox(currentValue, checked, valueProp) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  } // If the currentValue was not a boolean we want to return an array\n\n\n  var currentArrayOfValues = [];\n  var isValueInArray = false;\n  var index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  } // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n\n\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  } // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n\n\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  } // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n\n\n  return currentArrayOfValues.slice(0, index).concat(currentArrayOfValues.slice(index + 1));\n} // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useEventCallback(fn) {\n  var ref = useRef(fn); // we copy a ref to the callback scoped to the current state/props on each render\n\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nfunction useField(propsOrFieldName) {\n  var formik = useFormikContext();\n  var getFieldProps = formik.getFieldProps,\n      getFieldMeta = formik.getFieldMeta,\n      getFieldHelpers = formik.getFieldHelpers,\n      registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  var isAnObject = isObject(propsOrFieldName); // Normalize propsOrFieldName to FieldHookConfig<Val>\n\n  var props = isAnObject ? propsOrFieldName : {\n    name: propsOrFieldName\n  };\n  var fieldName = props.name,\n      validateFn = props.validate;\n  useEffect(function () {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn\n      });\n    }\n\n    return function () {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    !formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component') : invariant(false) : void 0;\n  }\n\n  !fieldName ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid field name. Either pass `useField` a string or an object containing a `name` key.') : invariant(false) : void 0;\n  return [getFieldProps(props), getFieldMeta(fieldName), getFieldHelpers(fieldName)];\n}\n\nfunction Field(_ref) {\n  var validate = _ref.validate,\n      name = _ref.name,\n      render = _ref.render,\n      children = _ref.children,\n      is = _ref.as,\n      component = _ref.component,\n      props = _objectWithoutPropertiesLoose(_ref, [\"validate\", \"name\", \"render\", \"children\", \"as\", \"component\"]);\n\n  var _useFormikContext = useFormikContext(),\n      formik = _objectWithoutPropertiesLoose(_useFormikContext, [\"validate\", \"validationSchema\"]);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !!render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\\\"\" + name + \"\\\" render={({field, form}) => ...} /> with <Field name=\\\"\" + name + \"\\\">{({field, form, meta}) => ...}</Field>\") : invariant(false) : void 0;\n      !!(is && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.') : invariant(false) : void 0;\n      !!(component && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.') : invariant(false) : void 0;\n      !!(render && children && !isEmptyChildren(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored') : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  } // Register field and field-level validation with parent <Formik>\n\n\n  var registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  useEffect(function () {\n    registerField(name, {\n      validate: validate\n    });\n    return function () {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  var field = formik.getFieldProps(_extends({\n    name: name\n  }, props));\n  var meta = formik.getFieldMeta(name);\n  var legacyBag = {\n    field: field,\n    form: formik\n  };\n\n  if (render) {\n    return render(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (isFunction(children)) {\n    return children(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      var innerRef = props.innerRef,\n          rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return createElement(component, _extends({\n        ref: innerRef\n      }, field, rest), children);\n    } // We don't pass `meta` for backwards compat\n\n\n    return createElement(component, _extends({\n      field: field,\n      form: formik\n    }, props), children);\n  } // default to input here so we can check for both `as` and `children` above\n\n\n  var asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    var _innerRef = props.innerRef,\n        _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n    return createElement(asElement, _extends({\n      ref: _innerRef\n    }, field, _rest), children);\n  }\n\n  return createElement(asElement, _extends({}, field, props), children);\n}\n\nvar Form = /*#__PURE__*/forwardRef(function (props, ref) {\n  // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n  // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n  var action = props.action,\n      rest = _objectWithoutPropertiesLoose(props, [\"action\"]);\n\n  var _action = action != null ? action : '#';\n\n  var _useFormikContext = useFormikContext(),\n      handleReset = _useFormikContext.handleReset,\n      handleSubmit = _useFormikContext.handleSubmit;\n\n  return createElement(\"form\", Object.assign({\n    onSubmit: handleSubmit,\n    ref: ref,\n    onReset: handleReset,\n    action: _action\n  }, rest));\n});\nForm.displayName = 'Form';\n/**\r\n * A public higher-order component to access the imperative API\r\n */\n\nfunction withFormik(_ref) {\n  var _ref$mapPropsToValues = _ref.mapPropsToValues,\n      mapPropsToValues = _ref$mapPropsToValues === void 0 ? function (vanillaProps) {\n    var val = {};\n\n    for (var k in vanillaProps) {\n      if (vanillaProps.hasOwnProperty(k) && typeof vanillaProps[k] !== 'function') {\n        // @todo TypeScript fix\n        val[k] = vanillaProps[k];\n      }\n    }\n\n    return val;\n  } : _ref$mapPropsToValues,\n      config = _objectWithoutPropertiesLoose(_ref, [\"mapPropsToValues\"]);\n\n  return function createFormik(Component$1) {\n    var componentDisplayName = Component$1.displayName || Component$1.name || Component$1.constructor && Component$1.constructor.name || 'Component';\n    /**\r\n     * We need to use closures here for to provide the wrapped component's props to\r\n     * the respective withFormik config methods.\r\n     */\n\n    var C = /*#__PURE__*/function (_React$Component) {\n      _inheritsLoose(C, _React$Component);\n\n      function C() {\n        var _this;\n\n        _this = _React$Component.apply(this, arguments) || this;\n\n        _this.validate = function (values) {\n          return config.validate(values, _this.props);\n        };\n\n        _this.validationSchema = function () {\n          return isFunction(config.validationSchema) ? config.validationSchema(_this.props) : config.validationSchema;\n        };\n\n        _this.handleSubmit = function (values, actions) {\n          return config.handleSubmit(values, _extends({}, actions, {\n            props: _this.props\n          }));\n        };\n        /**\r\n         * Just avoiding a render callback for perf here\r\n         */\n\n\n        _this.renderFormComponent = function (formikProps) {\n          return createElement(Component$1, Object.assign({}, _this.props, formikProps));\n        };\n\n        return _this;\n      }\n\n      var _proto = C.prototype;\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n        return createElement(Formik, Object.assign({}, props, config, {\n          validate: config.validate && this.validate,\n          validationSchema: config.validationSchema && this.validationSchema,\n          initialValues: mapPropsToValues(this.props),\n          initialStatus: config.mapPropsToStatus && config.mapPropsToStatus(this.props),\n          initialErrors: config.mapPropsToErrors && config.mapPropsToErrors(this.props),\n          initialTouched: config.mapPropsToTouched && config.mapPropsToTouched(this.props),\n          onSubmit: this.handleSubmit,\n          children: this.renderFormComponent\n        }));\n      };\n\n      return C;\n    }(Component);\n\n    C.displayName = \"WithFormik(\" + componentDisplayName + \")\";\n    return hoistNonReactStatics(C, Component$1 // cast type to ComponentClass (even if SFC)\n    );\n  };\n}\n/**\r\n * Connect any component to Formik context, and inject as a prop called `formik`;\r\n * @param Comp React Component\r\n */\n\n\nfunction connect(Comp) {\n  var C = function C(props) {\n    return createElement(FormikConsumer, null, function (formik) {\n      !!!formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: \" + Comp.name) : invariant(false) : void 0;\n      return createElement(Comp, Object.assign({}, props, {\n        formik: formik\n      }));\n    });\n  };\n\n  var componentDisplayName = Comp.displayName || Comp.name || Comp.constructor && Comp.constructor.name || 'Component'; // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n\n  C.WrappedComponent = Comp;\n  C.displayName = \"FormikConnect(\" + componentDisplayName + \")\";\n  return hoistNonReactStatics(C, Comp // cast type to ComponentClass (even if SFC)\n  );\n}\n/**\r\n * Some array helpers!\r\n */\n\n\nvar move = function move(array, from, to) {\n  var copy = copyArrayLike(array);\n  var value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nvar swap = function swap(arrayLike, indexA, indexB) {\n  var copy = copyArrayLike(arrayLike);\n  var a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nvar insert = function insert(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nvar replace = function replace(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nvar copyArrayLike = function copyArrayLike(arrayLike) {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [].concat(arrayLike);\n  } else {\n    var maxIndex = Object.keys(arrayLike).map(function (key) {\n      return parseInt(key);\n    }).reduce(function (max, el) {\n      return el > max ? el : max;\n    }, 0);\n    return Array.from(_extends({}, arrayLike, {\n      length: maxIndex + 1\n    }));\n  }\n};\n\nvar FieldArrayInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FieldArrayInner, _React$Component);\n\n  function FieldArrayInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.updateArrayField = function (fn, alterTouched, alterErrors) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          setFormikState = _this$props.formik.setFormikState;\n      setFormikState(function (prevState) {\n        var updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n        var updateTouched = typeof alterTouched === 'function' ? alterTouched : fn; // values fn should be executed before updateErrors and updateTouched,\n        // otherwise it causes an error with unshift.\n\n        var values = setIn(prevState.values, name, fn(getIn(prevState.values, name)));\n        var fieldError = alterErrors ? updateErrors(getIn(prevState.errors, name)) : undefined;\n        var fieldTouched = alterTouched ? updateTouched(getIn(prevState.touched, name)) : undefined;\n\n        if (isEmptyArray(fieldError)) {\n          fieldError = undefined;\n        }\n\n        if (isEmptyArray(fieldTouched)) {\n          fieldTouched = undefined;\n        }\n\n        return _extends({}, prevState, {\n          values: values,\n          errors: alterErrors ? setIn(prevState.errors, name, fieldError) : prevState.errors,\n          touched: alterTouched ? setIn(prevState.touched, name, fieldTouched) : prevState.touched\n        });\n      });\n    };\n\n    _this.push = function (value) {\n      return _this.updateArrayField(function (arrayLike) {\n        return [].concat(copyArrayLike(arrayLike), [cloneDeep(value)]);\n      }, false, false);\n    };\n\n    _this.handlePush = function (value) {\n      return function () {\n        return _this.push(value);\n      };\n    };\n\n    _this.swap = function (indexA, indexB) {\n      return _this.updateArrayField(function (array) {\n        return swap(array, indexA, indexB);\n      }, true, true);\n    };\n\n    _this.handleSwap = function (indexA, indexB) {\n      return function () {\n        return _this.swap(indexA, indexB);\n      };\n    };\n\n    _this.move = function (from, to) {\n      return _this.updateArrayField(function (array) {\n        return move(array, from, to);\n      }, true, true);\n    };\n\n    _this.handleMove = function (from, to) {\n      return function () {\n        return _this.move(from, to);\n      };\n    };\n\n    _this.insert = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return insert(array, index, value);\n      }, function (array) {\n        return insert(array, index, null);\n      }, function (array) {\n        return insert(array, index, null);\n      });\n    };\n\n    _this.handleInsert = function (index, value) {\n      return function () {\n        return _this.insert(index, value);\n      };\n    };\n\n    _this.replace = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return replace(array, index, value);\n      }, false, false);\n    };\n\n    _this.handleReplace = function (index, value) {\n      return function () {\n        return _this.replace(index, value);\n      };\n    };\n\n    _this.unshift = function (value) {\n      var length = -1;\n\n      _this.updateArrayField(function (array) {\n        var arr = array ? [value].concat(array) : [value];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      }, function (array) {\n        var arr = array ? [null].concat(array) : [null];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      }, function (array) {\n        var arr = array ? [null].concat(array) : [null];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      });\n\n      return length;\n    };\n\n    _this.handleUnshift = function (value) {\n      return function () {\n        return _this.unshift(value);\n      };\n    };\n\n    _this.handleRemove = function (index) {\n      return function () {\n        return _this.remove(index);\n      };\n    };\n\n    _this.handlePop = function () {\n      return function () {\n        return _this.pop();\n      };\n    }; // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n\n\n    _this.remove = _this.remove.bind(_assertThisInitialized(_this));\n    _this.pop = _this.pop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = FieldArrayInner.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.validateOnChange && this.props.formik.validateOnChange && !isEqual(getIn(prevProps.formik.values, prevProps.name), getIn(this.props.formik.values, this.props.name))) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  };\n\n  _proto.remove = function remove(index) {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var copy = array ? copyArrayLike(array) : [];\n\n      if (!result) {\n        result = copy[index];\n      }\n\n      if (isFunction(copy.splice)) {\n        copy.splice(index, 1);\n      }\n\n      return copy;\n    }, true, true);\n    return result;\n  };\n\n  _proto.pop = function pop() {\n    // Remove relevant pieces of `touched` and `errors` too!\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var tmp = array;\n\n      if (!result) {\n        result = tmp && tmp.pop && tmp.pop();\n      }\n\n      return tmp;\n    }, true, true);\n    return result;\n  };\n\n  _proto.render = function render() {\n    var arrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove\n    };\n\n    var _this$props2 = this.props,\n        component = _this$props2.component,\n        render = _this$props2.render,\n        children = _this$props2.children,\n        name = _this$props2.name,\n        _this$props2$formik = _this$props2.formik,\n        restOfFormik = _objectWithoutPropertiesLoose(_this$props2$formik, [\"validate\", \"validationSchema\"]);\n\n    var props = _extends({}, arrayHelpers, {\n      form: restOfFormik,\n      name: name\n    });\n\n    return component ? createElement(component, props) : render ? render(props) : children // children come last, always called\n    ? typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? Children.only(children) : null : null;\n  };\n\n  return FieldArrayInner;\n}(Component);\n\nFieldArrayInner.defaultProps = {\n  validateOnChange: true\n};\nvar FieldArray = /*#__PURE__*/connect(FieldArrayInner);\n\nvar ErrorMessageImpl = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorMessageImpl, _React$Component);\n\n  function ErrorMessageImpl() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ErrorMessageImpl.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (getIn(this.props.formik.errors, this.props.name) !== getIn(props.formik.errors, this.props.name) || getIn(this.props.formik.touched, this.props.name) !== getIn(props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        render = _this$props.render,\n        children = _this$props.children,\n        name = _this$props.name,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"formik\", \"render\", \"children\", \"name\"]);\n\n    var touch = getIn(formik.touched, name);\n    var error = getIn(formik.errors, name);\n    return !!touch && !!error ? render ? isFunction(render) ? render(error) : null : children ? isFunction(children) ? children(error) : null : component ? createElement(component, rest, error) : error : null;\n  };\n\n  return ErrorMessageImpl;\n}(Component);\n\nvar ErrorMessage = /*#__PURE__*/connect(ErrorMessageImpl);\n/**\r\n * Custom Field component for quickly hooking into Formik\r\n * context and wiring up forms.\r\n */\n\nvar FastFieldInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FastFieldInner, _React$Component);\n\n  function FastFieldInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var render = props.render,\n        children = props.children,\n        component = props.component,\n        is = props.as,\n        name = props.name;\n    !!render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={\" + name + \"}>{props => ...}</FastField> instead.\") : invariant(false) : void 0;\n    !!(component && render) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored') : invariant(false) : void 0;\n    !!(is && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.') : invariant(false) : void 0;\n    !!(component && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.') : invariant(false) : void 0;\n    !!(render && children && !isEmptyChildren(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored') : invariant(false) : void 0;\n    return _this;\n  }\n\n  var _proto = FastFieldInner.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (props.name !== this.props.name || getIn(props.formik.values, this.props.name) !== getIn(this.props.formik.values, this.props.name) || getIn(props.formik.errors, this.props.name) !== getIn(this.props.formik.errors, this.props.name) || getIn(props.formik.touched, this.props.name) !== getIn(this.props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length || props.formik.isSubmitting !== this.props.formik.isSubmitting) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        name = _this$props.name,\n        render = _this$props.render,\n        is = _this$props.as,\n        children = _this$props.children,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"validate\", \"name\", \"render\", \"as\", \"children\", \"component\", \"shouldUpdate\", \"formik\"]);\n\n    var restOfFormik = _objectWithoutPropertiesLoose(formik, [\"validate\", \"validationSchema\"]);\n\n    var field = formik.getFieldProps(_extends({\n      name: name\n    }, props));\n    var meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name)\n    };\n    var bag = {\n      field: field,\n      meta: meta,\n      form: restOfFormik\n    };\n\n    if (render) {\n      return render(bag);\n    }\n\n    if (isFunction(children)) {\n      return children(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        var innerRef = props.innerRef,\n            rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n        return createElement(component, _extends({\n          ref: innerRef\n        }, field, rest), children);\n      } // We don't pass `meta` for backwards compat\n\n\n      return createElement(component, _extends({\n        field: field,\n        form: formik\n      }, props), children);\n    } // default to input here so we can check for both `as` and `children` above\n\n\n    var asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      var _innerRef = props.innerRef,\n          _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return createElement(asElement, _extends({\n        ref: _innerRef\n      }, field, _rest), children);\n    }\n\n    return createElement(asElement, _extends({}, field, props), children);\n  };\n\n  return FastFieldInner;\n}(Component);\n\nvar FastField = /*#__PURE__*/connect(FastFieldInner);\nexport { ErrorMessage, FastField, Field, FieldArray, Form, Formik, FormikConsumer, FormikContext, FormikProvider, connect, getActiveElement, getIn, insert, isEmptyArray, isEmptyChildren, isFunction, isInputEvent, isInteger, isNaN$1 as isNaN, isObject, isPromise, isString, move, prepareDataForValidation, replace, setIn, setNestedObjectValues, swap, useField, useFormik, useFormikContext, validateYupSchema, withFormik, yupToFormErrors };","map":{"version":3,"mappings":"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","names":["isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","then","isInputEvent","target","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","FormikContext","displayName","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","formikReducer","state","msg","type","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","_ref$validateOnChange","validateOnBlur","_ref$validateOnBlur","validateOnMount","_ref$validateOnMount","isInitialValid","enableReinitialize","_ref$enableReinitiali","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","dispatch","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","process","env","NODE_ENV","console","warn","actualException","runValidationSchema","validationSchema","schema","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithHighPriority","useEventCallback","resetForm","nextState","dispatchFn","onReset","maybePromisedOnReset","imperativeMethods","validateField","maybePromise","x","error","registerField","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","parsed","persist","currentTarget","id","checked","outerHTML","options","multiple","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","Error","isActuallyValid","promiseOrUndefined","executeSubmit","result","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","reason","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","valueProp","is","as","indexOf","dirty","isValid","ctx","Formik","formikbag","component","render","innerRef","only","yupError","inner","message","_ref5","_i","sync","context","validateData","prepareDataForValidation","abortEarly","data","hasOwnProperty","isPlainObject","source","destination","forEach","merge","cloneRequested","shouldClone","isMergeableObject","push","from","el","selected","currentValue","Boolean","currentArrayOfValues","isValueInArray","concat","useIsomorphicLayoutEffect","window","createElement","fn","ref","args","arguments","apply","useField","propsOrFieldName","fieldName","validateFn","Field","_validate","meta","legacyBag","form","asElement","Form","action","_action","withFormik","mapPropsToValues","vanillaProps","_ref$mapPropsToValues","config","createFormik","Component","componentDisplayName","constructor","C","_this","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","to","copy","copyArrayLike","splice","swap","arrayLike","indexA","indexB","a","insert","replace","maxIndex","parseInt","max","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","fieldError","fieldTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","componentDidUpdate","prevProps","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessageImpl","shouldComponentUpdate","touch","ErrorMessage","FastFieldInner","shouldUpdate","componentDidMount","componentWillUnmount","bag","FastField"],"sources":["C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\utils.ts","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\FormikContext.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\Formik.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\Field.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\Form.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\withFormik.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\connect.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\FieldArray.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\ErrorMessage.tsx","C:\\Users\\artem\\my-app\\node_modules\\formik\\src\\FastField.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nFormikContext.displayName = 'FormikContext';\n\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FormikHelpers,\n  FormikHandlers,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: error[name] },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : options && multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<V>>\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<V>['field']>\n    | string\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & { name: string };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  return [\n    getFieldProps(props),\n    getFieldMeta(fieldName),\n    getFieldHelpers(fieldName),\n  ];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action ?? '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik helpers + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form status\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form errors state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  setIn,\n  isEmptyArray,\n} from './utils';\nimport isEqual from 'react-fast-compare';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n      let updateTouched =\n        typeof alterTouched === 'function' ? alterTouched : fn;\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = formik.getFieldProps({ name, ...props });\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n"]},"metadata":{},"sourceType":"module"}