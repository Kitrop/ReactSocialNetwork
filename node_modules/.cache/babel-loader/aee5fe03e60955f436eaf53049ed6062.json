{"ast":null,"code":"import { getLoginMeApi, loginApi, profileApi } from \"../compo/api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  rememberMe: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.data,\n          isAuth: true\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // actionCreator\n\n\nexport const setAuthUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n});\nexport const setLogin = (email, password, rememberMe) => ({\n  type: SET_LOGIN,\n  data: {\n    email,\n    password,\n    rememberMe\n  }\n}); // thunkCreator\n\nexport const loginMeThunk = () => {\n  return dispatch => {\n    profileApi.getLoginMeApi().then(data => {\n      if (data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = data.data;\n        dispatch(setAuthUserData(id, email, login));\n      }\n    });\n  };\n};\nexport const loginThunk = (email, password, rememberMe) => {\n  return dispatch => {\n    loginApi.loginApi(email, password, rememberMe).then(data => {\n      if (data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = data.data;\n        dispatch(setLogin(id, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/authReducer.js"],"names":["getLoginMeApi","loginApi","profileApi","SET_USER_DATA","initialState","id","email","login","isAuth","rememberMe","authReducer","state","action","type","data","setAuthUserData","setLogin","password","SET_LOGIN","loginMeThunk","dispatch","then","resultCode","loginThunk"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,QAAvB,EAAiCC,UAAjC,QAAkD,kBAAlD;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE,KAJO;AAKfC,EAAAA,UAAU,EAAE;AALG,CAAnB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGQ,KADA;AAEH,aAAGC,MAAM,CAACE,IAFP;AAGHN,UAAAA,MAAM,EAAE;AAHL,SAAP;AAKH;;AACD;AACI,aAAOG,KAAP;AATR;AAWH,CAZD,C,CAaA;;;AACA,OAAO,MAAMI,eAAe,GAAG,CAACV,EAAD,EAAKC,KAAL,EAAYC,KAAZ,MAAuB;AAACM,EAAAA,IAAI,EAAEV,aAAP;AAAsBW,EAAAA,IAAI,EAAE;AAACT,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA;AAAZ;AAA5B,CAAvB,CAAxB;AACP,OAAO,MAAMS,QAAQ,GAAG,CAACV,KAAD,EAAQW,QAAR,EAAkBR,UAAlB,MAAkC;AAACI,EAAAA,IAAI,EAAEK,SAAP;AAAkBJ,EAAAA,IAAI,EAAE;AAACR,IAAAA,KAAD;AAAQW,IAAAA,QAAR;AAAkBR,IAAAA;AAAlB;AAAxB,CAAlC,CAAjB,C,CAEP;;AACA,OAAO,MAAMU,YAAY,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACjBlB,IAAAA,UAAU,CAACF,aAAX,GACKqB,IADL,CACUP,IAAI,IAAI;AACV,UAAIA,IAAI,CAACQ,UAAL,KAAoB,CAAxB,EAA2B;AACvB,YAAI;AAACjB,UAAAA,EAAD;AAAKE,UAAAA,KAAL;AAAYD,UAAAA;AAAZ,YAAqBQ,IAAI,CAACA,IAA9B;AACAM,QAAAA,QAAQ,CAACL,eAAe,CAACV,EAAD,EAAKC,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,KANL;AAOH,GARD;AASH,CAVM;AAYP,OAAO,MAAMgB,UAAU,GAAG,CAACjB,KAAD,EAAQW,QAAR,EAAkBR,UAAlB,KAAiC;AACvD,SAAQW,QAAD,IAAc;AACjBnB,IAAAA,QAAQ,CAACA,QAAT,CAAkBK,KAAlB,EAAyBW,QAAzB,EAAmCR,UAAnC,EACKY,IADL,CACUP,IAAI,IAAI;AACV,UAAIA,IAAI,CAACQ,UAAL,KAAoB,CAAxB,EAA2B;AACvB,YAAI;AAACjB,UAAAA,EAAD;AAAKE,UAAAA,KAAL;AAAYD,UAAAA;AAAZ,YAAqBQ,IAAI,CAACA,IAA9B;AACAM,QAAAA,QAAQ,CAACJ,QAAQ,CAACX,EAAD,EAAKC,KAAL,EAAYC,KAAZ,CAAT,CAAR;AACH;AACJ,KANL;AAOH,GARD;AASH,CAVM;AAcP,eAAeG,WAAf","sourcesContent":["import {getLoginMeApi, loginApi, profileApi} from \"../compo/api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    rememberMe: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// actionCreator\r\nexport const setAuthUserData = (id, email, login) => ({type: SET_USER_DATA, data: {id, email, login} });\r\nexport const setLogin = (email, password, rememberMe) => ({type: SET_LOGIN, data: {email, password, rememberMe} });\r\n\r\n// thunkCreator\r\nexport const loginMeThunk = () => {\r\n    return (dispatch) => {\r\n        profileApi.getLoginMeApi()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data;\r\n                    dispatch(setAuthUserData(id, email, login));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const loginThunk = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        loginApi.loginApi(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data;\r\n                    dispatch(setLogin(id, email, login));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}