{"ast":null,"code":"// actions\nimport { profileApi } from \"../../compo/api/api\";\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_PROFILE_STATUS = 'GET_PROFILE_STATUS';\nconst UPDATE_PROFILE_STATUS = 'UPDATE_PROFILE_STATUS'; // state\n\nlet initialState = {\n  postsData: [{\n    id: 1,\n    name: 'Evgeniy',\n    text: 'I need more React',\n    like: '16'\n  }, {\n    id: 2,\n    text: 'I love REACT!!!',\n    like: '45'\n  }],\n  newPostText: 'it-sphere',\n  profile: null,\n  status: null\n}; //reducer\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          name: 'Oleg',\n          text: action.newPostText,\n          like: '56'\n        };\n        return { ...state,\n          postsData: [...state.postsData, newPost]\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          postsData: state.postsData.filter(p => p.id !== action.id)\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_PROFILE_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case UPDATE_PROFILE_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}; // actionCreater\n\n\nexport const addPostActionCreater = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const deletePostAC = id => ({\n  type: DELETE_POST,\n  id\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setProfileStatus = status => ({\n  type: SET_PROFILE_STATUS,\n  status\n}); // thunkCreator\n\nexport const getProfileThunk = userId => {\n  return dispatch => {\n    profileApi.getProfileAPI(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport const getProfileStatus = userId => {\n  return dispatch => {\n    profileApi.getProfileStatus(userId).then(data => {\n      dispatch(setProfileStatus(data.data));\n    });\n  };\n};\nexport const putProfileStatus = status => {\n  return dispatch => {\n    profileApi.putProfileStatus(status).then(data => {\n      if (data.data.resultCode === 0) {\n        dispatch(setProfileStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/reducers/profileReducer.js"],"names":["profileApi","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_PROFILE_STATUS","UPDATE_PROFILE_STATUS","initialState","postsData","id","name","text","like","newPostText","profile","status","profileReducer","state","action","type","newPost","filter","p","addPostActionCreater","deletePostAC","setUserProfile","setProfileStatus","getProfileThunk","userId","dispatch","getProfileAPI","then","data","getProfileStatus","putProfileStatus","resultCode"],"mappings":"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","sourcesContent":["// actions\r\nimport {profileApi} from \"../../compo/api/api\";\r\n\r\nconst ADD_POST  = 'ADD-POST';\r\nconst DELETE_POST  = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_PROFILE_STATUS = 'GET_PROFILE_STATUS'\r\nconst UPDATE_PROFILE_STATUS = 'UPDATE_PROFILE_STATUS'\r\n\r\n// state\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, name: 'Evgeniy', text: 'I need more React', like: '16'},\r\n        {id: 2, text: 'I love REACT!!!', like: '45'},\r\n    ],\r\n    newPostText: 'it-sphere',\r\n    profile: null,\r\n    status: null\r\n};\r\n\r\n//reducer\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n            name: 'Oleg',\r\n            text: action.newPostText,\r\n            like: '56',\r\n        };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, postsData: state.postsData.filter( p => p.id !== action.id)}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_PROFILE_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case UPDATE_PROFILE_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n// actionCreater\r\nexport const addPostActionCreater = (newPostText) =>({type: ADD_POST, newPostText})\r\nexport const deletePostAC = (id) =>({type: DELETE_POST, id})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setProfileStatus = (status) => ({type: SET_PROFILE_STATUS, status})\r\n\r\n// thunkCreator\r\nexport const getProfileThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileApi.getProfileAPI(userId)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data))\r\n            })\r\n    }\r\n}\r\nexport const getProfileStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileApi.getProfileStatus(userId)\r\n            .then(data => {\r\n                dispatch(setProfileStatus(data.data))\r\n            })\r\n    }\r\n}\r\nexport const putProfileStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileApi.putProfileStatus(status)\r\n            .then(data => {\r\n                if (data.data.resultCode === 0) {\r\n                    dispatch(setProfileStatus(status))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}