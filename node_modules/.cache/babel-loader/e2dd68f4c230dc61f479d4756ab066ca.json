{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Message\\\\Dialogs.jsx\";\nimport message from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogsItem';\nimport Message from \"./MessagesItem/Message\";\nimport { createRef } from \"react\";\nimport { SendMessageActionCreater, UpdateNewMessageActionCreater } from \"../../redux/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dialogs(props) {\n  let state = props.store.getState().dialogsPage;\n  let dialogsElements = state.stateDialogs.dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 50\n  }, this));\n  let messagesElements = state.stateDialogs.messagesData.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    ava: m.ava,\n    content: m.message,\n    id: m.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 51\n  }, this));\n  let newMessageText = props.state.newMessageText;\n  let newMessageElement = /*#__PURE__*/createRef();\n\n  let sendMessage = () => {\n    props.store.dispatch(SendMessageActionCreater());\n    newMessageElement.current.value = '';\n  };\n\n  let OnNewMessageSend = e => {\n    let body = e.target.value;\n    props.store.dispatch(UpdateNewMessageActionCreater(body));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: message.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.notify,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.paper_dial,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: OnNewMessageSend,\n        ref: newMessageElement,\n        value: newMessageText,\n        placeholder: \"Enter your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Message/Dialogs.jsx"],"names":["message","DialogItem","Message","createRef","SendMessageActionCreater","UpdateNewMessageActionCreater","Dialogs","props","state","store","getState","dialogsPage","dialogsElements","stateDialogs","dialogsData","map","d","name","id","messagesElements","messagesData","m","ava","newMessageText","newMessageElement","sendMessage","dispatch","current","value","OnNewMessageSend","e","body","target","dialogs","notify","paper_dial"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,wBAAR,EAAkCC,6BAAlC,QAAsE,mBAAtE;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;AAEA,MAAIC,eAAe,GACfJ,KAAK,CAACK,YAAN,CAAmBC,WAAnB,CAA+BC,GAA/B,CAAoCC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAA0B,IAAA,EAAE,EAAED,CAAC,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAzC,CADJ;AAEA,MAAIC,gBAAgB,GAChBX,KAAK,CAACK,YAAN,CAAmBO,YAAnB,CAAgCL,GAAhC,CAAqCM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAhB;AAAqB,IAAA,OAAO,EAAED,CAAC,CAACrB,OAAhC;AAAyC,IAAA,EAAE,EAAEqB,CAAC,CAACH;AAA/C;AAAA;AAAA;AAAA;AAAA,UAA1C,CADJ;AAEA,MAAIK,cAAc,GAAGhB,KAAK,CAACC,KAAN,CAAYe,cAAjC;AAEA,MAAIC,iBAAiB,gBAAGrB,SAAS,EAAjC;;AACA,MAAIsB,WAAW,GAAG,MAAM;AACpBlB,IAAAA,KAAK,CAACE,KAAN,CAAYiB,QAAZ,CAAqBtB,wBAAwB,EAA7C;AACAoB,IAAAA,iBAAiB,CAACG,OAAlB,CAA0BC,KAA1B,GAAkC,EAAlC;AACH,GAHD;;AAKA,MAAIC,gBAAgB,GAAIC,CAAD,IAAO;AAC1B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASJ,KAApB;AACArB,IAAAA,KAAK,CAACE,KAAN,CAAYiB,QAAZ,CAAqBrB,6BAA6B,CAAC0B,IAAD,CAAlD;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACiC,OAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEjC,OAAO,CAACkC,MAAxB;AAAA,gBACKtB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACmC,UAAxB;AAAA,gBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI;AAAW,QAAA,QAAQ,EAAEU,gBAArB;AAAuC,QAAA,GAAG,EAAEL,iBAA5C;AAA+D,QAAA,KAAK,EAAED,cAAtE;AAAsF,QAAA,WAAW,EAAE;AAAnG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;KAtCQnB,O;AAwCT,eAAeA,OAAf","sourcesContent":["import message from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from \"./MessagesItem/Message\";\r\nimport {createRef} from \"react\";\r\nimport {SendMessageActionCreater, UpdateNewMessageActionCreater} from \"../../redux/state\";\r\n\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let dialogsElements =\r\n        state.stateDialogs.dialogsData.map( d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements =\r\n        state.stateDialogs.messagesData.map( m => <Message ava={m.ava} content={m.message} id={m.id}/>)\r\n    let newMessageText = props.state.newMessageText;\r\n\r\n    let newMessageElement = createRef();\r\n    let sendMessage = () => {\r\n        props.store.dispatch(SendMessageActionCreater())\r\n        newMessageElement.current.value = '';\r\n    }\r\n\r\n    let OnNewMessageSend = (e) => {\r\n        let body = e.target.value\r\n        props.store.dispatch(UpdateNewMessageActionCreater(body))\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={message.dialogs}>\r\n            <div className={message.notify}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={message.paper_dial}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <textarea  onChange={OnNewMessageSend} ref={newMessageElement} value={newMessageText} placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={sendMessage}>Send Message</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs\r\n"]},"metadata":{},"sourceType":"module"}