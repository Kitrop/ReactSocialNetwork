{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Users\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from './Users.module.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 15\n  } = _ref;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.paginator,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPortionNumber(portionNumber - 1),\n      children: \" PREV \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn({\n          [styles.selectedPage]: currentPage === p\n        }, styles.pageNumber),\n        onClick: e => onPageChanged(p),\n        children: [\" \", p, \" \"]\n      }, p, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPortionNumber(portionNumber + 1),\n      children: \" NEXT \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Pagination, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/Pagination.jsx"],"names":["styles","useState","cn","Pagination","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,EAAP,MAAe,YAAf;;;AAGA,MAAMC,UAAU,GAAG,QAAgF;AAAA;;AAAA,MAA/E;AAACC,IAAAA,eAAD;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA,aAAzC;AAAwDC,IAAAA,WAAW,GAAG;AAAtE,GAA+E;AAC/F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAER,MAAM,CAACoB,SAAvB;AAAA,eACFJ,aAAa,GAAG,CAAhB,iBAAqB;AAAQ,MAAA,OAAO,EAAE,MAAOC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAGFJ,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAEH,sBADjD,EAEII,GAFJ,CAESD,CAAD,IAAO;AAAC,0BAAO;AAAM,QAAA,SAAS,EAAGpB,EAAE,CAAC;AAAC,WAACF,MAAM,CAACwB,YAAR,GAAuBlB,WAAW,KAAKgB;AAAxC,SAAD,EAA6CtB,MAAM,CAACyB,UAApD,CAApB;AAA8F,QAAA,OAAO,EAAGC,CAAD,IAAOnB,aAAa,CAACe,CAAD,CAA3H;AAAA,wBAAoIA,CAApI;AAAA,SAA2FA,CAA3F;AAAA;AAAA;AAAA;AAAA,cAAP;AAAsJ,KAFtK,CAHE,EAOFP,YAAY,GAAGC,aAAf,iBAAgC;AAAQ,MAAA,OAAO,EAAE,MAAOC,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAP9B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CAtBD;;GAAMb,U;;KAAAA,U;AAwBN,eAAeA,UAAf","sourcesContent":["import styles from './Users.module.css'\r\nimport {useState} from 'react'\r\nimport cn from 'classnames'\r\n\r\n\r\nconst Pagination = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 15 }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 && <button onClick={() =>  setPortionNumber(portionNumber - 1) }> PREV </button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {return <span className={ cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber) } key={p} onClick={(e) => onPageChanged(p) } > {p} </span>})\r\n        }\r\n        {portionCount > portionNumber && <button onClick={() =>  setPortionNumber(portionNumber + 1) } > NEXT </button>}\r\n    </div>\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}