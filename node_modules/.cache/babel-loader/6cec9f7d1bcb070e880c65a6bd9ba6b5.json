{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Users\\\\UsersContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { followAC, setCurrentPageAc, setTotalUsersCountAC, setUsersAC, unFollowAC } from \"../../redux/usersReducer\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport loader from \"../../img/loader.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UsersContainer(props) {\n  _s();\n\n  useEffect(() => {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${props.currentPage}&count=${props.pageSize}`).then(response => {\n      props.setUsers(response.data.items);\n      props.setTotalUsersCount(response.data.totalCount);\n    });\n  }, []);\n\n  let onPageChanged = pageNumber => {\n    props.setCurrentPage(pageNumber);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${props.pageSize}`).then(response => {\n      props.setUsers(response.data.items);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: loader,\n      alt: 'load...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n      totalUsersCount: props.totalUsersCount,\n      pageSize: props.pageSize,\n      currentPage: props.currentPage,\n      onPageChanged: onPageChanged,\n      users: props.users,\n      follow: props.follow,\n      unfollow: props.unfollow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UsersContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UsersContainer;\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    followUID: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollowUID: userId => {\n      dispatch(unFollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAc(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/UsersContainer.jsx"],"names":["followAC","setCurrentPageAc","setTotalUsersCountAC","setUsersAC","unFollowAC","connect","useEffect","axios","Users","loader","UsersContainer","props","get","currentPage","pageSize","then","response","setUsers","data","items","setTotalUsersCount","totalCount","onPageChanged","pageNumber","setCurrentPage","isFetching","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","followUID","userId","unfollowUID"],"mappings":"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","sourcesContent":["import {followAC, setCurrentPageAc, setTotalUsersCountAC, setUsersAC, unFollowAC} from \"../../redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport loader from \"../../img/loader.svg\"\r\nfunction UsersContainer(props) {\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${props.currentPage}&count=${props.pageSize}`)\r\n            .then(response => {\r\n                props.setUsers(response.data.items);\r\n                props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }, [])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${props.pageSize}`)\r\n            .then(response => {\r\n                props.setUsers(response.data.items)\r\n            });\r\n\r\n    }\r\n\r\n    return <>\r\n        {props.isFetching ? <img src={loader} alt={'load...'}/> : null}\r\n        <Users totalUsersCount={props.totalUsersCount}\r\n                  pageSize={props.pageSize}\r\n                  currentPage={props.currentPage}\r\n                  onPageChanged={onPageChanged}\r\n                  users={props.users}\r\n                  follow={props.follow}\r\n                  unfollow={props.unfollow}\r\n    />\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        followUID: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollowUID: (userId) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAc(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        }\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(UsersContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}