{"ast":null,"code":"import { getLoginApi } from \"../compo/api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.data,\n          isAuth: true\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // actionCreator\n\n\nexport const setAuthUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n}); // thunkCreator\n\nexport const loginThunk = () => {\n  return dispatch => {\n    getLoginApi().then(data => {\n      if (data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = data.data;\n        dispatch(setAuthUserData(id, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/authReducer.js"],"names":["getLoginApi","SET_USER_DATA","initialState","id","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","loginThunk","dispatch","then","resultCode"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGO,KADA;AAEH,aAAGC,MAAM,CAACE,IAFP;AAGHL,UAAAA,MAAM,EAAE;AAHL,SAAP;AAKH;;AACD;AACI,aAAOE,KAAP;AATR;AAWH,CAZD,C,CAaA;;;AACA,OAAO,MAAMI,eAAe,GAAG,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,MAAuB;AAACK,EAAAA,IAAI,EAAET,aAAP;AAAsBU,EAAAA,IAAI,EAAE;AAACR,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA;AAAZ;AAA5B,CAAvB,CAAxB,C,CAEP;;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAc;AACjBd,IAAAA,WAAW,GACNe,IADL,CACUJ,IAAI,IAAI;AACV,UAAIA,IAAI,CAACK,UAAL,KAAoB,CAAxB,EAA2B;AACvB,YAAI;AAACb,UAAAA,EAAD;AAAKE,UAAAA,KAAL;AAAYD,UAAAA;AAAZ,YAAqBO,IAAI,CAACA,IAA9B;AACAG,QAAAA,QAAQ,CAACF,eAAe,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,KANL;AAOH,GARD;AASH,CAVM;AAaP,eAAeE,WAAf","sourcesContent":["import {getLoginApi} from \"../compo/api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA'\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n// actionCreator\nexport const setAuthUserData = (id, email, login) => ({type: SET_USER_DATA, data: {id, email, login} });\n\n// thunkCreator\nexport const loginThunk = () => {\n    return (dispatch) => {\n        getLoginApi()\n            .then(data => {\n                if (data.resultCode === 0) {\n                    let {id, login, email} = data.data;\n                    dispatch(setAuthUserData(id, email, login));\n                }\n            });\n    }\n}\n\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}