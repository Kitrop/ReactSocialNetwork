{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Profile\\\\Posts\\\\MyPosts.jsx\";\nimport posts from '../Posts/MyPosts.module.css';\nimport Wall from './Post/Post.jsx';\nimport { createRef } from \"react\";\nimport { addPostActionCreater, updPostActionCreater } from \"../../../redux/profileReducer\";\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPosts = props => {\n  let postsElements = props.postsData.map(p => /*#__PURE__*/_jsxDEV(Wall, {\n    name: p.name,\n    text: p.text,\n    likeCount: p.like\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 34\n  }, this));\n  let newPostElement = /*#__PURE__*/createRef();\n\n  let onAddPost = () => {\n    props.addPostActionCreater();\n  };\n\n  let onPostChange = () => {\n    let textPost = newPostElement.current.value;\n    props.updPostActionCreater(textPost);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: posts.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: posts.myP,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"MyPosts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyPostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: posts.wallPost,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyPosts;\nlet initialValues = {\n  postText: ''\n};\n\nlet submitCallback = (values, _ref) => {\n  let {\n    setSubmitting\n  } = _ref;\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  }, 400);\n};\n\nlet validateValues = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst MyPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validateValues: validateValues,\n    onSubmit: submitCallback,\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'text',\n            name: 'postText',\n            value: values.postText,\n            placeholder: 'Your post text',\n            className: posts.textarea,\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: posts.mybutton,\n            disabled: isSubmitting,\n            children: \"Add post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = MyPostForm;\nexport default MyPosts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyPosts\");\n$RefreshReg$(_c2, \"MyPostForm\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Profile/Posts/MyPosts.jsx"],"names":["posts","Wall","createRef","addPostActionCreater","updPostActionCreater","Formik","MyPosts","props","postsElements","postsData","map","p","name","text","like","id","newPostElement","onAddPost","onPostChange","textPost","current","value","postsBlock","myP","wallPost","initialValues","postText","submitCallback","values","setSubmitting","setTimeout","alert","JSON","stringify","validateValues","errors","email","test","MyPostForm","touched","handleChange","handleBlur","handleSubmit","isSubmitting","textarea","mybutton"],"mappings":"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","sourcesContent":["import posts from '../Posts/MyPosts.module.css';\r\nimport Wall from './Post/Post.jsx';\r\nimport {createRef} from \"react\";\r\nimport {addPostActionCreater, updPostActionCreater} from \"../../../redux/profileReducer\";\r\nimport { Formik } from 'formik';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements =\r\n        props.postsData.map(p => <Wall name={p.name} key={p.id} text={p.text} likeCount={p.like}/>)\r\n\r\n    let newPostElement = createRef();\r\n    let onAddPost = () => {\r\n        props.addPostActionCreater();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let textPost = newPostElement.current.value;\r\n        props.updPostActionCreater(textPost);\r\n    }\r\n    return (\r\n        <div className={posts.postsBlock}>\r\n            <div className={posts.myP}>\r\n                <h3>MyPosts</h3>\r\n            </div>\r\n            <MyPostForm />\r\n            <div className={posts.wallPost}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet initialValues = {\r\n    postText: ''\r\n}\r\nlet submitCallback =  (values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n        alert(JSON.stringify(values, null, 2));\r\n        setSubmitting(false);\r\n    }, 400);\r\n}\r\nlet validateValues = values => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    ) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    return errors;\r\n}\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validateValues={validateValues}\r\n            onSubmit={submitCallback}>\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <input type={'text'} name={'postText'} value={values.postText} placeholder={'Your post text'} className={posts.textarea} onChange={handleChange} onBlur={handleBlur}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" className={posts.mybutton} disabled={isSubmitting}>Add post</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}