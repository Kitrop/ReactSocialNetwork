{"ast":null,"code":"// actions\nimport { deleteUserApi, getUserApi, postUserApi } from \"../compo/api/api\";\nconst FOLLOW_USER = 'FOLLOW_USER';\nconst UNFOLLOW_USER = 'UNFOLLOW_USER';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst SWITCH_IS_FETCHING = 'SWITCH_IS_FETCHING';\nconst SWITCH_IS_FOLLOWING = 'SWITCH_IS_FOLLOWING'; // state\n\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  ifFetching: true,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFollowing: []\n}; //reducer\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW_USER:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW_USER:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n\n    case SWITCH_IS_FETCHING:\n      {\n        return { ...state,\n          ifFetching: action.ifFetching\n        };\n      }\n\n    case SWITCH_IS_FOLLOWING:\n      {\n        return { ...state,\n          isFollowing: action.ifFetching ? [...state.isFollowing, action.userId] : state.isFollowing.filter(id => id !== action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // actionCreator\n\n\nexport const follow = userId => ({\n  type: FOLLOW_USER,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW_USER,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const switchIsFetching = ifFetching => ({\n  type: SWITCH_IS_FETCHING,\n  ifFetching\n});\nexport const switchIsFollowing = (ifFetching, userId) => ({\n  type: SWITCH_IS_FOLLOWING,\n  ifFetching,\n  userId\n}); // thunkCreator\n\nexport const getUserThunk = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(switchIsFetching(true));\n    getUserApi(currentPage, pageSize).then(data => {\n      dispatch(switchIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport const unfollowThunk = id => {\n  return dispatch => {\n    dispatch(switchIsFollowing(true, id));\n    deleteUserApi(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(unfollow(id));\n      }\n\n      dispatch(switchIsFollowing(false, id));\n    });\n  };\n};\nexport const followThunk = id => {\n  return dispatch => {\n    dispatch(switchIsFollowing(true, id));\n    postUserApi(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(follow(id));\n      }\n\n      dispatch(switchIsFollowing(false, id));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/usersReducer.js"],"names":["deleteUserApi","getUserApi","postUserApi","FOLLOW_USER","UNFOLLOW_USER","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SWITCH_IS_FETCHING","SWITCH_IS_FOLLOWING","initialState","users","pageSize","ifFetching","totalUsersCount","currentPage","isFollowing","usersReducer","state","action","type","map","u","id","userId","followed","filter","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","switchIsFetching","switchIsFollowing","getUserThunk","dispatch","then","data","items","totalCount","unfollowThunk","resultCode","followThunk"],"mappings":"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","sourcesContent":["// actions\nimport {deleteUserApi, getUserApi, postUserApi} from \"../compo/api/api\";\n\nconst FOLLOW_USER = 'FOLLOW_USER';\nconst UNFOLLOW_USER = 'UNFOLLOW_USER';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst SWITCH_IS_FETCHING = 'SWITCH_IS_FETCHING'\nconst SWITCH_IS_FOLLOWING = 'SWITCH_IS_FOLLOWING'\n\n// state\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    ifFetching: true,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFollowing: []\n}\n\n//reducer\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW_USER:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW_USER:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS: {\n            return {...state, users: [...action.users]}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount}\n        }\n        case SWITCH_IS_FETCHING: {\n            return {...state, ifFetching: action.ifFetching}\n        }\n        case SWITCH_IS_FOLLOWING: {\n            return {\n                ...state,\n                isFollowing: action.ifFetching\n                    ? [...state.isFollowing, action.userId]\n                    : state.isFollowing.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state\n    }\n}\n\n// actionCreator\nexport const follow = (userId) => ({type: FOLLOW_USER, userId})\nexport const unfollow = (userId) => ({type: UNFOLLOW_USER, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\nexport const switchIsFetching = (ifFetching) => ({type: SWITCH_IS_FETCHING, ifFetching})\nexport const switchIsFollowing= (ifFetching, userId) => ({type: SWITCH_IS_FOLLOWING, ifFetching, userId})\n\n// thunkCreator\nexport const getUserThunk = (currentPage, pageSize) => {\n    return (dispatch) => {\n       dispatch( switchIsFetching(true));\n        getUserApi(currentPage, pageSize)\n            .then(data => {\n                dispatch( switchIsFetching(false));\n                dispatch( setUsers(data.items));\n                dispatch( setTotalUsersCount(data.totalCount));\n            });\n    }\n}\nexport const unfollowThunk = (id) => {\n    return (dispatch) => {\n        dispatch(switchIsFollowing(true, id));\n        deleteUserApi(id)\n            .then((data) => {\n                if (data.resultCode === 0) {\n                    dispatch(unfollow(id));\n                }\n                dispatch( switchIsFollowing(false, id));\n            })\n    }\n}\nexport const followThunk = (id) => {\n    return (dispatch) => {\n        dispatch( switchIsFollowing(true, id));\n        postUserApi(id)\n            .then((data) => {\n                if (data.resultCode === 0) {\n                    dispatch( follow(id));\n                }\n                dispatch( switchIsFollowing(false, id));\n            })\n    }\n}\n\n\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}