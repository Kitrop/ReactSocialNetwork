{"ast":null,"code":"// actions\nimport { userApi } from '../../compo/api/api'; // name action\n\nconst FOLLOW_USER = 'follow/FOLLOW_USER';\nconst UNFOLLOW_USER = 'unfollow/UNFOLLOW_USER';\nconst SET_USERS = 'setUsers/SET_USERS';\nconst SET_CURRENT_PAGE = 'setCurrentPage/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'setTotalUsersCount/SET_TOTAL_USERS_COUNT';\nconst SWITCH_IS_FETCHING = 'switchIsFetching/SWITCH_IS_FETCHING';\nconst SWITCH_IS_FOLLOWING = 'switchIsFollowing/SWITCH_IS_FOLLOWING'; // state\n\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  ifFetching: true,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFollowing: []\n}; //\n\nconst updateObj = items => {\n  items.map(u => {\n    if (u.id === action.userId) {\n      return { ...u,\n        followed: true\n      };\n    }\n\n    return u;\n  });\n}; //reducer\n\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW_USER:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW_USER:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n\n    case SWITCH_IS_FETCHING:\n      {\n        return { ...state,\n          ifFetching: action.ifFetching\n        };\n      }\n\n    case SWITCH_IS_FOLLOWING:\n      {\n        return { ...state,\n          isFollowing: action.ifFetching ? [...state.isFollowing, action.userId] : state.isFollowing.filter(id => id !== action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // actionCreator\n\n\nexport const follow = userId => ({\n  type: FOLLOW_USER,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW_USER,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const switchIsFetching = ifFetching => ({\n  type: SWITCH_IS_FETCHING,\n  ifFetching\n});\nexport const switchIsFollowing = (ifFetching, userId) => ({\n  type: SWITCH_IS_FOLLOWING,\n  ifFetching,\n  userId\n}); // thunkCreator\n\nexport const getUserThunk = (currentPage, pageSize) => async dispatch => {\n  const apiMethod = userApi.getUserApi.bind(userApi);\n  dispatch(switchIsFetching(true));\n  let data = await apiMethod(currentPage, pageSize);\n  dispatch(switchIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const unfollowThunk = id => async dispatch => {\n  await followUnfollowFlowThunk(dispatch, id, userApi.deleteUserApi.bind(userApi), unfollow);\n};\nexport const followThunk = id => async dispatch => {\n  await followUnfollowFlowThunk(dispatch, id, userApi.postUserApi.bind(userApi), follow);\n};\n\nconst followUnfollowFlowThunk = async (dispatch, id, apiMethod, actionCreator) => {\n  dispatch(switchIsFollowing(true, id));\n  let data = await apiMethod(id);\n\n  if (data.resultCode === 0) {\n    dispatch(actionCreator(id));\n  }\n\n  dispatch(switchIsFollowing(false, id));\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/artem/my-app/src/redux/reducers/usersReducer.js"],"names":["userApi","FOLLOW_USER","UNFOLLOW_USER","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SWITCH_IS_FETCHING","SWITCH_IS_FOLLOWING","initialState","users","pageSize","ifFetching","totalUsersCount","currentPage","isFollowing","updateObj","items","map","u","id","action","userId","followed","usersReducer","state","type","filter","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","switchIsFetching","switchIsFollowing","getUserThunk","dispatch","apiMethod","getUserApi","bind","data","totalCount","unfollowThunk","followUnfollowFlowThunk","deleteUserApi","followThunk","postUserApi","actionCreator","resultCode"],"mappings":"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","sourcesContent":["// actions\r\nimport {userApi} from '../../compo/api/api'\r\n\r\n// name action\r\nconst FOLLOW_USER = 'follow/FOLLOW_USER'\r\nconst UNFOLLOW_USER = 'unfollow/UNFOLLOW_USER'\r\nconst SET_USERS = 'setUsers/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'setCurrentPage/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'setTotalUsersCount/SET_TOTAL_USERS_COUNT'\r\nconst SWITCH_IS_FETCHING = 'switchIsFetching/SWITCH_IS_FETCHING'\r\nconst SWITCH_IS_FOLLOWING = 'switchIsFollowing/SWITCH_IS_FOLLOWING'\r\n\r\n// state\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    ifFetching: true,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFollowing: []\r\n}\r\n\r\n//\r\nconst updateObj = (items) => {\r\n    items.map(u => {\r\n        if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n        }\r\n        return u\r\n    })\r\n}\r\n\r\n//reducer\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case SWITCH_IS_FETCHING: {\r\n            return {...state, ifFetching: action.ifFetching}\r\n        }\r\n        case SWITCH_IS_FOLLOWING: {\r\n            return {\r\n                ...state,\r\n                isFollowing: action.ifFetching\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actionCreator\r\nexport const follow = (userId) => ({type: FOLLOW_USER, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW_USER, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const switchIsFetching = (ifFetching) => ({type: SWITCH_IS_FETCHING, ifFetching})\r\nexport const switchIsFollowing = (ifFetching, userId) => ({type: SWITCH_IS_FOLLOWING, ifFetching, userId})\r\n\r\n// thunkCreator\r\nexport const getUserThunk = (currentPage, pageSize) => async (dispatch) => {\r\n    const apiMethod = userApi.getUserApi.bind(userApi)\r\n    dispatch(switchIsFetching(true))\r\n    let data = await apiMethod(currentPage, pageSize)\r\n    dispatch(switchIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\nexport const unfollowThunk = (id) => async (dispatch) => {\r\n    await followUnfollowFlowThunk(dispatch, id, userApi.deleteUserApi.bind(userApi), unfollow)\r\n}\r\nexport const followThunk = (id) => async (dispatch) => {\r\n    await followUnfollowFlowThunk(dispatch, id, userApi.postUserApi.bind(userApi), follow)\r\n}\r\nconst followUnfollowFlowThunk = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch(switchIsFollowing(true, id))\r\n    let data = await apiMethod(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(switchIsFollowing(false, id))\r\n}\r\n\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}