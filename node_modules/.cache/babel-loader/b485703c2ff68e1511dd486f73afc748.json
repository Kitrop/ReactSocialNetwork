{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Message\\\\Dialogs.jsx\",\n    _s = $RefreshSig$();\n\nimport message from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogsItem';\nimport Message from \"./MessagesItem/Message\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getIsAuth, getMessage } from \"../../redux/dialogSelectors\";\nimport DialogsForm from \"./DialogsForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dialogs(props) {\n  _s();\n\n  const isAuth = useSelector(state => getIsAuth(state));\n  let navigator = useNavigate();\n  useEffect(() => {\n    if (isAuth === false) {\n      return navigator('/login');\n    }\n  }, [isAuth, navigator]);\n  const dialogsPage = useSelector(state => getMessage(state));\n  let dialogsElements = dialogsPage.dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 60\n  }, this));\n  let messagesElements = dialogsPage.messagesData.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    ava: m.ava,\n    id: m.id,\n    content: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 62\n  }, this));\n  const dispatch = useDispatch(); // const sendMsgAC = (newMessageText) => dispatch(SendMessageActionCreator());\n\n  const sendMsgAC = newMessageText => dispatch({\n    type: 'SEND_MESSAGE',\n    newMessageText\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: message.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.notify,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.paper_dial,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogsForm, {\n      SendMessageActionCreater: sendMsgAC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dialogs, \"3fn96vC+mpuLZOXw0jcRsotmIY0=\", false, function () {\n  return [useSelector, useNavigate, useSelector, useDispatch];\n});\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Message/Dialogs.jsx"],"names":["message","DialogItem","Message","useEffect","useDispatch","useSelector","getIsAuth","getMessage","DialogsForm","useNavigate","Dialogs","props","isAuth","state","navigator","dialogsPage","dialogsElements","dialogsData","map","d","name","id","messagesElements","messagesData","m","ava","dispatch","sendMsgAC","newMessageText","type","dialogs","notify","paper_dial"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,6BAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAGpB,QAAMC,MAAM,GAAGP,WAAW,CAAEQ,KAAK,IAAIP,SAAS,CAACO,KAAD,CAApB,CAA1B;AACA,MAAIC,SAAS,GAAGL,WAAW,EAA3B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,MAAM,KAAK,KAAf,EAAsB;AAClB,aAAOE,SAAS,CAAC,QAAD,CAAhB;AACH;AACJ,GAJQ,EAIN,CAACF,MAAD,EAASE,SAAT,CAJM,CAAT;AAQA,QAAMC,WAAW,GAAGV,WAAW,CAAEQ,KAAK,IAAIN,UAAU,CAACM,KAAD,CAArB,CAA/B;AACA,MAAIG,eAAe,GAAGD,WAAW,CAACE,WAAZ,CAAwBC,GAAxB,CAA4BC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAAqC,IAAA,EAAE,EAAED,CAAC,CAACE;AAA3C,KAA+BF,CAAC,CAACE,EAAjC;AAAA;AAAA;AAAA;AAAA,UAAjC,CAAtB;AACA,MAAIC,gBAAgB,GAAGP,WAAW,CAACQ,YAAZ,CAAyBL,GAAzB,CAA6BM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAhB;AAAgC,IAAA,EAAE,EAAED,CAAC,CAACH,EAAtC;AAA0C,IAAA,OAAO,EAAEG,CAAC,CAACxB;AAArD,KAA0BwB,CAAC,CAACH,EAA5B;AAAA;AAAA;AAAA;AAAA,UAAlC,CAAvB;AAIA,QAAMK,QAAQ,GAAGtB,WAAW,EAA5B,CAnBoB,CAoBpB;;AACA,QAAMuB,SAAS,GAAIC,cAAD,IAAoBF,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAC,cAAN;AAAsBD,IAAAA;AAAtB,GAAD,CAA9C;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC8B,OAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE9B,OAAO,CAAC+B,MAAxB;AAAA,gBACKf;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACgC,UAAxB;AAAA,gBACKV;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,WAAD;AAAa,MAAA,wBAAwB,EAAEK;AAAvC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAnCQjB,O;UAGUL,W,EACCI,W,EASIJ,W,EAMHD,W;;;KAnBZM,O;AAqCT,eAAeA,OAAf","sourcesContent":["import message from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from \"./MessagesItem/Message\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsAuth, getMessage} from \"../../redux/dialogSelectors\";\r\nimport DialogsForm from \"./DialogsForm\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction Dialogs(props) {\r\n\r\n\r\n    const isAuth = useSelector( state => getIsAuth(state))\r\n    let navigator = useNavigate()\r\n    useEffect(() => {\r\n        if (isAuth === false) {\r\n            return navigator('/login')\r\n        }\r\n    }, [isAuth, navigator]);\r\n\r\n\r\n\r\n    const dialogsPage = useSelector( state => getMessage(state))\r\n    let dialogsElements = dialogsPage.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElements = dialogsPage.messagesData.map(m => <Message ava={m.ava} key={m.id} id={m.id} content={m.message}/>)\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    // const sendMsgAC = (newMessageText) => dispatch(SendMessageActionCreator());\r\n    const sendMsgAC = (newMessageText) => dispatch({type:'SEND_MESSAGE', newMessageText})\r\n\r\n\r\n    return (\r\n        <div className={message.dialogs}>\r\n            <div className={message.notify}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={message.paper_dial}>\r\n                {messagesElements}\r\n            </div>\r\n            <DialogsForm SendMessageActionCreater={sendMsgAC}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}