{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/artem/my-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{Formik}from'formik';import styled from'styled-components';import*as Yup from'yup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Error=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  color: red;\\n  font-size: 18px;\\n  font-style: italic;\\n\"])));export var LoginForm=function LoginForm(_ref){var loginThunk=_ref.loginThunk;var initialValues={email:'',password:'',remember:''};var SignupSchema=Yup.object().shape({password:Yup.string().min(5,'Too Short!').max(50,'Too Long!').required('Required'),email:Yup.string().email('Invalid email').required('Required')});var validateValues=function validateValues(values){var errors={};if(!values.email){errors.email='Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email='Invalid email address';}return errors;};var submitCallback=function submitCallback(values,_ref2){var setSubmitting=_ref2.setSubmitting;setTimeout(function(){loginThunk(values.email,values.password,values.rememberMe);setSubmitting(false);},400);};return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:SignupSchema,validate:validateValues,onSubmit:submitCallback,children:function children(_ref3){var values=_ref3.values,errors=_ref3.errors,touched=_ref3.touched,handleChange=_ref3.handleChange,handleBlur=_ref3.handleBlur,handleSubmit=_ref3.handleSubmit,isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:'email',children:\"Login / Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",onChange:handleChange,onBlur:handleBlur,value:values.email})]}),/*#__PURE__*/_jsxs(Error,{children:[\" \",errors.email&&touched.email&&errors.email,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:'password',children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",onChange:handleChange,onBlur:handleBlur,value:values.password})]}),/*#__PURE__*/_jsx(Error,{children:errors.password&&touched.password&&errors.password}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:'rememberMe',children:\" Remember me\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"rememberMe\",onChange:handleChange,value:values.rememberMe})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isSubmitting,children:\" Submit\"})})]});}});};","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Login/LoginForm.jsx"],"names":["Formik","styled","Yup","Error","div","LoginForm","loginThunk","initialValues","email","password","remember","SignupSchema","object","shape","string","min","max","required","validateValues","values","errors","test","submitCallback","setSubmitting","setTimeout","rememberMe","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import {Formik} from 'formik';\r\nimport styled from 'styled-components';\r\nimport * as Yup from 'yup';\r\n\r\nconst Error = styled.div`\r\n  color: red;\r\n  font-size: 18px;\r\n  font-style: italic;\r\n`\r\n\r\nexport const LoginForm = ({loginThunk}) => {\r\n\r\n    let initialValues = {\r\n        email: '',\r\n        password: '',\r\n        remember: ''\r\n    }\r\n    let SignupSchema = Yup.object().shape({\r\n        password: Yup.string()\r\n            .min(5, 'Too Short!')\r\n            .max(50, 'Too Long!')\r\n            .required('Required'),\r\n        email: Yup.string().email('Invalid email').required('Required'),\r\n    });\r\n    let validateValues = values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n    }\r\n    let submitCallback =  (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            loginThunk(values.email, values.password, values.rememberMe);\r\n            setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={ initialValues }\r\n            validationSchema={SignupSchema}\r\n            validate={ validateValues }\r\n            onSubmit={ submitCallback }\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <label htmlFor={'email'}>Login / Email</label>\r\n                        <input type=\"email\" name=\"email\" onChange={handleChange} onBlur={handleBlur} value={values.email}/>\r\n                    </div>\r\n                    <Error> {errors.email && touched.email && errors.email} </Error>\r\n                    <div>\r\n                        <label htmlFor={'password'}>Password</label>\r\n                        <input type=\"password\" name=\"password\" onChange={handleChange} onBlur={handleBlur}  value={values.password}/>\r\n                    </div>\r\n                    <Error>{errors.password && touched.password && errors.password}</Error>\r\n                    <div>\r\n                        <label htmlFor={'rememberMe'}> Remember me</label>\r\n                        <input type=\"checkbox\" name={\"rememberMe\"} onChange={handleChange}  value={values.rememberMe}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" disabled={isSubmitting}> Submit< /button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}