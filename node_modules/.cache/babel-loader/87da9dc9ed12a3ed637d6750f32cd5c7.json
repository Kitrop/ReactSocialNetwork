{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Users\\\\UsersContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, switchIsFetching, unfollow } from \"../../redux/usersReducer\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../preloader/Preloader\";\nimport { getUserApi } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UsersContainer(props) {\n  _s();\n\n  useEffect(() => {\n    props.switchIsFetching(true);\n    getUserApi(props.currentPage, props.pageSize).then(data => {\n      props.switchIsFetching(false);\n      props.setUsers(data.items);\n      props.setTotalUsersCount(data.totalCount);\n    });\n  }, []);\n\n  let onPageChanged = pageNumber => {\n    props.switchIsFetching(true);\n    props.setCurrentPage(pageNumber);\n    getUserApi(pageNumber, props.pageSize).then(data => {\n      props.switchIsFetching(false);\n      props.setUsers(data.items);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.ifFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Users, {\n      totalUsersCount: props.totalUsersCount,\n      pageSize: props.pageSize,\n      currentPage: props.currentPage,\n      onPageChanged: onPageChanged,\n      users: props.users,\n      follow: props.follow,\n      unfollow: props.unfollow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 44\n    }, this)\n  }, void 0, false);\n}\n\n_s(UsersContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UsersContainer;\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    ifFetching: state.usersPage.ifFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  switchIsFetching\n})(UsersContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/UsersContainer.jsx"],"names":["follow","setCurrentPage","setTotalUsersCount","setUsers","switchIsFetching","unfollow","connect","useEffect","axios","Users","Preloader","getUserApi","UsersContainer","props","currentPage","pageSize","then","data","items","totalCount","onPageChanged","pageNumber","ifFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":";;;AAAA,SACIA,MADJ,EACYC,cADZ,EAC4BC,kBAD5B,EACgDC,QADhD,EAC0DC,gBAD1D,EAC4EC,QAD5E,QAEO,0BAFP;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3BN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACT,gBAAN,CAAuB,IAAvB;AACAO,IAAAA,UAAU,CAACE,KAAK,CAACC,WAAP,EAAmBD,KAAK,CAACE,QAAzB,CAAV,CACKC,IADL,CACUC,IAAI,IAAI;AACVJ,MAAAA,KAAK,CAACT,gBAAN,CAAuB,KAAvB;AACAS,MAAAA,KAAK,CAACV,QAAN,CAAec,IAAI,CAACC,KAApB;AACAL,MAAAA,KAAK,CAACX,kBAAN,CAAyBe,IAAI,CAACE,UAA9B;AACH,KALL;AAMH,GARQ,EAQN,EARM,CAAT;;AAUA,MAAIC,aAAa,GAAIC,UAAD,IAAgB;AAChCR,IAAAA,KAAK,CAACT,gBAAN,CAAuB,IAAvB;AACAS,IAAAA,KAAK,CAACZ,cAAN,CAAqBoB,UAArB;AACAV,IAAAA,UAAU,CAACU,UAAD,EAAaR,KAAK,CAACE,QAAnB,CAAV,CACKC,IADL,CACUC,IAAI,IAAI;AACVJ,MAAAA,KAAK,CAACT,gBAAN,CAAuB,KAAvB;AACAS,MAAAA,KAAK,CAACV,QAAN,CAAec,IAAI,CAACC,KAApB;AACH,KAJL;AAKH,GARD;;AAUA,sBAAO;AAAA,cACFL,KAAK,CAACS,UAAN,gBAAmB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAAkC,QAAC,KAAD;AAAO,MAAA,eAAe,EAAET,KAAK,CAACU,eAA9B;AACO,MAAA,QAAQ,EAAEV,KAAK,CAACE,QADvB;AAEO,MAAA,WAAW,EAAEF,KAAK,CAACC,WAF1B;AAGO,MAAA,aAAa,EAAEM,aAHtB;AAIO,MAAA,KAAK,EAAEP,KAAK,CAACW,KAJpB;AAKO,MAAA,MAAM,EAAEX,KAAK,CAACb,MALrB;AAMO,MAAA,QAAQ,EAAEa,KAAK,CAACR;AANvB;AAAA;AAAA;AAAA;AAAA;AADhC,mBAAP;AASH;;GA/BQO,c;;KAAAA,c;;AAiCT,MAAMa,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHT,IAAAA,QAAQ,EAAEW,KAAK,CAACC,SAAN,CAAgBZ,QAFvB;AAGHQ,IAAAA,eAAe,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,eAH9B;AAIHT,IAAAA,WAAW,EAAEY,KAAK,CAACC,SAAN,CAAgBb,WAJ1B;AAKHQ,IAAAA,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL;AALzB,GAAP;AAOH,CARD;;AAUA,eAAehB,OAAO,CAACmB,eAAD,EAClB;AAACzB,EAAAA,MAAD;AAASK,EAAAA,QAAT;AAAmBF,EAAAA,QAAnB;AAA6BF,EAAAA,cAA7B;AAA6CC,EAAAA,kBAA7C;AAAiEE,EAAAA;AAAjE,CADkB,CAAP,CACyEQ,cADzE,CAAf","sourcesContent":["import {\r\n    follow, setCurrentPage, setTotalUsersCount, setUsers, switchIsFetching, unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport {getUserApi} from \"../api/api\";\r\n\r\nfunction UsersContainer(props) {\r\n\r\n    useEffect(() => {\r\n        props.switchIsFetching(true);\r\n        getUserApi(props.currentPage,props.pageSize)\r\n            .then(data => {\r\n                props.switchIsFetching(false);\r\n                props.setUsers(data.items);\r\n                props.setTotalUsersCount(data.totalCount);\r\n            });\r\n    }, [])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        props.switchIsFetching(true);\r\n        props.setCurrentPage(pageNumber);\r\n        getUserApi(pageNumber, props.pageSize)\r\n            .then(data => {\r\n                props.switchIsFetching(false);\r\n                props.setUsers(data.items)\r\n            });\r\n    }\r\n\r\n    return <>\r\n        {props.ifFetching ? <Preloader/> : <Users totalUsersCount={props.totalUsersCount}\r\n                                                  pageSize={props.pageSize}\r\n                                                  currentPage={props.currentPage}\r\n                                                  onPageChanged={onPageChanged}\r\n                                                  users={props.users}\r\n                                                  follow={props.follow}\r\n                                                  unfollow={props.unfollow}/>}\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        ifFetching: state.usersPage.ifFetching\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, switchIsFetching})(UsersContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}