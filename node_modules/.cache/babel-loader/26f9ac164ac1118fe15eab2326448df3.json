{"ast":null,"code":"import{follow,followThunk,getUserThunk,setCurrentPage,switchIsFollowing,unfollow,unfollowThunk}from'../../redux/reducers/usersReducer';import{connect}from'react-redux';import{useEffect}from'react';import Users from'./Users';import Preloader from'../Preloader/Preloader';import{useNavigate}from'react-router-dom';import{currentPage,currentPageSelector,ifFetchingSelector,isFollowingSelector,pageSize,pageSizeSelector,totalUsersCount,totalUsersCountSelector,usersSelector}from'../../redux/selectors/usersSelector';import{getIsAuth}from'../../redux/selectors/authSelector';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function UsersContainer(props){var navigator=useNavigate();useEffect(function(){if(props.isAuth===false){return navigator('/login');}},[navigator,props.isAuth]);useEffect(function(){props.getUserThunk();},[]);var onPageChanged=function onPageChanged(pageNumber){props.setCurrentPage(pageNumber);props.getUserThunk(pageNumber);};return/*#__PURE__*/_jsx(_Fragment,{children:props.ifFetching?/*#__PURE__*/_jsx(Preloader,{}):/*#__PURE__*/_jsx(Users,{totalUsersCount:props.totalUsersCount,pageSize:props.pageSize,currentPage:props.currentPage,onPageChanged:onPageChanged,users:props.users,follow:props.follow,unfollow:props.unfollow,switchIsFollowing:props.switchIsFollowing,isFollowing:props.isFollowing,unfollowThunk:props.unfollowThunk,followThunk:props.followThunk,isAuth:props.isAuth})});}var mapStateToProps=function mapStateToProps(state){return{users:usersSelector(state),pageSize:pageSizeSelector(state),totalUsersCount:totalUsersCountSelector(state),currentPage:currentPageSelector(state),ifFetching:ifFetchingSelector(state),isFollowing:isFollowingSelector(state),isAuth:getIsAuth(state)};};export default connect(mapStateToProps,{follow:follow,unfollow:unfollow,setCurrentPage:setCurrentPage,switchIsFollowing:switchIsFollowing,getUserThunk:getUserThunk,unfollowThunk:unfollowThunk,followThunk:followThunk})(UsersContainer);","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/UsersContainer.jsx"],"names":["follow","followThunk","getUserThunk","setCurrentPage","switchIsFollowing","unfollow","unfollowThunk","connect","useEffect","Users","Preloader","useNavigate","currentPage","currentPageSelector","ifFetchingSelector","isFollowingSelector","pageSize","pageSizeSelector","totalUsersCount","totalUsersCountSelector","usersSelector","getIsAuth","UsersContainer","props","navigator","isAuth","onPageChanged","pageNumber","ifFetching","users","isFollowing","mapStateToProps","state"],"mappings":"AAAA,OACIA,MADJ,CAEIC,WAFJ,CAGIC,YAHJ,CAIIC,cAJJ,CAKIC,iBALJ,CAMIC,QANJ,CAOIC,aAPJ,KAQO,mCARP,CASA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OACIC,WADJ,CAEIC,mBAFJ,CAGIC,kBAHJ,CAIIC,mBAJJ,CAKIC,QALJ,CAMIC,gBANJ,CAOIC,eAPJ,CAQIC,uBARJ,CASIC,aATJ,KAUO,qCAVP,CAWA,OAAQC,SAAR,KAAwB,oCAAxB,C,gGAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAE3B,GAAIC,CAAAA,SAAS,CAAGb,WAAW,EAA3B,CACAH,SAAS,CAAC,UAAM,CACZ,GAAIe,KAAK,CAACE,MAAN,GAAiB,KAArB,CAA4B,CACxB,MAAOD,CAAAA,SAAS,CAAC,QAAD,CAAhB,CACH,CACJ,CAJQ,CAIN,CAACA,SAAD,CAAYD,KAAK,CAACE,MAAlB,CAJM,CAAT,CAMAjB,SAAS,CAAC,UAAM,CACZe,KAAK,CAACrB,YAAN,GACH,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIwB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,UAAD,CAAgB,CAChCJ,KAAK,CAACpB,cAAN,CAAqBwB,UAArB,EACAJ,KAAK,CAACrB,YAAN,CAAmByB,UAAnB,EACH,CAHD,CAKA,mBAAO,yBACFJ,KAAK,CAACK,UAAN,cAAmB,KAAC,SAAD,IAAnB,cAAkC,KAAC,KAAD,EAAO,eAAe,CAAEL,KAAK,CAACL,eAA9B,CACO,QAAQ,CAAEK,KAAK,CAACP,QADvB,CAEO,WAAW,CAAEO,KAAK,CAACX,WAF1B,CAGO,aAAa,CAAEc,aAHtB,CAIO,KAAK,CAAEH,KAAK,CAACM,KAJpB,CAKO,MAAM,CAAEN,KAAK,CAACvB,MALrB,CAMO,QAAQ,CAAEuB,KAAK,CAAClB,QANvB,CAOO,iBAAiB,CAAEkB,KAAK,CAACnB,iBAPhC,CAQO,WAAW,CAAEmB,KAAK,CAACO,WAR1B,CASO,aAAa,CAAEP,KAAK,CAACjB,aAT5B,CAUO,WAAW,CAAEiB,KAAK,CAACtB,WAV1B,CAWO,MAAM,CAAEsB,KAAK,CAACE,MAXrB,EADhC,EAAP,CAcH,CAED,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHH,KAAK,CAAET,aAAa,CAACY,KAAD,CADjB,CAEHhB,QAAQ,CAAEC,gBAAgB,CAACe,KAAD,CAFvB,CAGHd,eAAe,CAAEC,uBAAuB,CAACa,KAAD,CAHrC,CAIHpB,WAAW,CAAEC,mBAAmB,CAACmB,KAAD,CAJ7B,CAKHJ,UAAU,CAAEd,kBAAkB,CAACkB,KAAD,CAL3B,CAMHF,WAAW,CAAEf,mBAAmB,CAACiB,KAAD,CAN7B,CAOHP,MAAM,CAAEJ,SAAS,CAACW,KAAD,CAPd,CAAP,CASH,CAVD,CAYA,cAAezB,CAAAA,OAAO,CAACwB,eAAD,CAAkB,CAAC/B,MAAM,CAANA,MAAD,CAASK,QAAQ,CAARA,QAAT,CAAmBF,cAAc,CAAdA,cAAnB,CAAmCC,iBAAiB,CAAjBA,iBAAnC,CAAsDF,YAAY,CAAZA,YAAtD,CAAoEI,aAAa,CAAbA,aAApE,CAAmFL,WAAW,CAAXA,WAAnF,CAAlB,CAAP,CAA0HqB,cAA1H,CAAf","sourcesContent":["import {\r\n    follow,\r\n    followThunk,\r\n    getUserThunk,\r\n    setCurrentPage,\r\n    switchIsFollowing,\r\n    unfollow,\r\n    unfollowThunk\r\n} from '../../redux/reducers/usersReducer'\r\nimport {connect} from 'react-redux'\r\nimport {useEffect} from 'react'\r\nimport Users from './Users'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {\r\n    currentPage,\r\n    currentPageSelector,\r\n    ifFetchingSelector,\r\n    isFollowingSelector,\r\n    pageSize,\r\n    pageSizeSelector,\r\n    totalUsersCount,\r\n    totalUsersCountSelector,\r\n    usersSelector\r\n} from '../../redux/selectors/usersSelector'\r\nimport {getIsAuth} from '../../redux/selectors/authSelector'\r\n\r\nfunction UsersContainer(props) {\r\n\r\n    let navigator = useNavigate()\r\n    useEffect(() => {\r\n        if (props.isAuth === false) {\r\n            return navigator('/login')\r\n        }\r\n    }, [navigator, props.isAuth])\r\n\r\n    useEffect(() => {\r\n        props.getUserThunk()\r\n    }, [])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber);\r\n        props.getUserThunk(pageNumber)\r\n    }\r\n\r\n    return <>\r\n        {props.ifFetching ? <Preloader/> : <Users totalUsersCount={props.totalUsersCount}\r\n                                                  pageSize={props.pageSize}\r\n                                                  currentPage={props.currentPage}\r\n                                                  onPageChanged={onPageChanged}\r\n                                                  users={props.users}\r\n                                                  follow={props.follow}\r\n                                                  unfollow={props.unfollow}\r\n                                                  switchIsFollowing={props.switchIsFollowing}\r\n                                                  isFollowing={props.isFollowing}\r\n                                                  unfollowThunk={props.unfollowThunk}\r\n                                                  followThunk={props.followThunk}\r\n                                                  isAuth={props.isAuth}/>}\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: usersSelector(state),\r\n        pageSize: pageSizeSelector(state),\r\n        totalUsersCount: totalUsersCountSelector(state),\r\n        currentPage: currentPageSelector(state),\r\n        ifFetching: ifFetchingSelector(state),\r\n        isFollowing: isFollowingSelector(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, setCurrentPage, switchIsFollowing, getUserThunk, unfollowThunk, followThunk})(UsersContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}