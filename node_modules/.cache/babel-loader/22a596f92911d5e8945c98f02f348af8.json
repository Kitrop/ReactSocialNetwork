{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Login\\\\LoginForm.jsx\";\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = props => {\n  let initialValues = {\n    email: '',\n    password: ''\n  };\n\n  let validateValues = values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n  let submitCallback = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validate: validateValues,\n    onSubmit: submitCallback,\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: 'email',\n            children: \"Login / Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: 'password',\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: 'rememberMe',\n            children: \" Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"rememberMe\",\n            onChange: handleChange,\n            value: values.rememberMe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Login/LoginForm.jsx"],"names":["Formik","LoginForm","props","initialValues","email","password","validateValues","values","errors","test","submitCallback","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","rememberMe"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\n\r\nexport const LoginForm = (props) => {\r\n\r\n    let initialValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    let validateValues = values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n    }\r\n    let submitCallback =  (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={ initialValues }\r\n            validate={ validateValues }\r\n            onSubmit={ submitCallback }\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <label htmlFor={'email'}>Login / Email</label>\r\n                        <input type=\"email\" name=\"email\" onChange={handleChange} onBlur={handleBlur} value={values.email}/>\r\n                    </div>\r\n                    {errors.email && touched.email && errors.email}\r\n\r\n                    <div>\r\n                        <label htmlFor={'password'}>Password</label>\r\n                        <input type=\"password\" name=\"password\" onChange={handleChange} onBlur={handleBlur}  value={values.password}/>\r\n                    </div>\r\n                    {errors.password && touched.password && errors.password}\r\n                    <div>\r\n                        <label htmlFor={'rememberMe'}> Remember me</label>\r\n                        <input type=\"checkbox\" name={\"rememberMe\"} onChange={handleChange}  value={values.rememberMe}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}