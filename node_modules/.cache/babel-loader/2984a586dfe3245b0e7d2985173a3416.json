{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Message\\\\DialogsForm.jsx\";\nimport { Field, Formik } from \"formik\";\nimport message from \"./Dialogs.module.css\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogForm = props => {\n  const initialValues = {\n    messageText: ''\n  };\n\n  let onSubmit = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    setTimeout(() => {\n      console.log(values.messageText);\n      props.SendMessageActionCreater(values.messageText);\n      setSubmitting(false);\n    }, 400);\n  };\n\n  let SignupSchema = Yup.object().shape({\n    messageText: Yup.string().min(1, 'Too Short!').max(105, 'Too Long!')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: SignupSchema,\n    children: _ref2 => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: 'messageText',\n            placeholder: 'type your message',\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.messageText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: message.mybutton,\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogForm;\nexport default DialogForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogForm\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Message/DialogsForm.jsx"],"names":["Field","Formik","message","Yup","DialogForm","props","initialValues","messageText","onSubmit","values","setSubmitting","setTimeout","console","log","SendMessageActionCreater","SignupSchema","object","shape","string","min","max","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","mybutton"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,MAAf,QAA4B,QAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,aAAa,GAAG;AAClBC,IAAAA,WAAW,EAAE;AADK,GAAtB;;AAGA,MAAIC,QAAQ,GAAI,CAACC,MAAD,WAA+B;AAAA,QAAtB;AAAEC,MAAAA;AAAF,KAAsB;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACF,WAAnB;AACAF,MAAAA,KAAK,CAACS,wBAAN,CAA+BL,MAAM,CAACF,WAAtC;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAJS,EAIP,GAJO,CAAV;AAKH,GAND;;AAOA,MAAIK,YAAY,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AAClCV,IAAAA,WAAW,EAAEJ,GAAG,CAACe,MAAJ,GACRC,GADQ,CACJ,CADI,EACD,YADC,EAERC,GAFQ,CAEJ,GAFI,EAEC,WAFD;AADqB,GAAnB,CAAnB;AAKA,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAEd,aADnB;AAEI,IAAA,QAAQ,EAAEE,QAFd;AAGI,IAAA,gBAAgB,EAAIO,YAHxB;AAAA,cAIK;AAAA,UAAC;AACIN,QAAAA,MADJ;AAEIY,QAAAA,MAFJ;AAGIC,QAAAA,OAHJ;AAIIC,QAAAA,YAJJ;AAKIC,QAAAA,UALJ;AAMIC,QAAAA,YANJ;AAOIC,QAAAA;AAPJ,OAAD;AAAA,0BASG;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA,gCACI;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAE,aAAzB;AAAwC,YAAA,WAAW,EAAE,mBAArD;AAA2E,YAAA,QAAQ,EAAEF,YAArF;AAAmG,YAAA,MAAM,EAAEC,UAA3G;AAAuH,YAAA,KAAK,EAAEf,MAAM,CAACF;AAArI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAEmB,YAAhC;AAA8C,YAAA,SAAS,EAAExB,OAAO,CAACyB,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATH;AAAA;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAzCD;;KAAMvB,U;AA2CN,eAAeA,UAAf","sourcesContent":["import {Field, Formik} from \"formik\";\r\nimport message from \"./Dialogs.module.css\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nconst DialogForm = (props) => {\r\n    const initialValues = {\r\n        messageText: ''\r\n    }\r\n    let onSubmit =  (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            console.log(values.messageText)\r\n            props.SendMessageActionCreater(values.messageText)\r\n            setSubmitting(false);\r\n        }, 400);\r\n    }\r\n    let SignupSchema = Yup.object().shape({\r\n        messageText: Yup.string()\r\n            .min(1, 'Too Short!')\r\n            .max(105, 'Too Long!')\r\n    });\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema = {SignupSchema}>\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field type=\"text\" name={'messageText'} placeholder={'type your message'}  onChange={handleChange} onBlur={handleBlur} value={values.messageText}/>\r\n                    </div> \r\n                    <div>\r\n                        <button type=\"submit\" disabled={isSubmitting} className={message.mybutton} >Send Message</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default DialogForm;"]},"metadata":{},"sourceType":"module"}