{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Users\\\\UsersContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, switchIsFetching, unfollow } from \"../../redux/usersReducer\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../preloader/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UsersContainer(props) {\n  _s();\n\n  useEffect(() => {\n    props.switchIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${props.currentPage}&count=${props.pageSize}`).then(response => {\n      props.switchIsFetching(false);\n      props.setUsers(response.data.items);\n      props.setTotalUsersCount(response.data.totalUsersCount);\n    });\n  }, []);\n\n  let onPageChanged = pageNumber => {\n    props.switchIsFetching(true);\n    props.setCurrentPage(pageNumber);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${props.pageSize}`).then(response => {\n      props.switchIsFetching(false);\n      props.setUsers(response.data.items);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.ifFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n      totalUsersCount: props.totalUsersCount,\n      pageSize: props.pageSize,\n      currentPage: props.currentPage,\n      onPageChanged: onPageChanged,\n      users: props.users,\n      follow: props.unfollowUID,\n      unfollow: props.unfollowUID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UsersContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UsersContainer;\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    ifFetching: state.usersPage.ifFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  switchIsFetching\n})(UsersContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/UsersContainer.jsx"],"names":["follow","setCurrentPage","setTotalUsersCount","setUsers","switchIsFetching","unfollow","connect","useEffect","axios","Users","Preloader","UsersContainer","props","get","currentPage","pageSize","then","response","data","items","totalUsersCount","onPageChanged","pageNumber","ifFetching","users","unfollowUID","mapStateToProps","state","usersPage"],"mappings":";;;AAAA,SACIA,MADJ,EAEIC,cAFJ,EAGIC,kBAHJ,EAIIC,QAJJ,EAKIC,gBALJ,EAMIC,QANJ,QAOO,0BAPP;AAQA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3BL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACR,gBAAN,CAAuB,IAAvB;AACAI,IAAAA,KAAK,CAACK,GAAN,CAAW,2DAA0DD,KAAK,CAACE,WAAY,UAASF,KAAK,CAACG,QAAS,EAA/G,EACKC,IADL,CACUC,QAAQ,IAAI;AACdL,MAAAA,KAAK,CAACR,gBAAN,CAAuB,KAAvB;AACAQ,MAAAA,KAAK,CAACT,QAAN,CAAec,QAAQ,CAACC,IAAT,CAAcC,KAA7B;AACAP,MAAAA,KAAK,CAACV,kBAAN,CAAyBe,QAAQ,CAACC,IAAT,CAAcE,eAAvC;AACH,KALL;AAMH,GARQ,EAQN,EARM,CAAT;;AAUA,MAAIC,aAAa,GAAIC,UAAD,IAAgB;AAChCV,IAAAA,KAAK,CAACR,gBAAN,CAAuB,IAAvB;AACAQ,IAAAA,KAAK,CAACX,cAAN,CAAqBqB,UAArB;AACAd,IAAAA,KAAK,CAACK,GAAN,CAAW,2DAA0DS,UAAW,UAASV,KAAK,CAACG,QAAS,EAAxG,EACKC,IADL,CACUC,QAAQ,IAAI;AACdL,MAAAA,KAAK,CAACR,gBAAN,CAAuB,KAAvB;AACAQ,MAAAA,KAAK,CAACT,QAAN,CAAec,QAAQ,CAACC,IAAT,CAAcC,KAA7B;AACH,KAJL;AAKH,GARD;;AAUA,sBAAO;AAAA,eACFP,KAAK,CAACW,UAAN,gBAAmB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAmC,IADjC,eAEH,QAAC,KAAD;AAAO,MAAA,eAAe,EAAEX,KAAK,CAACQ,eAA9B;AACU,MAAA,QAAQ,EAAER,KAAK,CAACG,QAD1B;AAEU,MAAA,WAAW,EAAEH,KAAK,CAACE,WAF7B;AAGU,MAAA,aAAa,EAAEO,aAHzB;AAIU,MAAA,KAAK,EAAET,KAAK,CAACY,KAJvB;AAKU,MAAA,MAAM,EAAEZ,KAAK,CAACa,WALxB;AAMU,MAAA,QAAQ,EAAEb,KAAK,CAACa;AAN1B;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,kBAAP;AAWH;;GAjCQd,c;;KAAAA,c;;AAmCT,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHT,IAAAA,QAAQ,EAAEY,KAAK,CAACC,SAAN,CAAgBb,QAFvB;AAGHK,IAAAA,eAAe,EAAEO,KAAK,CAACC,SAAN,CAAgBR,eAH9B;AAIHN,IAAAA,WAAW,EAAEa,KAAK,CAACC,SAAN,CAAgBd,WAJ1B;AAKHS,IAAAA,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL;AALzB,GAAP;AAOH,CARD;;AAUA,eAAgBjB,OAAO,CAACoB,eAAD,EAAiB;AAAC1B,EAAAA,MAAD;AAASK,EAAAA,QAAT;AAAmBF,EAAAA,QAAnB;AAA6BF,EAAAA,cAA7B;AAA6CC,EAAAA,kBAA7C;AAAiEE,EAAAA;AAAjE,CAAjB,CAAP,CAA4GO,cAA5G,CAAhB","sourcesContent":["import {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    switchIsFetching,\r\n    unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nfunction UsersContainer(props) {\r\n\r\n    useEffect(() => {\r\n        props.switchIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${props.currentPage}&count=${props.pageSize}`)\r\n            .then(response => {\r\n                props.switchIsFetching(false);\r\n                props.setUsers(response.data.items);\r\n                props.setTotalUsersCount(response.data.totalUsersCount);\r\n            });\r\n    }, [])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        props.switchIsFetching(true);\r\n        props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${props.pageSize}`)\r\n            .then(response => {\r\n                props.switchIsFetching(false);\r\n                props.setUsers(response.data.items)\r\n            });\r\n    }\r\n\r\n    return <>\r\n        {props.ifFetching ? <Preloader /> : null }\r\n        <Users totalUsersCount={props.totalUsersCount}\r\n                  pageSize={props.pageSize}\r\n                  currentPage={props.currentPage}\r\n                  onPageChanged={onPageChanged}\r\n                  users={props.users}\r\n                  follow={props.unfollowUID}\r\n                  unfollow={props.unfollowUID}\r\n        />\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        ifFetching: state.usersPage.ifFetching\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps,{follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, switchIsFetching})(UsersContainer)"]},"metadata":{},"sourceType":"module"}