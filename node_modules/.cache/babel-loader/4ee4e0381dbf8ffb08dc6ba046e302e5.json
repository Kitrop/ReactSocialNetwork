{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Users\\\\UsersContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { follow, followThunk, getUserThunk, setCurrentPage, switchIsFollowing, unfollow, unfollowThunk } from \"../../redux/reducers/usersReducer\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport Users from \"./Users\";\nimport Preloader from \"../Preloader/Preloader\";\nimport { useNavigate } from \"react-router-dom\";\nimport { currentPage, currentPageSelector, ifFetching, ifFetchingSelector, isFollowing, isFollowingSelector, pageSize, pageSizeSelector, totalUsersCount, totalUsersCountSelector, usersSelector } from \"../../redux/selectors/usersSelector\";\nimport { getIsAuth } from \"../../redux/selectors/authSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UsersContainer(props) {\n  _s();\n\n  let navigator = useNavigate();\n  useEffect(() => {\n    if (props.isAuth === false) {\n      return navigator('/login');\n    }\n  }, [navigator, props.isAuth]);\n  useEffect(() => {\n    props.getUserThunk();\n  }, []);\n\n  let onPageChanged = pageNumber => {\n    props.setCurrentPage(pageNumber);\n    props.getUserThunk(pageNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.ifFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Users, {\n      totalUsersCount: props.totalUsersCount,\n      pageSize: props.pageSize,\n      currentPage: props.currentPage,\n      onPageChanged: onPageChanged,\n      users: props.users,\n      follow: props.follow,\n      unfollow: props.unfollow,\n      switchIsFollowing: props.switchIsFollowing,\n      isFollowing: props.isFollowing,\n      unfollowThunk: props.unfollowThunk,\n      followThunk: props.followThunk,\n      isAuth: props.isAuth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 44\n    }, this)\n  }, void 0, false);\n}\n\n_s(UsersContainer, \"nUVM4yQsHRWIvLCq/yOyWzfFIzY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UsersContainer;\n\nconst mapStateToProps = state => {\n  return {\n    users: usersSelector(state),\n    pageSize: pageSizeSelector(state),\n    totalUsersCount: totalUsersCountSelector(state),\n    currentPage: currentPageSelector(state),\n    ifFetching: ifFetchingSelector(state),\n    isFollowing: isFollowingSelector(state),\n    isAuth: getIsAuth(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  switchIsFollowing,\n  getUserThunk,\n  unfollowThunk,\n  followThunk\n})(UsersContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/UsersContainer.jsx"],"names":["follow","followThunk","getUserThunk","setCurrentPage","switchIsFollowing","unfollow","unfollowThunk","connect","useEffect","Users","Preloader","useNavigate","currentPage","currentPageSelector","ifFetching","ifFetchingSelector","isFollowing","isFollowingSelector","pageSize","pageSizeSelector","totalUsersCount","totalUsersCountSelector","usersSelector","getIsAuth","UsersContainer","props","navigator","isAuth","onPageChanged","pageNumber","users","mapStateToProps","state"],"mappings":"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","sourcesContent":["import {\r\n    follow,\r\n    followThunk,\r\n    getUserThunk,\r\n    setCurrentPage,\r\n    switchIsFollowing,\r\n    unfollow,\r\n    unfollowThunk\r\n} from \"../../redux/reducers/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {\r\n    currentPage, currentPageSelector,\r\n    ifFetching, ifFetchingSelector,\r\n    isFollowing, isFollowingSelector,\r\n    pageSize, pageSizeSelector,\r\n    totalUsersCount, totalUsersCountSelector,\r\n    usersSelector\r\n} from \"../../redux/selectors/usersSelector\";\r\nimport {getIsAuth} from \"../../redux/selectors/authSelector\";\r\n\r\nfunction UsersContainer(props) {\r\n\r\n    let navigator = useNavigate()\r\n    useEffect(() => {\r\n        if (props.isAuth === false) {\r\n            return navigator('/login')\r\n        }\r\n    }, [navigator, props.isAuth])\r\n\r\n    useEffect(() => {\r\n        props.getUserThunk()\r\n    }, [])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber);\r\n        props.getUserThunk(pageNumber)\r\n    }\r\n\r\n    return <>\r\n        {props.ifFetching ? <Preloader/> : <Users totalUsersCount={props.totalUsersCount}\r\n                                                  pageSize={props.pageSize}\r\n                                                  currentPage={props.currentPage}\r\n                                                  onPageChanged={onPageChanged}\r\n                                                  users={props.users}\r\n                                                  follow={props.follow}\r\n                                                  unfollow={props.unfollow}\r\n                                                  switchIsFollowing={props.switchIsFollowing}\r\n                                                  isFollowing={props.isFollowing}\r\n                                                  unfollowThunk={props.unfollowThunk}\r\n                                                  followThunk={props.followThunk}\r\n                                                  isAuth={props.isAuth}/>}\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: usersSelector(state),\r\n        pageSize: pageSizeSelector(state),\r\n        totalUsersCount: totalUsersCountSelector(state),\r\n        currentPage: currentPageSelector(state),\r\n        ifFetching: ifFetchingSelector(state),\r\n        isFollowing: isFollowingSelector(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, setCurrentPage, switchIsFollowing, getUserThunk, unfollowThunk, followThunk})(UsersContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}