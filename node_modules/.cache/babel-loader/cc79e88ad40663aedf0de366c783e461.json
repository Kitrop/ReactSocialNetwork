{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artem\\\\my-app\\\\src\\\\compo\\\\Users\\\\UsersContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { follow, getUsersThunkCreator, onPageChangedThunkCreator, setCurrentPage, setTotalUsersCount, setUsers, switchIsFetching, switchIsFollowing, unfollow } from \"../../redux/usersReducer\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport Users from \"./Users\";\nimport Preloader from \"../preloader/Preloader\";\nimport { getUserApi } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UsersContainer(props) {\n  _s();\n\n  useEffect(() => {\n    props.getUsersThunkCreator();\n  }, []);\n\n  let onPageChanged = pageNumber => {\n    props.switchIsFetching(true);\n    props.setCurrentPage(pageNumber);\n    getUserApi(pageNumber, props.pageSize).then(data => {\n      props.switchIsFetching(false);\n      props.setUsers(data.items);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.ifFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Users, {\n      totalUsersCount: props.totalUsersCount,\n      pageSize: props.pageSize,\n      currentPage: props.currentPage,\n      onPageChanged: onPageChanged,\n      users: props.users,\n      follow: props.follow,\n      unfollow: props.unfollow,\n      switchIsFollowing: props.switchIsFollowing,\n      isFollowing: props.isFollowing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 44\n    }, this)\n  }, void 0, false);\n}\n\n_s(UsersContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UsersContainer;\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    ifFetching: state.usersPage.ifFetching,\n    isFollowing: state.usersPage.isFollowing\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  switchIsFetching,\n  switchIsFollowing,\n  getUsersThunkCreator,\n  onPageChangedThunkCreator\n})(UsersContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["C:/Users/artem/my-app/src/compo/Users/UsersContainer.jsx"],"names":["follow","getUsersThunkCreator","onPageChangedThunkCreator","setCurrentPage","setTotalUsersCount","setUsers","switchIsFetching","switchIsFollowing","unfollow","connect","useEffect","Users","Preloader","getUserApi","UsersContainer","props","onPageChanged","pageNumber","pageSize","then","data","items","ifFetching","totalUsersCount","currentPage","users","isFollowing","mapStateToProps","state","usersPage"],"mappings":";;;AAAA,SACIA,MADJ,EAEIC,oBAFJ,EAE0BC,yBAF1B,EAGIC,cAHJ,EAIIC,kBAJJ,EAKIC,QALJ,EAMIC,gBANJ,EAOIC,iBAPJ,EAQIC,QARJ,QASO,0BATP;AAUA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3BL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACd,oBAAN;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIe,aAAa,GAAIC,UAAD,IAAgB;AAChCF,IAAAA,KAAK,CAACT,gBAAN,CAAuB,IAAvB;AACAS,IAAAA,KAAK,CAACZ,cAAN,CAAqBc,UAArB;AACAJ,IAAAA,UAAU,CAACI,UAAD,EAAaF,KAAK,CAACG,QAAnB,CAAV,CACKC,IADL,CACUC,IAAI,IAAI;AACVL,MAAAA,KAAK,CAACT,gBAAN,CAAuB,KAAvB;AACAS,MAAAA,KAAK,CAACV,QAAN,CAAee,IAAI,CAACC,KAApB;AACH,KAJL;AAKH,GARD;;AAUA,sBAAO;AAAA,cACFN,KAAK,CAACO,UAAN,gBAAmB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAAkC,QAAC,KAAD;AAAO,MAAA,eAAe,EAAEP,KAAK,CAACQ,eAA9B;AACO,MAAA,QAAQ,EAAER,KAAK,CAACG,QADvB;AAEO,MAAA,WAAW,EAAEH,KAAK,CAACS,WAF1B;AAGO,MAAA,aAAa,EAAER,aAHtB;AAIO,MAAA,KAAK,EAAED,KAAK,CAACU,KAJpB;AAKO,MAAA,MAAM,EAAEV,KAAK,CAACf,MALrB;AAMO,MAAA,QAAQ,EAAEe,KAAK,CAACP,QANvB;AAOO,MAAA,iBAAiB,EAAEO,KAAK,CAACR,iBAPhC;AAQO,MAAA,WAAW,EAAEQ,KAAK,CAACW;AAR1B;AAAA;AAAA;AAAA;AAAA;AADhC,mBAAP;AAWH;;GA3BQZ,c;;KAAAA,c;;AA6BT,MAAMa,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHP,IAAAA,QAAQ,EAAEU,KAAK,CAACC,SAAN,CAAgBX,QAFvB;AAGHK,IAAAA,eAAe,EAAEK,KAAK,CAACC,SAAN,CAAgBN,eAH9B;AAIHC,IAAAA,WAAW,EAAEI,KAAK,CAACC,SAAN,CAAgBL,WAJ1B;AAKHF,IAAAA,UAAU,EAAEM,KAAK,CAACC,SAAN,CAAgBP,UALzB;AAMHI,IAAAA,WAAW,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AAN1B,GAAP;AAQH,CATD;;AAWA,eAAejB,OAAO,CAACkB,eAAD,EAClB;AAAC3B,EAAAA,MAAD;AAASQ,EAAAA,QAAT;AAAmBH,EAAAA,QAAnB;AAA6BF,EAAAA,cAA7B;AAA6CC,EAAAA,kBAA7C;AAAiEE,EAAAA,gBAAjE;AAAmFC,EAAAA,iBAAnF;AAAsGN,EAAAA,oBAAtG;AAA4HC,EAAAA;AAA5H,CADkB,CAAP,CAC6IY,cAD7I,CAAf","sourcesContent":["import {\r\n    follow,\r\n    getUsersThunkCreator, onPageChangedThunkCreator,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    switchIsFetching,\r\n    switchIsFollowing,\r\n    unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport {getUserApi} from \"../api/api\";\r\n\r\nfunction UsersContainer(props) {\r\n\r\n    useEffect(() => {\r\n        props.getUsersThunkCreator()\r\n    }, [])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        props.switchIsFetching(true);\r\n        props.setCurrentPage(pageNumber);\r\n        getUserApi(pageNumber, props.pageSize)\r\n            .then(data => {\r\n                props.switchIsFetching(false);\r\n                props.setUsers(data.items)\r\n            });\r\n    }\r\n\r\n    return <>\r\n        {props.ifFetching ? <Preloader/> : <Users totalUsersCount={props.totalUsersCount}\r\n                                                  pageSize={props.pageSize}\r\n                                                  currentPage={props.currentPage}\r\n                                                  onPageChanged={onPageChanged}\r\n                                                  users={props.users}\r\n                                                  follow={props.follow}\r\n                                                  unfollow={props.unfollow}\r\n                                                  switchIsFollowing={props.switchIsFollowing}\r\n                                                  isFollowing={props.isFollowing}/>}\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        ifFetching: state.usersPage.ifFetching,\r\n        isFollowing: state.usersPage.isFollowing\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, switchIsFetching, switchIsFollowing, getUsersThunkCreator, onPageChangedThunkCreator})(UsersContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}