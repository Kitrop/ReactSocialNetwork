[{"C:\\Users\\artem\\my-app\\src\\reportWebVitals.js":"1","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\appReducer.ts":"2","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\authReducer.ts":"3","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\dialogsReducer.ts":"4","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\profileReducer.ts":"5","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\usersReducer.ts":"6","C:\\Users\\artem\\my-app\\src\\utility\\updateObjectArray.js":"7","C:\\Users\\artem\\my-app\\src\\compo\\Users\\Pagination.tsx":"8","C:\\Users\\artem\\my-app\\src\\compo\\Users\\Users.tsx":"9","C:\\Users\\artem\\my-app\\src\\redux\\types\\type.ts":"10","C:\\Users\\artem\\my-app\\src\\redux\\redux-store.ts":"11","C:\\Users\\artem\\my-app\\src\\compo\\common\\Preloader\\Preloader.tsx":"12","C:\\Users\\artem\\my-app\\src\\compo\\Users\\User.tsx":"13","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\usersSelector.ts":"14","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\authSelector.ts":"15","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\appSelector.ts":"16","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\dialogSelectors.ts":"17","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\profileSelector.ts":"18","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPosts.tsx":"19","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPostForm.tsx":"20","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\Post\\Post.tsx":"21","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\PhotoPost\\PhotoPost.tsx":"22","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfo.tsx":"23","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Profile.tsx":"24","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileStatus.tsx":"25","C:\\Users\\artem\\my-app\\src\\compo\\Nav\\Nav.tsx":"26","C:\\Users\\artem\\my-app\\src\\compo\\common\\404\\NotFound.tsx":"27","C:\\Users\\artem\\my-app\\src\\compo\\Header\\Header.tsx":"28","C:\\Users\\artem\\my-app\\src\\compo\\Login\\Login.tsx":"29","C:\\Users\\artem\\my-app\\src\\compo\\Login\\LoginForm.tsx":"30","C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogUsersItem\\DialogsItem.tsx":"31","C:\\Users\\artem\\my-app\\src\\compo\\Message\\Dialogs.tsx":"32","C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogsForm.tsx":"33","C:\\Users\\artem\\my-app\\src\\App.tsx":"34","C:\\Users\\artem\\my-app\\src\\compo\\Users\\UsersForm.tsx":"35","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\Contacts.jsx":"36","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAboutForm.tsx":"37","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAbout.tsx":"38","C:\\Users\\artem\\my-app\\src\\index.js":"39","C:\\Users\\artem\\my-app\\src\\api\\usersApi.ts":"40","C:\\Users\\artem\\my-app\\src\\api\\profileApi.ts":"41","C:\\Users\\artem\\my-app\\src\\api\\loginApi.ts":"42","C:\\Users\\artem\\my-app\\src\\api\\api.ts":"43","C:\\Users\\artem\\my-app\\src\\compo\\Message\\MessagesItem\\DialogsMessage.tsx":"44","C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\ChatPage.tsx":"45","C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\MessageForm.tsx":"46","C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\Messages\\Messages.tsx":"47","C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\Messages\\Message.tsx":"48","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\chatReducer.ts":"49","C:\\Users\\artem\\my-app\\src\\api\\chatApi.ts":"50","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\chatSelector.ts":"51"},{"size":362,"mtime":1657783028000,"results":"52","hashOfConfig":"53"},{"size":1038,"mtime":1663665382345,"results":"54","hashOfConfig":"53"},{"size":2803,"mtime":1663405424944,"results":"55","hashOfConfig":"53"},{"size":1436,"mtime":1663664708410,"results":"56","hashOfConfig":"53"},{"size":3843,"mtime":1663405424946,"results":"57","hashOfConfig":"53"},{"size":4850,"mtime":1663665545760,"results":"58","hashOfConfig":"53"},{"size":217,"mtime":1658984308854,"results":"59","hashOfConfig":"53"},{"size":2144,"mtime":1663249731568,"results":"60","hashOfConfig":"53"},{"size":5238,"mtime":1663878622714,"results":"61","hashOfConfig":"53"},{"size":698,"mtime":1659537915398,"results":"62","hashOfConfig":"53"},{"size":1184,"mtime":1663665621848,"results":"63","hashOfConfig":"53"},{"size":151,"mtime":1659770398313,"results":"64","hashOfConfig":"53"},{"size":1836,"mtime":1664043592032,"results":"65","hashOfConfig":"53"},{"size":1530,"mtime":1663050221887,"results":"66","hashOfConfig":"53"},{"size":802,"mtime":1660725840467,"results":"67","hashOfConfig":"53"},{"size":290,"mtime":1660725599357,"results":"68","hashOfConfig":"53"},{"size":257,"mtime":1660725599418,"results":"69","hashOfConfig":"53"},{"size":679,"mtime":1660725076032,"results":"70","hashOfConfig":"53"},{"size":1374,"mtime":1663405424923,"results":"71","hashOfConfig":"53"},{"size":2520,"mtime":1663050221834,"results":"72","hashOfConfig":"53"},{"size":731,"mtime":1663405424926,"results":"73","hashOfConfig":"53"},{"size":165,"mtime":1657792949047,"results":"74","hashOfConfig":"53"},{"size":1945,"mtime":1663873218972,"results":"75","hashOfConfig":"53"},{"size":2478,"mtime":1663878717464,"results":"76","hashOfConfig":"53"},{"size":2213,"mtime":1663050221850,"results":"77","hashOfConfig":"53"},{"size":755,"mtime":1660733332525,"results":"78","hashOfConfig":"53"},{"size":549,"mtime":1664043511193,"results":"79","hashOfConfig":"53"},{"size":5380,"mtime":1664043456715,"results":"80","hashOfConfig":"53"},{"size":1390,"mtime":1663050221822,"results":"81","hashOfConfig":"53"},{"size":3966,"mtime":1664100039731,"results":"82","hashOfConfig":"53"},{"size":464,"mtime":1660042603323,"results":"83","hashOfConfig":"53"},{"size":1934,"mtime":1663406710624,"results":"84","hashOfConfig":"53"},{"size":2009,"mtime":1663050221828,"results":"85","hashOfConfig":"53"},{"size":2436,"mtime":1663672101672,"results":"86","hashOfConfig":"53"},{"size":2847,"mtime":1664043626125,"results":"87","hashOfConfig":"53"},{"size":4507,"mtime":1662549032014,"results":"88","hashOfConfig":"53"},{"size":2757,"mtime":1663873147478,"results":"89","hashOfConfig":"53"},{"size":737,"mtime":1662660944974,"results":"90","hashOfConfig":"53"},{"size":1016,"mtime":1663405424939,"results":"91","hashOfConfig":"53"},{"size":930,"mtime":1663405424916,"results":"92","hashOfConfig":"53"},{"size":1004,"mtime":1663405424915,"results":"93","hashOfConfig":"53"},{"size":735,"mtime":1663405424914,"results":"94","hashOfConfig":"53"},{"size":732,"mtime":1664042122774,"results":"95","hashOfConfig":"53"},{"size":330,"mtime":1663406710536,"results":"96","hashOfConfig":"53"},{"size":1673,"mtime":1664100073331,"results":"97","hashOfConfig":"53"},{"size":1547,"mtime":1664099753744,"results":"98","hashOfConfig":"53"},{"size":707,"mtime":1664097246783,"results":"99","hashOfConfig":"53"},{"size":842,"mtime":1664099390217,"results":"100","hashOfConfig":"53"},{"size":2873,"mtime":1664045518579,"results":"101","hashOfConfig":"53"},{"size":2965,"mtime":1664045072429,"results":"102","hashOfConfig":"53"},{"size":420,"mtime":1663915875539,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"310arz",{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"111"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"111"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"111"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"111"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"C:\\Users\\artem\\my-app\\src\\reportWebVitals.js",[],[],["265","266"],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\appReducer.ts",[],[],["267","268"],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\authReducer.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\dialogsReducer.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\profileReducer.ts",["269"],[],"import {PhotosType, PostDataType, ProfileType } from '../types/type'\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"../redux-store\";\r\nimport {ResultCodesEnum} from '../../api/api'\r\nimport { profileApi } from '../../api/profileApi';\r\nimport profile from '../../compo/Profile/Profile'\r\n\r\n\r\n\r\n// state\r\nlet initialState = {\r\n    postsData: [\r\n        {name: 'Evgeniy', text: 'I need more React', like: '16'},\r\n        {name: 'Evgeniy', text: 'I love REACT!!!', like: '45'}\r\n    ] as Array<PostDataType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: '',\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\n//reducer\r\ninterface NewPostInterface {\r\n    name: string\r\n    text: string\r\n    like: string\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'ADD_POST': {\r\n            let newPost: NewPostInterface = {\r\n                name: 'Oleg',\r\n                text: action.newPostText,\r\n                like: '56',\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case 'SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'SET_PROFILE_STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'SET_PROFILE_PHOTO': {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// interfaces\r\n\r\nexport type ActionsType = InferActionsTypes<typeof profileActions>\r\ntype DispatchThunkType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\n// actionCreator\r\nexport const profileActions = {\r\n    addPostActionCreater: (newPostText: string) => ({type: 'ADD_POST', newPostText} as const),\r\n    setUserProfile:  (profile: ProfileType) => ({type: 'SET_USER_PROFILE', profile} as const),\r\n    setProfileStatus: (status: string) => ({type: 'SET_PROFILE_STATUS', status} as const),\r\n    setProfilePhoto: (photos: PhotosType) => ({type: 'SET_PROFILE_PHOTO', photos} as const),\r\n}\r\n\r\n\r\n// thunkCreator\r\nexport const getProfileThunk = (userId: number | string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.getProfileAPI(userId)\r\n    dispatch(profileActions.setUserProfile(data))\r\n}\r\nexport const getProfileStatus = (userId: number | string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.getProfileStatus(userId)\r\n    dispatch(profileActions.setProfileStatus(data))\r\n}\r\nexport const putProfileStatus = (status: string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.putProfileStatus(status)\r\n    if (data.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(profileActions.setProfileStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (photos: File) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.putProfilePhoto(photos)\r\n    if (data.data.resultCode === 0) {\r\n        dispatch(profileActions.setProfilePhoto(data.data.data))\r\n    }\r\n}\r\nexport const putProfileInfo = (profile: ProfileType) => async (dispatch: DispatchThunkType, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let data = await profileApi.putProfileInfo(profile)\r\n    if (data.data.resultCode === ResultCodesEnum.Success) {\r\n        if (userId !== null) {\r\n            dispatch(getProfileThunk(userId)).then(r => r)\r\n        }\r\n        else {\r\n            throw new Error('userId not be found')\r\n        }\r\n    }\r\n    else {\r\n        return Promise.reject(data.data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer\r\n","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\usersReducer.ts",[],["270","271"],"C:\\Users\\artem\\my-app\\src\\utility\\updateObjectArray.js",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\Pagination.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\Users.tsx",["272","273","274"],[],"import Pagination from './Pagination'\r\nimport {FC, useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {\r\n    currentPageSelector,\r\n    filterSelector,\r\n    ifFetchingSelector,\r\n    isFollowingSelector,\r\n    pageSizeSelector,\r\n    portionSizeSelector,\r\n    totalUsersCountSelector,\r\n    usersSelector\r\n} from '../../redux/selectors/usersSelector'\r\nimport {getIsAuthSelector} from '../../redux/selectors/authSelector'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {ActionsType, FilterType, followThunk, getUserThunk, unfollowThunk} from '../../redux/reducers/usersReducer'\r\nimport {useNavigate, useSearchParams} from 'react-router-dom'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport User from './User'\r\nimport UsersForm from './UsersForm'\r\n\r\n\r\ntype Props = {\r\n    titleText: string\r\n}\r\n\r\nconst Users: FC<Props> = ({titleText = 'Users'}) => {\r\n\r\n    // STATE\r\n    const ifFetching = useSelector((state: AppStateType) => ifFetchingSelector(state))\r\n    const isAuth = useSelector((state: AppStateType) => getIsAuthSelector(state))\r\n    const currentPage = useSelector((state: AppStateType) => currentPageSelector(state))\r\n    const filter = useSelector((state: AppStateType) => filterSelector(state))\r\n    const totalUsersCount = useSelector((state: AppStateType) => totalUsersCountSelector(state))\r\n    const pageSize = useSelector((state: AppStateType) => pageSizeSelector(state))\r\n    const portionSize = useSelector((state: AppStateType) => portionSizeSelector(state))\r\n    const users = useSelector((state: AppStateType) => usersSelector(state))\r\n    const isFetching = useSelector((state: AppStateType) => isFollowingSelector(state))\r\n\r\n    // Dispatch Action Creator\r\n    const dispatch: ThunkDispatch<AppStateType, unknown, ActionsType> = useDispatch()\r\n\r\n    // Dispatch Thunk\r\n    const unfollowThunk_ = (id: number) => dispatch(unfollowThunk(id))\r\n    const followThunk_ = (id: number) => dispatch(followThunk(id))\r\n    const getUserThunk_ = useCallback((currentPage: number, filter: FilterType) => dispatch(getUserThunk(currentPage, filter)), [dispatch])\r\n\r\n\r\n\r\n\r\n\r\n    // If user not login, redirect to /login\r\n    useEffect(() => {\r\n        getUserThunk_(currentPage, filter)\r\n    },  [isAuth, getUserThunk_])\r\n\r\n\r\n    let [searchParams, setSearchParams] = useSearchParams()\r\n    useEffect(() => {\r\n        const result: any = {}\r\n        // @ts-ignore\r\n        // пробегаемся по URL, где есть ключ(term или friend) и значение(строка или boolean)\r\n        for (const [key, value] of searchParams.entries()) {\r\n            let urlValue: any = +value\r\n            // если urlValue ничему не равен, то ему присваевается value\r\n            if (isNaN(urlValue)) {\r\n                urlValue = value\r\n            }\r\n            if (urlValue === 'true') {\r\n                urlValue = true\r\n            } else if (urlValue === 'false') {\r\n                urlValue = false\r\n            }\r\n            // помещаем результат в объект\r\n            result[key] = urlValue\r\n        }\r\n        // присваиваем страницу\r\n        let actualPage = result.page || currentPage\r\n\r\n        // присваиваем строку поиска\r\n        let term = result.term || filter.term\r\n\r\n        // присваиваем друга\r\n        let friend = result.friend || filter.friend\r\n\r\n        // если в url нету friend или он равен false, присваиваем параметр из бизнеса\r\n        if (result.friend === false) {\r\n            friend = result.friend\r\n        }\r\n\r\n        // определяем актуальный фильтер\r\n        const currentFilter = {term, friend}\r\n\r\n        getUserThunk_(actualPage, currentFilter).then(r => r)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const term = filter.term\r\n        const friend = filter.friend\r\n        let url = (term === '' ? '' : `&term=${term}`) + (friend === null ? '' : `&friend=${friend}`) + (currentPage === 1 ? '' : `&page=${currentPage}`)\r\n        setSearchParams(url)\r\n    }, [filter, currentPage])\r\n\r\n\r\n    // If page change\r\n    const onPageChanged = (pageNumber: number, filter: FilterType) => {\r\n        getUserThunk_(pageNumber, filter).then(r => r)\r\n    }\r\n\r\n    // If filter change\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        getUserThunk_(1, filter).then(r => r)\r\n    }\r\n\r\n\r\n    let navigator = useNavigate()\r\n    useEffect(() => {\r\n        if ( !isAuth ) {\r\n            return navigator('/login')\r\n        }\r\n    }, [isAuth, navigator]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {ifFetching ? <Preloader/> : null}\r\n            <UsersForm onFilterChanged={onFilterChanged}/>\r\n            <Pagination totalUsersCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} portionSize={portionSize} filter={filter}/>\r\n            <h2>{titleText}</h2>\r\n            <User unfollowThunk={unfollowThunk_} followThunk={followThunk_} users={users} isFetching={isFetching}/>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Users","C:\\Users\\artem\\my-app\\src\\redux\\types\\type.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\redux-store.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\common\\Preloader\\Preloader.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\User.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\usersSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\authSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\appSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\dialogSelectors.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\profileSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPosts.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPostForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\Post\\Post.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\PhotoPost\\PhotoPost.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Profile.tsx",["275"],[],"import myPosts from './Profile.module.css'\r\nimport '../Profile/Posts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {profilePageSelector, profileStatusSelector} from '../../redux/selectors/profileSelector'\r\nimport {getAuthIdSelector, getIsAuthSelector} from '../../redux/selectors/authSelector'\r\nimport {\r\n    getProfileStatus,\r\n    getProfileThunk,\r\n    putProfileInfo,\r\n    putProfileStatus,\r\n    savePhoto\r\n} from '../../redux/reducers/profileReducer'\r\nimport {useNavigate, useParams} from 'react-router-dom'\r\nimport {useCallback, useEffect} from 'react'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {ProfileType} from '../../redux/types/type'\r\nimport MyPosts from '../Profile/Posts/MyPosts'\r\n\r\nconst Profile = () => {\r\n\r\n    // STATE\r\n    const profile = useSelector((state: AppStateType) => profilePageSelector(state))\r\n    const status = useSelector((state: AppStateType) => profileStatusSelector(state))\r\n    const isAuth = useSelector((state: AppStateType) => getIsAuthSelector(state))\r\n    const authId = useSelector((state: AppStateType) => getAuthIdSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch:ThunkDispatch<AppStateType, any, any> = useDispatch()\r\n    const getProfileThunk_ = useCallback((userId: number) => dispatch(getProfileThunk(userId)), [dispatch])\r\n    const getProfileStatus_ = useCallback((userId: number) => dispatch(getProfileStatus(userId)), [dispatch])\r\n    const putProfileStatus_ = (status: string) => dispatch(putProfileStatus(status))\r\n    const savePhoto_ = (photos: File) => dispatch(savePhoto(photos))\r\n    const putProfileInfo_ = (profile: ProfileType) => dispatch(putProfileInfo(profile))\r\n\r\n    let navigate = useNavigate()\r\n    useEffect(()=>{\r\n        if( !isAuth ) {\r\n            return navigate(\"/login\")\r\n        }\r\n    }, [navigate, isAuth])\r\n\r\n\r\n    let {userId} = useParams<{userId: any}>()\r\n    useEffect(() => {\r\n        getProfileThunk_(userId).then(r => r)\r\n        getProfileStatus_(userId).then(r => r)\r\n    }, [getProfileStatus_, getProfileThunk_, userId]);\r\n\r\n    return (\r\n        <div className={myPosts.content}>\r\n            <ProfileInfo savePhoto={savePhoto_} isOwner={authId == userId} profile={profile} status={status} putProfileStatus={putProfileStatus_} putProfileInfo={putProfileInfo_}/>\r\n            <MyPosts />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Nav\\Nav.tsx",[],[],["276","277"],"C:\\Users\\artem\\my-app\\src\\compo\\common\\404\\NotFound.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Header\\Header.tsx",["278"],[],"import style from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {FC, memo, useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {getIsAuthSelector, getLoginSelector} from '../../redux/selectors/authSelector'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {ActionsType, loginMeThunk, logoutThunk} from '../../redux/reducers/authReducer'\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport {\r\n    AppBar,\r\n    Box,\r\n    Button,\r\n    createTheme,\r\n    Divider,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemText,\r\n    ThemeProvider,\r\n    Toolbar\r\n} from '@mui/material'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\nimport SendIcon from '@mui/icons-material/Send'\r\nimport PeopleIcon from '@mui/icons-material/People'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport uniqid from 'uniqid'\r\n\r\n\r\ninterface Props {\r\n    window?: () => Window;\r\n}\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: '#0091cf',\r\n        },\r\n    },\r\n});\r\n\r\nconst Header: FC<Props> = memo((props) => {\r\n\r\n\r\n    // STATE\r\n    const isAuth_ = useSelector((state: AppStateType) =>  getIsAuthSelector(state))\r\n    const login_ = useSelector((state: AppStateType)  => getLoginSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, unknown, ActionsType> = useDispatch()\r\n    const loginThunk_ = useCallback(() => dispatch(loginMeThunk()), [dispatch])\r\n    const logoutThunk_ = () => dispatch(logoutThunk())\r\n\r\n    const drawerWidth = 240;\r\n    const navItems = [\r\n        <span className={style.linkSpan}> <NavLink className={style.link} to=\"/profile/24394\"> <PersonIcon className={style.linkIcon}/> Profile</NavLink> </span> ,\r\n        <span className={style.linkSpan}> <NavLink className={style.link} to=\"/chat\"> <ChatIcon className={style.linkIcon}/> Chat</NavLink> </span> ,\r\n        <span className={style.linkSpan}> <NavLink className={style.link} to=\"/users\"> <PeopleIcon className={style.linkIcon}/> Find user</NavLink> </span>,\r\n        <span> {isAuth_ ?  <button onClick={logoutThunk_} className={style.logout_btn}> {login_} - <LogoutIcon className={style.logout_icon}/> </button> : <NavLink className={style.link} to={'/Login'}> Login </NavLink>} </span>\r\n    ]\r\n\r\n    useEffect( () => {\r\n        loginThunk_().then(r => r)\r\n    }, [loginThunk_, isAuth_]);\r\n\r\n\r\n    const { window } = props;\r\n    const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const drawer = (\r\n        <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\r\n            <Divider />\r\n            <List>\r\n                {navItems.map((item) => (\r\n                    // @ts-ignore\r\n                    <ListItem key={uniqid()} disablePadding>\r\n                        <ListItemButton sx={{ textAlign: 'center' }}>\r\n                            <ListItemText className={style.link} primary={item} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <Box  sx={{ display: 'grid' }}>\r\n            <ThemeProvider theme={theme}>\r\n                <AppBar className={style.header} color={'secondary'} component=\"nav\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            edge=\"start\"\r\n                            onClick={handleDrawerToggle}\r\n                            sx={{ mr: 2, display: { sm: 'none' } }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Box sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n                            {navItems.map((item) => (\r\n                                // @ts-ignore\r\n                                <Button key={uniqid()} sx={{ color: '#fff' }}>\r\n                                    {item}\r\n                                </Button>\r\n                            ))}\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ThemeProvider>\r\n            <Box component=\"nav\">\r\n                <Drawer\r\n                    color={'secondary'}\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                    sx={{\r\n                        display: { xs: 'block', sm: 'none' },\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                >\r\n                    {drawer}\r\n                </Drawer>\r\n            </Box>\r\n            <div className={style.login_btn}>\r\n            </div>\r\n        </Box>\r\n    )\r\n})\r\n\r\n\r\nexport default Header;","C:\\Users\\artem\\my-app\\src\\compo\\Login\\Login.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Login\\LoginForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogUsersItem\\DialogsItem.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\Dialogs.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogsForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\App.tsx",["279","280"],[],"import './App.module.css'\r\nimport s from './App.module.css'\r\nimport Nav from './compo/Nav/Nav'\r\nimport {Route, Routes} from '../node_modules/react-router-dom/index'\r\nimport {Navigate} from 'react-router-dom'\r\nimport ScrollToTop from 'react-scroll-to-top'\r\nimport Login from './compo/Login/Login'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {lazy, Suspense, useEffect} from 'react'\r\nimport {getInitializedSelector} from './redux/selectors/appSelector'\r\nimport Preloader from './compo/common/Preloader/Preloader'\r\nimport NotFound from './compo/common/404/NotFound'\r\nimport {ActionsType, initializeApp} from './redux/reducers/appReducer'\r\nimport Users from './compo/Users/Users'\r\nimport Profile from './compo/Profile/Profile'\r\nimport Header from './compo/Header/Header'\r\nimport {AppStateType} from './redux/redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport ChatPage from './compo/pages/Chat/ChatPage'\r\n\r\nconst Dialogs = lazy(() => import('./compo/Message/Dialogs'))\r\n\r\nconst App = () => {\r\n\r\n    // STATE\r\n    const initialized = useSelector( (state: AppStateType) => getInitializedSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, unknown, ActionsType> = useDispatch()\r\n    const initialize = () => dispatch(initializeApp())\r\n\r\n    useEffect(() => {\r\n        initialize().then(r => r)\r\n    }, [initialized])\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.grid}>\r\n            <Header/>\r\n            {/*<Nav/>*/}\r\n            <ScrollToTop smooth/>\r\n            <div className={s.content}>\r\n                <Routes>\r\n                    <Route path=\"/dialogs/*\" element={<Suspense fallback={<Preloader/>}> <Dialogs/> </Suspense>}/>\r\n                    <Route path=\"/profile/:userId\" element={<Suspense fallback={<Preloader/>}> <Profile/> </Suspense>}/>\r\n                    <Route path=\"/profile\" element={<Suspense fallback={<Preloader/>}> <Profile/> </Suspense>}/>\r\n                    <Route path=\"/users\" element={<Users titleText={'Samurais'}/>}/>\r\n                    <Route path=\"/login\" element={<Login/>}/>\r\n                    <Route path=\"/chat\" element={<ChatPage />}/>\r\n                    <Route path=\"*\" element={<NotFound/>}/>\r\n                    <Route path=\"/\" element={<Navigate to=\"/users\"/>}/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","C:\\Users\\artem\\my-app\\src\\compo\\Users\\UsersForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\Contacts.jsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAboutForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAbout.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\index.js",[],[],"C:\\Users\\artem\\my-app\\src\\api\\usersApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\api\\profileApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\api\\loginApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\api\\api.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\MessagesItem\\DialogsMessage.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\ChatPage.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\MessageForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\Messages\\Messages.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\pages\\Chat\\Messages\\Message.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\chatReducer.ts",[],[],"C:\\Users\\artem\\my-app\\src\\api\\chatApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\chatSelector.ts",[],[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":15},{"ruleId":"289","severity":1,"message":"290","line":52,"column":20,"nodeType":"291","messageId":"292","endLine":59,"endColumn":14,"suppressions":"293"},{"ruleId":"294","severity":1,"message":"295","line":58,"column":57,"nodeType":"296","messageId":"297","endLine":58,"endColumn":59,"suppressions":"298"},{"ruleId":"299","severity":1,"message":"300","line":56,"column":9,"nodeType":"301","endLine":56,"endColumn":32,"suggestions":"302"},{"ruleId":"299","severity":1,"message":"303","line":96,"column":8,"nodeType":"301","endLine":96,"endColumn":10,"suggestions":"304"},{"ruleId":"299","severity":1,"message":"305","line":104,"column":8,"nodeType":"301","endLine":104,"endColumn":29,"suggestions":"306"},{"ruleId":"294","severity":1,"message":"307","line":53,"column":65,"nodeType":"296","messageId":"297","endLine":53,"endColumn":67},{"ruleId":"281","replacedBy":"308"},{"ruleId":"283","replacedBy":"309"},{"ruleId":"285","severity":1,"message":"310","line":27,"column":8,"nodeType":"287","messageId":"288","endLine":27,"endColumn":16},{"ruleId":"285","severity":1,"message":"311","line":3,"column":8,"nodeType":"287","messageId":"288","endLine":3,"endColumn":11},{"ruleId":"299","severity":1,"message":"312","line":34,"column":8,"nodeType":"301","endLine":34,"endColumn":21,"suggestions":"313"},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"@typescript-eslint/no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","@typescript-eslint/consistent-type-assertions","Use 'as InitialStateInterface' instead of '<InitialStateInterface>'.","TSTypeAssertion","as",["316"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["317"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'filter'. Either include them or remove the dependency array.","ArrayExpression",["318"],"React Hook useEffect has missing dependencies: 'currentPage', 'filter.friend', 'filter.term', 'getUserThunk_', and 'searchParams'. Either include them or remove the dependency array.",["319"],"React Hook useEffect has a missing dependency: 'setSearchParams'. Either include it or remove the dependency array.",["320"],"Expected '===' and instead saw '=='.",["314"],["315"],"'SendIcon' is defined but never used.","'Nav' is defined but never used.","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["321"],"no-global-assign","no-unsafe-negation",{"kind":"322","justification":"323"},{"kind":"322","justification":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"directive","","Update the dependencies array to be: [isAuth, getUserThunk_, currentPage, filter]",{"range":"332","text":"333"},"Update the dependencies array to be: [currentPage, filter.friend, filter.term, getUserThunk_, searchParams]",{"range":"334","text":"335"},"Update the dependencies array to be: [filter, currentPage, setSearchParams]",{"range":"336","text":"337"},"Update the dependencies array to be: [initialize, initialized]",{"range":"338","text":"339"},[2318,2341],"[isAuth, getUserThunk_, currentPage, filter]",[3699,3701],"[currentPage, filter.friend, filter.term, getUserThunk_, searchParams]",[3995,4016],"[filter, currentPage, setSearchParams]",[1358,1371],"[initialize, initialized]"]