[{"C:\\Users\\artem\\my-app\\src\\reportWebVitals.js":"1","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\appReducer.ts":"2","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\authReducer.ts":"3","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\dialogsReducer.ts":"4","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\profileReducer.ts":"5","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\usersReducer.ts":"6","C:\\Users\\artem\\my-app\\src\\utility\\updateObjectArray.js":"7","C:\\Users\\artem\\my-app\\src\\compo\\Users\\Pagination.tsx":"8","C:\\Users\\artem\\my-app\\src\\compo\\Users\\Users.tsx":"9","C:\\Users\\artem\\my-app\\src\\redux\\types\\type.ts":"10","C:\\Users\\artem\\my-app\\src\\redux\\redux-store.ts":"11","C:\\Users\\artem\\my-app\\src\\compo\\common\\Preloader\\Preloader.tsx":"12","C:\\Users\\artem\\my-app\\src\\compo\\Users\\User.tsx":"13","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\usersSelector.ts":"14","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\authSelector.ts":"15","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\appSelector.ts":"16","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\dialogSelectors.ts":"17","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\profileSelector.ts":"18","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPosts.tsx":"19","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPostForm.tsx":"20","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\Post\\Post.tsx":"21","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\PhotoPost\\PhotoPost.tsx":"22","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfo.tsx":"23","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Profile.tsx":"24","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileStatus.tsx":"25","C:\\Users\\artem\\my-app\\src\\compo\\Nav\\Nav.tsx":"26","C:\\Users\\artem\\my-app\\src\\compo\\common\\404\\NotFound.tsx":"27","C:\\Users\\artem\\my-app\\src\\compo\\Header\\Header.tsx":"28","C:\\Users\\artem\\my-app\\src\\compo\\Login\\Login.tsx":"29","C:\\Users\\artem\\my-app\\src\\compo\\Login\\LoginForm.tsx":"30","C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogUsersItem\\DialogsItem.tsx":"31","C:\\Users\\artem\\my-app\\src\\compo\\Message\\MessagesItem\\Message.tsx":"32","C:\\Users\\artem\\my-app\\src\\compo\\Message\\Dialogs.tsx":"33","C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogsForm.tsx":"34","C:\\Users\\artem\\my-app\\src\\compo\\api\\api.ts":"35","C:\\Users\\artem\\my-app\\src\\compo\\api\\loginApi.ts":"36","C:\\Users\\artem\\my-app\\src\\compo\\api\\profileApi.ts":"37","C:\\Users\\artem\\my-app\\src\\compo\\api\\usersApi.ts":"38","C:\\Users\\artem\\my-app\\src\\App.tsx":"39","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\sidebarReducer.ts":"40","C:\\Users\\artem\\my-app\\src\\compo\\Users\\UsersForm.tsx":"41","C:\\Users\\artem\\my-app\\src\\index.tsx":"42","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\Contacts.jsx":"43","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAboutForm.tsx":"44","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAbout.tsx":"45"},{"size":362,"mtime":1657783028000,"results":"46","hashOfConfig":"47"},{"size":1037,"mtime":1661883781502,"results":"48","hashOfConfig":"47"},{"size":2815,"mtime":1661894441547,"results":"49","hashOfConfig":"47"},{"size":1436,"mtime":1662202053390,"results":"50","hashOfConfig":"47"},{"size":3855,"mtime":1662655342552,"results":"51","hashOfConfig":"47"},{"size":4866,"mtime":1662283151281,"results":"52","hashOfConfig":"47"},{"size":217,"mtime":1658984308854,"results":"53","hashOfConfig":"47"},{"size":2144,"mtime":1662895682530,"results":"54","hashOfConfig":"47"},{"size":5258,"mtime":1662538592490,"results":"55","hashOfConfig":"47"},{"size":698,"mtime":1659537915398,"results":"56","hashOfConfig":"47"},{"size":1161,"mtime":1660735491668,"results":"57","hashOfConfig":"47"},{"size":151,"mtime":1659770398313,"results":"58","hashOfConfig":"47"},{"size":1778,"mtime":1662148956953,"results":"59","hashOfConfig":"47"},{"size":1530,"mtime":1661693361065,"results":"60","hashOfConfig":"47"},{"size":802,"mtime":1660725840467,"results":"61","hashOfConfig":"47"},{"size":290,"mtime":1660725599357,"results":"62","hashOfConfig":"47"},{"size":257,"mtime":1660725599418,"results":"63","hashOfConfig":"47"},{"size":679,"mtime":1660725076032,"results":"64","hashOfConfig":"47"},{"size":1417,"mtime":1662537700665,"results":"65","hashOfConfig":"47"},{"size":2436,"mtime":1661609008591,"results":"66","hashOfConfig":"47"},{"size":666,"mtime":1662491226717,"results":"67","hashOfConfig":"47"},{"size":165,"mtime":1657792949047,"results":"68","hashOfConfig":"47"},{"size":1879,"mtime":1662706254266,"results":"69","hashOfConfig":"47"},{"size":2447,"mtime":1662655806768,"results":"70","hashOfConfig":"47"},{"size":2137,"mtime":1662547239415,"results":"71","hashOfConfig":"47"},{"size":755,"mtime":1660733332525,"results":"72","hashOfConfig":"47"},{"size":549,"mtime":1660547177190,"results":"73","hashOfConfig":"47"},{"size":1564,"mtime":1662890071219,"results":"74","hashOfConfig":"47"},{"size":1390,"mtime":1662887843931,"results":"75","hashOfConfig":"47"},{"size":4020,"mtime":1662895102551,"results":"76","hashOfConfig":"47"},{"size":464,"mtime":1660042603323,"results":"77","hashOfConfig":"47"},{"size":316,"mtime":1660043195964,"results":"78","hashOfConfig":"47"},{"size":1914,"mtime":1662202373326,"results":"79","hashOfConfig":"47"},{"size":2009,"mtime":1662657766580,"results":"80","hashOfConfig":"47"},{"size":663,"mtime":1660466416006,"results":"81","hashOfConfig":"47"},{"size":735,"mtime":1660465719536,"results":"82","hashOfConfig":"47"},{"size":1007,"mtime":1662544810137,"results":"83","hashOfConfig":"47"},{"size":933,"mtime":1661760662310,"results":"84","hashOfConfig":"47"},{"size":2218,"mtime":1662199519804,"results":"85","hashOfConfig":"47"},{"size":1128,"mtime":1661692544389,"results":"86","hashOfConfig":"47"},{"size":2835,"mtime":1663010770867,"results":"87","hashOfConfig":"47"},{"size":1016,"mtime":1662896276719,"results":"88","hashOfConfig":"47"},{"size":4507,"mtime":1662549032014,"results":"89","hashOfConfig":"47"},{"size":2678,"mtime":1662711566416,"results":"90","hashOfConfig":"47"},{"size":737,"mtime":1662660944974,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"310arz",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"99"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"99"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"99"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\artem\\my-app\\src\\reportWebVitals.js",[],[],["240","241"],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\appReducer.ts",[],[],["242","243"],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\authReducer.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\dialogsReducer.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\profileReducer.ts",["244"],[],"import {PhotosType, PostDataType, ProfileType } from '../types/type'\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"../redux-store\";\r\nimport {ResultCodesEnum} from '../../compo/api/api'\r\nimport { profileApi } from '../../compo/api/profileApi';\r\nimport profile from '../../compo/Profile/Profile'\r\n\r\n\r\n\r\n// state\r\nlet initialState = {\r\n    postsData: [\r\n        {name: 'Evgeniy', text: 'I need more React', like: '16'},\r\n        {name: 'Evgeniy', text: 'I love REACT!!!', like: '45'}\r\n    ] as Array<PostDataType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: '',\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\n//reducer\r\ninterface NewPostInterface {\r\n    name: string\r\n    text: string\r\n    like: string\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'ADD_POST': {\r\n            let newPost: NewPostInterface = {\r\n                name: 'Oleg',\r\n                text: action.newPostText,\r\n                like: '56',\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case 'SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'SET_PROFILE_STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'SET_PROFILE_PHOTO': {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// interfaces\r\n\r\nexport type ActionsType = InferActionsTypes<typeof profileActions>\r\ntype DispatchThunkType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\n// actionCreator\r\nexport const profileActions = {\r\n    addPostActionCreater: (newPostText: string) => ({type: 'ADD_POST', newPostText} as const),\r\n    setUserProfile:  (profile: ProfileType) => ({type: 'SET_USER_PROFILE', profile} as const),\r\n    setProfileStatus: (status: string) => ({type: 'SET_PROFILE_STATUS', status} as const),\r\n    setProfilePhoto: (photos: PhotosType) => ({type: 'SET_PROFILE_PHOTO', photos} as const),\r\n}\r\n\r\n\r\n// thunkCreator\r\nexport const getProfileThunk = (userId: number | string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.getProfileAPI(userId)\r\n    dispatch(profileActions.setUserProfile(data))\r\n}\r\nexport const getProfileStatus = (userId: number | string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.getProfileStatus(userId)\r\n    dispatch(profileActions.setProfileStatus(data))\r\n}\r\nexport const putProfileStatus = (status: string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.putProfileStatus(status)\r\n    if (data.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(profileActions.setProfileStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (photos: File) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.putProfilePhoto(photos)\r\n    if (data.data.resultCode === 0) {\r\n        dispatch(profileActions.setProfilePhoto(data.data.data))\r\n    }\r\n}\r\nexport const putProfileInfo = (profile: ProfileType) => async (dispatch: DispatchThunkType, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let data = await profileApi.putProfileInfo(profile)\r\n    if (data.data.resultCode === ResultCodesEnum.Success) {\r\n        if (userId !== null) {\r\n            dispatch(getProfileThunk(userId)).then(r => r)\r\n        }\r\n        else {\r\n            throw new Error('userId not be found')\r\n        }\r\n    }\r\n    else {\r\n        return Promise.reject(data.data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer\r\n","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\usersReducer.ts",[],["245","246"],"C:\\Users\\artem\\my-app\\src\\utility\\updateObjectArray.js",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\Pagination.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\Users.tsx",["247","248","249"],[],"import styled from 'styled-components'\nimport Pagination from './Pagination'\nimport {FC, useCallback, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppStateType} from '../../redux/redux-store'\nimport {\n    currentPageSelector,\n    filterSelector,\n    ifFetchingSelector,\n    isFollowingSelector,\n    pageSizeSelector,\n    portionSizeSelector,\n    totalUsersCountSelector,\n    usersSelector\n} from '../../redux/selectors/usersSelector'\nimport {getIsAuthSelector} from '../../redux/selectors/authSelector'\nimport {ThunkDispatch} from 'redux-thunk'\nimport {ActionsType, FilterType, followThunk, getUserThunk, unfollowThunk} from '../../redux/reducers/usersReducer'\nimport {useNavigate, useSearchParams} from 'react-router-dom'\nimport Preloader from '../common/Preloader/Preloader'\nimport User from './User'\nimport UsersForm from './UsersForm'\n\n\n// style\nconst BorderPageUsers = styled.div`\n  border: 0.5px solid rgba(0, 0, 0, 0.68);\n  padding: 10px;\n`\n\ntype Props = {\n    titleText: string\n}\n\nconst Users: FC<Props> = ({titleText = 'Users'}) => {\n\n    // STATE\n    const ifFetching = useSelector((state: AppStateType) => ifFetchingSelector(state))\n    const isAuth = useSelector((state: AppStateType) => getIsAuthSelector(state))\n    const currentPage = useSelector((state: AppStateType) => currentPageSelector(state))\n    const filter = useSelector((state: AppStateType) => filterSelector(state))\n    const totalUsersCount = useSelector((state: AppStateType) => totalUsersCountSelector(state))\n    const pageSize = useSelector((state: AppStateType) => pageSizeSelector(state))\n    const portionSize = useSelector((state: AppStateType) => portionSizeSelector(state))\n    const users = useSelector((state: AppStateType) => usersSelector(state))\n    const isFetching = useSelector((state: AppStateType) => isFollowingSelector(state))\n\n    // Dispatch Action Creator\n    const dispatch: ThunkDispatch<AppStateType, unknown, ActionsType> = useDispatch()\n\n    // Dispatch Thunk\n    const unfollowThunk_ = (id: number) => dispatch(unfollowThunk(id))\n    const followThunk_ = (id: number) => dispatch(followThunk(id))\n    const getUserThunk_ = useCallback((currentPage: number, filter: FilterType) => dispatch(getUserThunk(currentPage, filter)), [dispatch])\n\n\n    // If user not login, redirect to /login\n    let navigator = useNavigate()\n    useEffect(() => {\n        if (!isAuth) {\n            navigator('/login')\n        }\n        getUserThunk_(currentPage, filter).then(r => r)\n    }, [navigator, isAuth, getUserThunk_])\n\n\n    let [searchParams, setSearchParams] = useSearchParams()\n    useEffect(() => {\n        const result: any = {}\n        // @ts-ignore\n        // пробегаемся по URL, где есть ключ(term или friend) и значение(строка или boolean)\n        for (const [key, value] of searchParams.entries()) {\n            let urlValue: any = +value\n            // если urlValue ничему не равен, то ему присваевается value\n            if (isNaN(urlValue)) {\n                urlValue = value\n            }\n            if (urlValue === 'true') {\n                urlValue = true\n            } else if (urlValue === 'false') {\n                urlValue = false\n            }\n            // помещаем результат в объект\n            result[key] = urlValue\n        }\n        // присваиваем страницу\n        let actualPage = result.page || currentPage\n\n        // присваиваем строку поиска\n        let term = result.term || filter.term\n\n        // присваиваем друга\n        let friend = result.friend || filter.friend\n\n        // если в url нету friend или он равен false, присваиваем параметр из бизнеса\n        if (result.friend === false) {\n            friend = result.friend\n        }\n\n        // определяем актуальный фильтер\n        const currentFilter = {term, friend}\n\n        getUserThunk_(actualPage, currentFilter).then(r => r)\n    }, [])\n\n\n    useEffect(() => {\n        const term = filter.term\n        const friend = filter.friend\n        let url = (term === '' ? '' : `&term=${term}`) + (friend === null ? '' : `&friend=${friend}`) + (currentPage === 1 ? '' : `&page=${currentPage}`)\n        setSearchParams(url)\n    }, [filter, currentPage])\n\n\n    // If page change\n    const onPageChanged = (pageNumber: number, filter: FilterType) => {\n        getUserThunk_(pageNumber, filter).then(r => r)\n    }\n\n    // If filter change\n    const onFilterChanged = (filter: FilterType) => {\n        getUserThunk_(1, filter).then(r => r)\n    }\n\n    return (\n        <BorderPageUsers>\n            {ifFetching ? <Preloader/> : null}\n            <UsersForm onFilterChanged={onFilterChanged}/>\n            <Pagination totalUsersCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\n                        onPageChanged={onPageChanged} portionSize={portionSize} filter={filter}/>\n            <h2>{titleText}</h2>\n            <User unfollowThunk={unfollowThunk_} followThunk={followThunk_} users={users} isFetching={isFetching}/>\n        </BorderPageUsers>\n    )\n}\n\nexport default Users","C:\\Users\\artem\\my-app\\src\\redux\\types\\type.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\redux-store.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\common\\Preloader\\Preloader.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\User.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\usersSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\authSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\appSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\dialogSelectors.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\profileSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPosts.tsx",["250"],[],"import posts from '../Posts/MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport MyPostForm from \"./MyPostForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {postsDataSelector} from '../../../redux/selectors/profileSelector'\r\nimport {ActionsType, profileActions} from \"../../../redux/reducers/profileReducer\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport uniqid from 'uniqid'\r\nimport { useMemo } from 'react';\r\n\r\n\r\n\r\nconst MyPosts = () => {\r\n\r\n    // STATE\r\n    const postsData = useSelector((state: AppStateType) => postsDataSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, any, ActionsType> = useDispatch()\r\n    const addPostActionCreator_ = (newPostText: string) => dispatch(profileActions.addPostActionCreater(newPostText))\r\n\r\n\r\n    let postsElements = postsData.map(p => <Post name={p.name} text={p.text} key={uniqid()} />)\r\n    let onAddPost = (newPostText: string) => {\r\n        addPostActionCreator_(newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={posts.postsBlock}>\r\n            <div className={posts.myP}>\r\n                <h3>MyPosts</h3>\r\n            </div>\r\n            <MyPostForm onAddPost={ onAddPost }/>\r\n            <div className={posts.wallPost}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPostForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\Post\\Post.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\PhotoPost\\PhotoPost.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfo.tsx",["251","252","253","254"],[],"import i from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport userPhoto from '../../../img/avatar.jpg'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport {ChangeEvent, FC, useState} from 'react'\r\nimport {ProfileType} from '../../../redux/types/type'\r\nimport Contacts from './ProfileInfoAbout/Contacts'\r\nimport ProfileAboutForm from './ProfileInfoAbout/ProfileAboutForm'\r\nimport ProfileAbout from './ProfileInfoAbout/ProfileAbout'\r\n\r\n\r\ntype Props = {\r\n    savePhoto: (photos: File) => void\r\n    isOwner: boolean\r\n    profile: ProfileType | null,\r\n    status: string\r\n    putProfileStatus: (status: string) => void\r\n    putProfileInfo: (profile: ProfileType) => void\r\n}\r\n\r\nconst ProfileInfo: FC<Props> = ({savePhoto, isOwner, profile, status, putProfileStatus, putProfileInfo}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onAvatarSelected = (event: ChangeEvent<HTMLInputElement>) => {\r\n        if(event.target.files?.length) {\r\n            savePhoto(event.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={i.descriptionBlock}>\r\n                {/*FullName*/}\r\n                <div className={i.info_profile}>{profile.fullName}</div>\r\n                {/*Photos*/}\r\n                <img className={i.profile_avatar} src={profile.photos.large != null ? profile.photos.large : userPhoto} alt={'avatar'}/>\r\n                {isOwner && <span><input type={'file'} onChange={onAvatarSelected}/></span> }\r\n                {/*Status*/}\r\n                <ProfileStatus isOwner={isOwner} statusProps={status} putProfileStatus={putProfileStatus} />\r\n                <ProfileAboutForm profile={profile} putProfileInfo={putProfileInfo} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Profile.tsx",["255","256"],[],"import myPosts from './Profile.module.css'\r\nimport '../Profile/Posts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {profilePageSelector, profileStatusSelector} from '../../redux/selectors/profileSelector'\r\nimport {getAuthIdSelector, getIsAuthSelector} from '../../redux/selectors/authSelector'\r\nimport {\r\n    getProfileStatus,\r\n    getProfileThunk,\r\n    putProfileInfo,\r\n    putProfileStatus,\r\n    savePhoto\r\n} from '../../redux/reducers/profileReducer'\r\nimport {useNavigate, useParams} from 'react-router-dom'\r\nimport {useCallback, useEffect} from 'react'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {ProfileType} from '../../redux/types/type'\r\nimport MyPosts from '../Profile/Posts/MyPosts'\r\n\r\nconst Profile = () => {\r\n\r\n    // STATE\r\n    const profile = useSelector((state: AppStateType) => profilePageSelector(state))\r\n    const status = useSelector((state: AppStateType) => profileStatusSelector(state))\r\n    const isAuth = useSelector((state: AppStateType) => getIsAuthSelector(state))\r\n    const authId = useSelector((state: AppStateType) => getAuthIdSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch:ThunkDispatch<AppStateType, any, any> = useDispatch()\r\n    const getProfileThunk_ = useCallback((userId: number) => dispatch(getProfileThunk(userId)), [dispatch])\r\n    const getProfileStatus_ = useCallback((userId: number) => dispatch(getProfileStatus(userId)), [dispatch])\r\n    const putProfileStatus_ = (status: string) => dispatch(putProfileStatus(status))\r\n    const savePhoto_ = (photos: File) => dispatch(savePhoto(photos))\r\n    const putProfileInfo_ = (profile: ProfileType) => dispatch(putProfileInfo(profile))\r\n\r\n    let navigate = useNavigate()\r\n    useEffect(()=>{\r\n        if( !isAuth ) {\r\n            return navigate(\"/login\")\r\n        }\r\n    }, [navigate, isAuth])\r\n\r\n\r\n    let {userId} = useParams<{userId: any}>()\r\n    useEffect(() => {\r\n        getProfileThunk_(userId).then(r => r)\r\n        getProfileStatus_(userId).then(r => r)\r\n    }, [userId]);\r\n\r\n    \r\n    return (\r\n        <div className={myPosts.content}>\r\n            <ProfileInfo savePhoto={savePhoto_} isOwner={authId == userId} profile={profile} status={status} putProfileStatus={putProfileStatus_} putProfileInfo={putProfileInfo_}/>\r\n            <MyPosts />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Nav\\Nav.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\common\\404\\NotFound.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Header\\Header.tsx",["257","258","259","260"],[],"import style from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport logout from '../../icon/logout_black_24dp.svg'\r\nimport logo from '../../img/logo.png'\r\nimport {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getIsAuth, getIsAuthSelector, getLogin, getLoginSelector} from '../../redux/selectors/authSelector'\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {loginMeThunk, logoutThunk} from \"../../redux/reducers/authReducer\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n\r\n    // STATE\r\n    const isAuth_ = useSelector((state: AppStateType) =>  getIsAuthSelector(state))\r\n    const login_ = useSelector((state: AppStateType)  => getLoginSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, any, any> = useDispatch()\r\n    const loginThunk_ = () => dispatch(loginMeThunk())\r\n    const logoutThunk_ = () => dispatch(logoutThunk())\r\n\r\n    useEffect( () => {\r\n        loginThunk_()\r\n    }, [loginThunk_, isAuth_]);\r\n\r\n\r\n    return <header className={style.header}>\r\n            <img src={logo} alt={'logo'} className={style.logo}/>\r\n            <div className={style.login_btn}>\r\n                { isAuth_\r\n                    ? <div> {login_} - <button onClick={logoutThunk_} className={style.logout_btn}> <img className={style.logout_icon} src={logout} alt={'logout'}/> </button></div>\r\n                    : <NavLink to={'/Login'}> Login </NavLink> }\r\n            </div>\r\n        </header>\r\n}\r\n\r\n\r\nexport default Header;",["261","262"],"C:\\Users\\artem\\my-app\\src\\compo\\Login\\Login.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Login\\LoginForm.tsx",["263"],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogUsersItem\\DialogsItem.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\MessagesItem\\Message.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\Dialogs.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogsForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\api.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\loginApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\profileApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\usersApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\App.tsx",["264"],[],"import './App.module.css'\r\nimport s from './App.module.css'\r\nimport Nav from './compo/Nav/Nav'\r\nimport {Route, Routes} from '../node_modules/react-router-dom/index'\r\nimport {Navigate} from 'react-router-dom'\r\nimport ScrollToTop from 'react-scroll-to-top'\r\nimport Login from './compo/Login/Login'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {lazy, Suspense, useEffect} from 'react'\r\nimport {getInitializedSelector} from './redux/selectors/appSelector'\r\nimport Preloader from './compo/common/Preloader/Preloader'\r\nimport NotFound from './compo/common/404/NotFound'\r\nimport {ActionsType, initializeApp} from './redux/reducers/appReducer'\r\nimport Users from './compo/Users/Users'\r\nimport Profile from './compo/Profile/Profile'\r\nimport Header from './compo/Header/Header'\r\nimport {AppStateType} from './redux/redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\n\r\nconst Dialogs = lazy(() => import('./compo/Message/Dialogs'))\r\n\r\nconst App = () => {\r\n\r\n    // STATE\r\n    const initialized = useSelector( (state: AppStateType) => getInitializedSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, unknown, ActionsType> = useDispatch()\r\n    const initialize = () => dispatch(initializeApp())\r\n\r\n    useEffect(() => {\r\n        initialize().then(r => r)\r\n    }, [initialized])\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.grid}>\r\n            <Header/>\r\n            <Nav/>\r\n            <ScrollToTop smooth/>\r\n            <div className={s.content}>\r\n                <Routes>\r\n                    <Route path=\"/dialogs/*\" element={<Suspense fallback={<Preloader/>}> <Dialogs/> </Suspense>}/>\r\n                    <Route path=\"/profile/:userId\" element={<Profile/>}/>\r\n                    <Route path=\"/profile\" element={<Profile/>}/>\r\n                    <Route path=\"/users\" element={<Users titleText={'Samurais'}/>}/>\r\n                    <Route path=\"/login\" element={<Login/>}/>\r\n                    <Route path=\"*\" element={<NotFound/>}/>\r\n                    <Route path=\"/\" element={<Navigate to=\"/users\"/>}/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\sidebarReducer.ts",["265","266"],[],"import {UsersInterface} from '../types/type'\r\nimport {AppStateType, InferActionsTypes} from '../redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {userActions} from './usersReducer'\r\nimport {userApi} from '../../compo/api/usersApi'\r\n\r\n\r\n// Initial State\r\ntype InitialStateType = {\r\n    friends: UsersInterface[]\r\n}\r\nconst initialState = {\r\n    friends: []\r\n}\r\n\r\n\r\n// Reducer\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_FRIEND': {\r\n            return {...state, friends: [...action.friends]}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof sidebarActions>\r\ntype DispatchThunkType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\n\r\n// actionCreator\r\nexport const sidebarActions = {\r\n    setFriends: (friends: UsersInterface[]) => ({type: 'SET_FRIEND', friends} as const)\r\n}\r\n\r\n\r\n// thunkCreator\r\nexport const getFriends = () => async (dispatch: DispatchThunkType) => {\r\n    // @ts-ignore\r\n    dispatch(sidebarActions.setFriends())\r\n}\r\n\r\n\r\n\r\n\r\nexport default  sidebarReducer","C:\\Users\\artem\\my-app\\src\\compo\\Users\\UsersForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\index.tsx",[],[],["267","268"],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\Contacts.jsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAboutForm.tsx",["269"],[],"import i from '../ProfileInfo.module.css'\r\nimport {FC, useState} from 'react'\r\nimport {ProfileType} from '../../../../redux/types/type'\r\nimport {Field, Formik} from 'formik'\r\nimport {FormikValues} from 'formik/dist/types'\r\n\r\ntype Props = {\r\n    profile: ProfileType\r\n    putProfileInfo: (profile: ProfileType) => void\r\n}\r\n\r\nconst ProfileAboutForm: FC<Props> = ({profile, putProfileInfo}) => {\r\n    const initialValues = JSON.parse(JSON.stringify(profile))\r\n    console.log(initialValues)\r\n    const submitCallback = (values: FormikValues, {setSubmitting}: {setSubmitting: (arg1: boolean) => void}) => {\r\n        putProfileInfo(profile)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    const job = initialValues.fullName\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? <Formik initialValues={initialValues} onSubmit={submitCallback}>\r\n                    {({\r\n                          values,\r\n                          handleSubmit,\r\n                          isSubmitting\r\n                      }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div>\r\n                                {/*<label  htmlFor={'lookingForAJob'}>lookingForAJob:</label>*/}\r\n                                {/*<Field as={'select'} name={'lookingForAJob'}>*/}\r\n                                {/*    /!*@ts-ignore*!/*/}\r\n                                {/*    <option value={true}>True</option>*/}\r\n                                {/*    /!*@ts-ignore*!/*/}\r\n                                {/*    <option value={false}>False</option>*/}\r\n                                {/*</Field>*/}\r\n                                <Field as={'textarea'} name={'lookingForAJobDescription'} placeholder={'My professional skills'}/>\r\n                            </div>\r\n                            <button type={'submit'} disabled={isSubmitting} > Save</button>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n                : <div>\r\n                    <div className={i.info_profile}>looking for a job: {profile.lookingForAJob\r\n                        ? <span className={i.looking_for_job_true}> ✓ </span>\r\n                        : <span className={i.looking_for_job_false}> ✖ </span>\r\n                    } </div>\r\n                    <div className={i.info_profile}>Job Description: <span>{profile.lookingForAJobDescription !== null ? profile.lookingForAJobDescription : 'No'}</span></div>\r\n                </div>\r\n            }\r\n            <button onClick={() => setEditMode(true)}>Edit</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileAboutForm","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAbout.tsx",[],[],{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":6,"column":8,"nodeType":"276","messageId":"277","endLine":6,"endColumn":15},{"ruleId":"278","severity":1,"message":"279","line":67,"column":20,"nodeType":"280","messageId":"281","endLine":74,"endColumn":14,"suppressions":"282"},{"ruleId":"283","severity":1,"message":"284","line":73,"column":57,"nodeType":"285","messageId":"286","endLine":73,"endColumn":59,"suppressions":"287"},{"ruleId":"288","severity":1,"message":"289","line":64,"column":8,"nodeType":"290","endLine":64,"endColumn":42,"suggestions":"291"},{"ruleId":"288","severity":1,"message":"292","line":104,"column":8,"nodeType":"290","endLine":104,"endColumn":10,"suggestions":"293"},{"ruleId":"288","severity":1,"message":"294","line":112,"column":8,"nodeType":"290","endLine":112,"endColumn":29,"suggestions":"295"},{"ruleId":"274","severity":1,"message":"296","line":10,"column":10,"nodeType":"276","messageId":"277","endLine":10,"endColumn":17},{"ruleId":"274","severity":1,"message":"297","line":7,"column":8,"nodeType":"276","messageId":"277","endLine":7,"endColumn":16},{"ruleId":"274","severity":1,"message":"298","line":9,"column":8,"nodeType":"276","messageId":"277","endLine":9,"endColumn":20},{"ruleId":"274","severity":1,"message":"299","line":23,"column":12,"nodeType":"276","messageId":"277","endLine":23,"endColumn":20},{"ruleId":"274","severity":1,"message":"300","line":23,"column":22,"nodeType":"276","messageId":"277","endLine":23,"endColumn":33},{"ruleId":"288","severity":1,"message":"301","line":49,"column":8,"nodeType":"290","endLine":49,"endColumn":16,"suggestions":"302"},{"ruleId":"283","severity":1,"message":"303","line":54,"column":65,"nodeType":"285","messageId":"286","endLine":54,"endColumn":67},{"ruleId":"274","severity":1,"message":"304","line":5,"column":9,"nodeType":"276","messageId":"277","endLine":5,"endColumn":11},{"ruleId":"274","severity":1,"message":"305","line":8,"column":9,"nodeType":"276","messageId":"277","endLine":8,"endColumn":18},{"ruleId":"274","severity":1,"message":"306","line":8,"column":39,"nodeType":"276","messageId":"277","endLine":8,"endColumn":47},{"ruleId":"288","severity":1,"message":"307","line":22,"column":11,"nodeType":"308","endLine":22,"endColumn":55},{"ruleId":"270","replacedBy":"309"},{"ruleId":"272","replacedBy":"310"},{"ruleId":"274","severity":1,"message":"311","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":14},{"ruleId":"288","severity":1,"message":"312","line":33,"column":8,"nodeType":"290","endLine":33,"endColumn":21,"suggestions":"313"},{"ruleId":"274","severity":1,"message":"314","line":4,"column":9,"nodeType":"276","messageId":"277","endLine":4,"endColumn":20},{"ruleId":"274","severity":1,"message":"315","line":5,"column":9,"nodeType":"276","messageId":"277","endLine":5,"endColumn":16},{"ruleId":"270","replacedBy":"316"},{"ruleId":"272","replacedBy":"317"},{"ruleId":"274","severity":1,"message":"318","line":20,"column":11,"nodeType":"276","messageId":"277","endLine":20,"endColumn":14},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],"@typescript-eslint/no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","@typescript-eslint/consistent-type-assertions","Use 'as InitialStateInterface' instead of '<InitialStateInterface>'.","TSTypeAssertion","as",["321"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["322"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'filter'. Either include them or remove the dependency array.","ArrayExpression",["323"],"React Hook useEffect has missing dependencies: 'currentPage', 'filter.friend', 'filter.term', 'getUserThunk_', and 'searchParams'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has a missing dependency: 'setSearchParams'. Either include it or remove the dependency array.",["325"],"'useMemo' is defined but never used.","'Contacts' is defined but never used.","'ProfileAbout' is defined but never used.","'editMode' is assigned a value but never used.","'setEditMode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProfileStatus_' and 'getProfileThunk_'. Either include them or remove the dependency array.",["326"],"Expected '===' and instead saw '=='.","'FC' is defined but never used.","'getIsAuth' is defined but never used.","'getLogin' is defined but never used.","The 'loginThunk_' function makes the dependencies of useEffect Hook (at line 27) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'loginThunk_' in its own useCallback() Hook.","VariableDeclarator",["319"],["320"],"'styled' is defined but never used.","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["327"],"'userActions' is defined but never used.","'userApi' is defined but never used.",["319"],["320"],"'job' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"kind":"328","justification":"329"},{"kind":"328","justification":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},"directive","","Update the dependencies array to be: [navigator, isAuth, getUserThunk_, currentPage, filter]",{"range":"340","text":"341"},"Update the dependencies array to be: [currentPage, filter.friend, filter.term, getUserThunk_, searchParams]",{"range":"342","text":"343"},"Update the dependencies array to be: [filter, currentPage, setSearchParams]",{"range":"344","text":"345"},"Update the dependencies array to be: [getProfileStatus_, getProfileThunk_, userId]",{"range":"346","text":"347"},"Update the dependencies array to be: [initialize, initialized]",{"range":"348","text":"349"},[2518,2552],"[navigator, isAuth, getUserThunk_, currentPage, filter]",[3870,3872],"[currentPage, filter.friend, filter.term, getUserThunk_, searchParams]",[4158,4179],"[filter, currentPage, setSearchParams]",[2109,2117],"[getProfileStatus_, getProfileThunk_, userId]",[1306,1319],"[initialize, initialized]"]