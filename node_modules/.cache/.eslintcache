[{"C:\\Users\\artem\\my-app\\src\\reportWebVitals.js":"1","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\appReducer.ts":"2","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\authReducer.ts":"3","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\dialogsReducer.ts":"4","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\profileReducer.ts":"5","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\usersReducer.ts":"6","C:\\Users\\artem\\my-app\\src\\utility\\updateObjectArray.js":"7","C:\\Users\\artem\\my-app\\src\\compo\\Users\\Pagination.tsx":"8","C:\\Users\\artem\\my-app\\src\\compo\\Users\\Users.tsx":"9","C:\\Users\\artem\\my-app\\src\\redux\\types\\type.ts":"10","C:\\Users\\artem\\my-app\\src\\redux\\redux-store.ts":"11","C:\\Users\\artem\\my-app\\src\\compo\\common\\Preloader\\Preloader.tsx":"12","C:\\Users\\artem\\my-app\\src\\compo\\Users\\User.tsx":"13","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\usersSelector.ts":"14","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\authSelector.ts":"15","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\appSelector.ts":"16","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\dialogSelectors.ts":"17","C:\\Users\\artem\\my-app\\src\\redux\\selectors\\profileSelector.ts":"18","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPosts.tsx":"19","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPostForm.tsx":"20","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\Post\\Post.tsx":"21","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\PhotoPost\\PhotoPost.tsx":"22","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfo.tsx":"23","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Profile.tsx":"24","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileStatus.tsx":"25","C:\\Users\\artem\\my-app\\src\\compo\\Nav\\Nav.tsx":"26","C:\\Users\\artem\\my-app\\src\\compo\\common\\404\\NotFound.tsx":"27","C:\\Users\\artem\\my-app\\src\\compo\\Header\\Header.tsx":"28","C:\\Users\\artem\\my-app\\src\\compo\\Login\\Login.tsx":"29","C:\\Users\\artem\\my-app\\src\\compo\\Login\\LoginForm.tsx":"30","C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogUsersItem\\DialogsItem.tsx":"31","C:\\Users\\artem\\my-app\\src\\compo\\Message\\MessagesItem\\Message.tsx":"32","C:\\Users\\artem\\my-app\\src\\compo\\Message\\Dialogs.tsx":"33","C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogsForm.tsx":"34","C:\\Users\\artem\\my-app\\src\\compo\\api\\api.ts":"35","C:\\Users\\artem\\my-app\\src\\compo\\api\\loginApi.ts":"36","C:\\Users\\artem\\my-app\\src\\compo\\api\\profileApi.ts":"37","C:\\Users\\artem\\my-app\\src\\compo\\api\\usersApi.ts":"38","C:\\Users\\artem\\my-app\\src\\App.tsx":"39","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\sidebarReducer.ts":"40","C:\\Users\\artem\\my-app\\src\\compo\\Users\\UsersForm.tsx":"41","C:\\Users\\artem\\my-app\\src\\index.tsx":"42","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\Contacts.jsx":"43","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAboutForm.tsx":"44","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAbout.tsx":"45"},{"size":362,"mtime":1657783028000,"results":"46","hashOfConfig":"47"},{"size":1037,"mtime":1661883781502,"results":"48","hashOfConfig":"47"},{"size":2815,"mtime":1661894441547,"results":"49","hashOfConfig":"47"},{"size":1436,"mtime":1662202053390,"results":"50","hashOfConfig":"47"},{"size":3855,"mtime":1662655342552,"results":"51","hashOfConfig":"47"},{"size":4866,"mtime":1662283151281,"results":"52","hashOfConfig":"47"},{"size":217,"mtime":1658984308854,"results":"53","hashOfConfig":"47"},{"size":2144,"mtime":1662895682530,"results":"54","hashOfConfig":"47"},{"size":5258,"mtime":1662538592490,"results":"55","hashOfConfig":"47"},{"size":698,"mtime":1659537915398,"results":"56","hashOfConfig":"47"},{"size":1161,"mtime":1660735491668,"results":"57","hashOfConfig":"47"},{"size":151,"mtime":1659770398313,"results":"58","hashOfConfig":"47"},{"size":1778,"mtime":1662148956953,"results":"59","hashOfConfig":"47"},{"size":1530,"mtime":1661693361065,"results":"60","hashOfConfig":"47"},{"size":802,"mtime":1660725840467,"results":"61","hashOfConfig":"47"},{"size":290,"mtime":1660725599357,"results":"62","hashOfConfig":"47"},{"size":257,"mtime":1660725599418,"results":"63","hashOfConfig":"47"},{"size":679,"mtime":1660725076032,"results":"64","hashOfConfig":"47"},{"size":1417,"mtime":1662537700665,"results":"65","hashOfConfig":"47"},{"size":2436,"mtime":1661609008591,"results":"66","hashOfConfig":"47"},{"size":666,"mtime":1662491226717,"results":"67","hashOfConfig":"47"},{"size":165,"mtime":1657792949047,"results":"68","hashOfConfig":"47"},{"size":1927,"mtime":1663016525335,"results":"69","hashOfConfig":"47"},{"size":2447,"mtime":1662655806768,"results":"70","hashOfConfig":"47"},{"size":2137,"mtime":1662547239415,"results":"71","hashOfConfig":"47"},{"size":755,"mtime":1660733332525,"results":"72","hashOfConfig":"47"},{"size":549,"mtime":1660547177190,"results":"73","hashOfConfig":"47"},{"size":1564,"mtime":1662890071219,"results":"74","hashOfConfig":"47"},{"size":1390,"mtime":1662887843931,"results":"75","hashOfConfig":"47"},{"size":4020,"mtime":1662895102551,"results":"76","hashOfConfig":"47"},{"size":464,"mtime":1660042603323,"results":"77","hashOfConfig":"47"},{"size":316,"mtime":1660043195964,"results":"78","hashOfConfig":"47"},{"size":1914,"mtime":1662202373326,"results":"79","hashOfConfig":"47"},{"size":2009,"mtime":1662657766580,"results":"80","hashOfConfig":"47"},{"size":663,"mtime":1660466416006,"results":"81","hashOfConfig":"47"},{"size":735,"mtime":1660465719536,"results":"82","hashOfConfig":"47"},{"size":1007,"mtime":1662544810137,"results":"83","hashOfConfig":"47"},{"size":933,"mtime":1661760662310,"results":"84","hashOfConfig":"47"},{"size":2218,"mtime":1662199519804,"results":"85","hashOfConfig":"47"},{"size":1128,"mtime":1661692544389,"results":"86","hashOfConfig":"47"},{"size":2835,"mtime":1663010770867,"results":"87","hashOfConfig":"47"},{"size":1016,"mtime":1662896276719,"results":"88","hashOfConfig":"47"},{"size":4507,"mtime":1662549032014,"results":"89","hashOfConfig":"47"},{"size":2771,"mtime":1663016903416,"results":"90","hashOfConfig":"47"},{"size":737,"mtime":1662660944974,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"310arz",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"99"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"99"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"99"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\artem\\my-app\\src\\reportWebVitals.js",[],[],["237","238"],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\appReducer.ts",[],[],["239","240"],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\authReducer.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\dialogsReducer.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\reducers\\profileReducer.ts",["241"],[],"import {PhotosType, PostDataType, ProfileType } from '../types/type'\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"../redux-store\";\r\nimport {ResultCodesEnum} from '../../compo/api/api'\r\nimport { profileApi } from '../../compo/api/profileApi';\r\nimport profile from '../../compo/Profile/Profile'\r\n\r\n\r\n\r\n// state\r\nlet initialState = {\r\n    postsData: [\r\n        {name: 'Evgeniy', text: 'I need more React', like: '16'},\r\n        {name: 'Evgeniy', text: 'I love REACT!!!', like: '45'}\r\n    ] as Array<PostDataType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: '',\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\n//reducer\r\ninterface NewPostInterface {\r\n    name: string\r\n    text: string\r\n    like: string\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'ADD_POST': {\r\n            let newPost: NewPostInterface = {\r\n                name: 'Oleg',\r\n                text: action.newPostText,\r\n                like: '56',\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case 'SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'SET_PROFILE_STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n        case 'SET_PROFILE_PHOTO': {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// interfaces\r\n\r\nexport type ActionsType = InferActionsTypes<typeof profileActions>\r\ntype DispatchThunkType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\n// actionCreator\r\nexport const profileActions = {\r\n    addPostActionCreater: (newPostText: string) => ({type: 'ADD_POST', newPostText} as const),\r\n    setUserProfile:  (profile: ProfileType) => ({type: 'SET_USER_PROFILE', profile} as const),\r\n    setProfileStatus: (status: string) => ({type: 'SET_PROFILE_STATUS', status} as const),\r\n    setProfilePhoto: (photos: PhotosType) => ({type: 'SET_PROFILE_PHOTO', photos} as const),\r\n}\r\n\r\n\r\n// thunkCreator\r\nexport const getProfileThunk = (userId: number | string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.getProfileAPI(userId)\r\n    dispatch(profileActions.setUserProfile(data))\r\n}\r\nexport const getProfileStatus = (userId: number | string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.getProfileStatus(userId)\r\n    dispatch(profileActions.setProfileStatus(data))\r\n}\r\nexport const putProfileStatus = (status: string) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.putProfileStatus(status)\r\n    if (data.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(profileActions.setProfileStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (photos: File) => async (dispatch: DispatchThunkType) => {\r\n    let data = await profileApi.putProfilePhoto(photos)\r\n    if (data.data.resultCode === 0) {\r\n        dispatch(profileActions.setProfilePhoto(data.data.data))\r\n    }\r\n}\r\nexport const putProfileInfo = (profile: ProfileType) => async (dispatch: DispatchThunkType, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let data = await profileApi.putProfileInfo(profile)\r\n    if (data.data.resultCode === ResultCodesEnum.Success) {\r\n        if (userId !== null) {\r\n            dispatch(getProfileThunk(userId)).then(r => r)\r\n        }\r\n        else {\r\n            throw new Error('userId not be found')\r\n        }\r\n    }\r\n    else {\r\n        return Promise.reject(data.data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer\r\n","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\usersReducer.ts",[],["242","243"],"C:\\Users\\artem\\my-app\\src\\utility\\updateObjectArray.js",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\Pagination.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\Users.tsx",["244","245","246"],[],"import styled from 'styled-components'\nimport Pagination from './Pagination'\nimport {FC, useCallback, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppStateType} from '../../redux/redux-store'\nimport {\n    currentPageSelector,\n    filterSelector,\n    ifFetchingSelector,\n    isFollowingSelector,\n    pageSizeSelector,\n    portionSizeSelector,\n    totalUsersCountSelector,\n    usersSelector\n} from '../../redux/selectors/usersSelector'\nimport {getIsAuthSelector} from '../../redux/selectors/authSelector'\nimport {ThunkDispatch} from 'redux-thunk'\nimport {ActionsType, FilterType, followThunk, getUserThunk, unfollowThunk} from '../../redux/reducers/usersReducer'\nimport {useNavigate, useSearchParams} from 'react-router-dom'\nimport Preloader from '../common/Preloader/Preloader'\nimport User from './User'\nimport UsersForm from './UsersForm'\n\n\n// style\nconst BorderPageUsers = styled.div`\n  border: 0.5px solid rgba(0, 0, 0, 0.68);\n  padding: 10px;\n`\n\ntype Props = {\n    titleText: string\n}\n\nconst Users: FC<Props> = ({titleText = 'Users'}) => {\n\n    // STATE\n    const ifFetching = useSelector((state: AppStateType) => ifFetchingSelector(state))\n    const isAuth = useSelector((state: AppStateType) => getIsAuthSelector(state))\n    const currentPage = useSelector((state: AppStateType) => currentPageSelector(state))\n    const filter = useSelector((state: AppStateType) => filterSelector(state))\n    const totalUsersCount = useSelector((state: AppStateType) => totalUsersCountSelector(state))\n    const pageSize = useSelector((state: AppStateType) => pageSizeSelector(state))\n    const portionSize = useSelector((state: AppStateType) => portionSizeSelector(state))\n    const users = useSelector((state: AppStateType) => usersSelector(state))\n    const isFetching = useSelector((state: AppStateType) => isFollowingSelector(state))\n\n    // Dispatch Action Creator\n    const dispatch: ThunkDispatch<AppStateType, unknown, ActionsType> = useDispatch()\n\n    // Dispatch Thunk\n    const unfollowThunk_ = (id: number) => dispatch(unfollowThunk(id))\n    const followThunk_ = (id: number) => dispatch(followThunk(id))\n    const getUserThunk_ = useCallback((currentPage: number, filter: FilterType) => dispatch(getUserThunk(currentPage, filter)), [dispatch])\n\n\n    // If user not login, redirect to /login\n    let navigator = useNavigate()\n    useEffect(() => {\n        if (!isAuth) {\n            navigator('/login')\n        }\n        getUserThunk_(currentPage, filter).then(r => r)\n    }, [navigator, isAuth, getUserThunk_])\n\n\n    let [searchParams, setSearchParams] = useSearchParams()\n    useEffect(() => {\n        const result: any = {}\n        // @ts-ignore\n        // пробегаемся по URL, где есть ключ(term или friend) и значение(строка или boolean)\n        for (const [key, value] of searchParams.entries()) {\n            let urlValue: any = +value\n            // если urlValue ничему не равен, то ему присваевается value\n            if (isNaN(urlValue)) {\n                urlValue = value\n            }\n            if (urlValue === 'true') {\n                urlValue = true\n            } else if (urlValue === 'false') {\n                urlValue = false\n            }\n            // помещаем результат в объект\n            result[key] = urlValue\n        }\n        // присваиваем страницу\n        let actualPage = result.page || currentPage\n\n        // присваиваем строку поиска\n        let term = result.term || filter.term\n\n        // присваиваем друга\n        let friend = result.friend || filter.friend\n\n        // если в url нету friend или он равен false, присваиваем параметр из бизнеса\n        if (result.friend === false) {\n            friend = result.friend\n        }\n\n        // определяем актуальный фильтер\n        const currentFilter = {term, friend}\n\n        getUserThunk_(actualPage, currentFilter).then(r => r)\n    }, [])\n\n\n    useEffect(() => {\n        const term = filter.term\n        const friend = filter.friend\n        let url = (term === '' ? '' : `&term=${term}`) + (friend === null ? '' : `&friend=${friend}`) + (currentPage === 1 ? '' : `&page=${currentPage}`)\n        setSearchParams(url)\n    }, [filter, currentPage])\n\n\n    // If page change\n    const onPageChanged = (pageNumber: number, filter: FilterType) => {\n        getUserThunk_(pageNumber, filter).then(r => r)\n    }\n\n    // If filter change\n    const onFilterChanged = (filter: FilterType) => {\n        getUserThunk_(1, filter).then(r => r)\n    }\n\n    return (\n        <BorderPageUsers>\n            {ifFetching ? <Preloader/> : null}\n            <UsersForm onFilterChanged={onFilterChanged}/>\n            <Pagination totalUsersCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\n                        onPageChanged={onPageChanged} portionSize={portionSize} filter={filter}/>\n            <h2>{titleText}</h2>\n            <User unfollowThunk={unfollowThunk_} followThunk={followThunk_} users={users} isFetching={isFetching}/>\n        </BorderPageUsers>\n    )\n}\n\nexport default Users","C:\\Users\\artem\\my-app\\src\\redux\\types\\type.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\redux-store.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\common\\Preloader\\Preloader.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Users\\User.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\usersSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\authSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\appSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\dialogSelectors.ts",[],[],"C:\\Users\\artem\\my-app\\src\\redux\\selectors\\profileSelector.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPosts.tsx",["247"],[],"import posts from '../Posts/MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport MyPostForm from \"./MyPostForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {postsDataSelector} from '../../../redux/selectors/profileSelector'\r\nimport {ActionsType, profileActions} from \"../../../redux/reducers/profileReducer\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport uniqid from 'uniqid'\r\nimport { useMemo } from 'react';\r\n\r\n\r\n\r\nconst MyPosts = () => {\r\n\r\n    // STATE\r\n    const postsData = useSelector((state: AppStateType) => postsDataSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, any, ActionsType> = useDispatch()\r\n    const addPostActionCreator_ = (newPostText: string) => dispatch(profileActions.addPostActionCreater(newPostText))\r\n\r\n\r\n    let postsElements = postsData.map(p => <Post name={p.name} text={p.text} key={uniqid()} />)\r\n    let onAddPost = (newPostText: string) => {\r\n        addPostActionCreator_(newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={posts.postsBlock}>\r\n            <div className={posts.myP}>\r\n                <h3>MyPosts</h3>\r\n            </div>\r\n            <MyPostForm onAddPost={ onAddPost }/>\r\n            <div className={posts.wallPost}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\MyPostForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\Post\\Post.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Posts\\PhotoPost\\PhotoPost.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\Profile.tsx",["248","249"],[],"import myPosts from './Profile.module.css'\r\nimport '../Profile/Posts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {profilePageSelector, profileStatusSelector} from '../../redux/selectors/profileSelector'\r\nimport {getAuthIdSelector, getIsAuthSelector} from '../../redux/selectors/authSelector'\r\nimport {\r\n    getProfileStatus,\r\n    getProfileThunk,\r\n    putProfileInfo,\r\n    putProfileStatus,\r\n    savePhoto\r\n} from '../../redux/reducers/profileReducer'\r\nimport {useNavigate, useParams} from 'react-router-dom'\r\nimport {useCallback, useEffect} from 'react'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {ProfileType} from '../../redux/types/type'\r\nimport MyPosts from '../Profile/Posts/MyPosts'\r\n\r\nconst Profile = () => {\r\n\r\n    // STATE\r\n    const profile = useSelector((state: AppStateType) => profilePageSelector(state))\r\n    const status = useSelector((state: AppStateType) => profileStatusSelector(state))\r\n    const isAuth = useSelector((state: AppStateType) => getIsAuthSelector(state))\r\n    const authId = useSelector((state: AppStateType) => getAuthIdSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch:ThunkDispatch<AppStateType, any, any> = useDispatch()\r\n    const getProfileThunk_ = useCallback((userId: number) => dispatch(getProfileThunk(userId)), [dispatch])\r\n    const getProfileStatus_ = useCallback((userId: number) => dispatch(getProfileStatus(userId)), [dispatch])\r\n    const putProfileStatus_ = (status: string) => dispatch(putProfileStatus(status))\r\n    const savePhoto_ = (photos: File) => dispatch(savePhoto(photos))\r\n    const putProfileInfo_ = (profile: ProfileType) => dispatch(putProfileInfo(profile))\r\n\r\n    let navigate = useNavigate()\r\n    useEffect(()=>{\r\n        if( !isAuth ) {\r\n            return navigate(\"/login\")\r\n        }\r\n    }, [navigate, isAuth])\r\n\r\n\r\n    let {userId} = useParams<{userId: any}>()\r\n    useEffect(() => {\r\n        getProfileThunk_(userId).then(r => r)\r\n        getProfileStatus_(userId).then(r => r)\r\n    }, [userId]);\r\n\r\n    \r\n    return (\r\n        <div className={myPosts.content}>\r\n            <ProfileInfo savePhoto={savePhoto_} isOwner={authId == userId} profile={profile} status={status} putProfileStatus={putProfileStatus_} putProfileInfo={putProfileInfo_}/>\r\n            <MyPosts />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Nav\\Nav.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\common\\404\\NotFound.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Header\\Header.tsx",["250","251","252","253"],[],"import style from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport logout from '../../icon/logout_black_24dp.svg'\r\nimport logo from '../../img/logo.png'\r\nimport {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getIsAuth, getIsAuthSelector, getLogin, getLoginSelector} from '../../redux/selectors/authSelector'\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {loginMeThunk, logoutThunk} from \"../../redux/reducers/authReducer\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n\r\n    // STATE\r\n    const isAuth_ = useSelector((state: AppStateType) =>  getIsAuthSelector(state))\r\n    const login_ = useSelector((state: AppStateType)  => getLoginSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, any, any> = useDispatch()\r\n    const loginThunk_ = () => dispatch(loginMeThunk())\r\n    const logoutThunk_ = () => dispatch(logoutThunk())\r\n\r\n    useEffect( () => {\r\n        loginThunk_()\r\n    }, [loginThunk_, isAuth_]);\r\n\r\n\r\n    return <header className={style.header}>\r\n            <img src={logo} alt={'logo'} className={style.logo}/>\r\n            <div className={style.login_btn}>\r\n                { isAuth_\r\n                    ? <div> {login_} - <button onClick={logoutThunk_} className={style.logout_btn}> <img className={style.logout_icon} src={logout} alt={'logout'}/> </button></div>\r\n                    : <NavLink to={'/Login'}> Login </NavLink> }\r\n            </div>\r\n        </header>\r\n}\r\n\r\n\r\nexport default Header;","C:\\Users\\artem\\my-app\\src\\compo\\Login\\Login.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Login\\LoginForm.tsx",["254"],[],"import {Formik} from 'formik'\r\nimport styled from 'styled-components'\r\nimport * as Yup from 'yup'\r\nimport {FC} from 'react'\r\nimport {FormikErrors, FormikValues} from 'formik/dist/types'\r\nimport {Alert, Button, Checkbox, FormControlLabel, TextField} from '@mui/material'\r\nimport style from './Login.module.css'\r\n\r\ntype Props = {\r\n    loginThunk: (email: string, password: number, rememberMe: boolean, captcha: any) => void\r\n    captchaUrl: string | null\r\n}\r\ntype InitialValuesType = {\r\n    email: string | null\r\n    password: number | null\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport const LoginForm: FC<Props> = ({loginThunk, captchaUrl}) => {\r\n\r\n\r\n    let initialValues: InitialValuesType = {\r\n        email: '',\r\n        password: null,\r\n        rememberMe: false,\r\n        captcha: ''\r\n    }\r\n    let SignupSchema = Yup.object().shape({\r\n        password: Yup.string()\r\n            .min(5, 'Too Short!')\r\n            .max(50, 'Too Long!')\r\n            .required('Required'),\r\n        email: Yup.string().email('Invalid email').required('Required'),\r\n    });\r\n    let validateValues = (values: FormikValues) => {\r\n        const errors: FormikErrors<FormikValues> = {};\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n    }\r\n    let submitCallback =  (values: FormikValues, {setSubmitting}: {setSubmitting: (arg1: boolean) => void}) => {\r\n        loginThunk(values.email, values.password, values.rememberMe, values.captcha);\r\n        setSubmitting(false);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={ initialValues }\r\n            validationSchema={SignupSchema}\r\n            validate={ validateValues }\r\n            onSubmit={ submitCallback }\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    {/*login*/}\r\n                    <div className={style.form}>\r\n                        <TextField type=\"email\" id=\"outlined-basic\"  name=\"email\" onChange={handleChange} onBlur={handleBlur} value={values.email}  label=\"Email/Login\" variant=\"outlined\" />\r\n                        {errors.email != null ? <Alert className={style.formError} severity=\"error\">  {errors.email && touched.email && errors.email} </Alert> : null}\r\n                    </div>\r\n                    {/*pass*/}\r\n                    <div className={style.form}>\r\n                        <TextField type=\"password\" name=\"password\" onChange={handleChange} onBlur={handleBlur} value={values.password} label=\"Password\" autoComplete=\"current-password\" id=\"outlined-password-input\"/>\r\n                        {errors.password != null ? <Alert className={style.formError} severity=\"error\"> {errors.password && touched.password && errors.password} </Alert> : null}\r\n                    </div>\r\n                    {/*remember me*/}\r\n                    <div>\r\n                        <FormControlLabel control={<Checkbox name={\"rememberMe\"} onChange={handleChange} defaultChecked/>} label={'Remember me'}/>\r\n                    </div>\r\n                    {captchaUrl && <div> <img src={captchaUrl} alt={'captcha security'}/> </div>}\r\n                    {captchaUrl && <div> <input name={'captcha'} value={values.captcha} onBlur={handleBlur} type={'text'} onChange={handleChange} /> </div>}\r\n                    {/*submit*/}\r\n                    <div>\r\n                        <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color=\"success\"> Submit </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n","C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogUsersItem\\DialogsItem.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\MessagesItem\\Message.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\Dialogs.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Message\\DialogsForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\api.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\loginApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\profileApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\api\\usersApi.ts",[],[],"C:\\Users\\artem\\my-app\\src\\App.tsx",["255"],[],"import './App.module.css'\r\nimport s from './App.module.css'\r\nimport Nav from './compo/Nav/Nav'\r\nimport {Route, Routes} from '../node_modules/react-router-dom/index'\r\nimport {Navigate} from 'react-router-dom'\r\nimport ScrollToTop from 'react-scroll-to-top'\r\nimport Login from './compo/Login/Login'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {lazy, Suspense, useEffect} from 'react'\r\nimport {getInitializedSelector} from './redux/selectors/appSelector'\r\nimport Preloader from './compo/common/Preloader/Preloader'\r\nimport NotFound from './compo/common/404/NotFound'\r\nimport {ActionsType, initializeApp} from './redux/reducers/appReducer'\r\nimport Users from './compo/Users/Users'\r\nimport Profile from './compo/Profile/Profile'\r\nimport Header from './compo/Header/Header'\r\nimport {AppStateType} from './redux/redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\n\r\nconst Dialogs = lazy(() => import('./compo/Message/Dialogs'))\r\n\r\nconst App = () => {\r\n\r\n    // STATE\r\n    const initialized = useSelector( (state: AppStateType) => getInitializedSelector(state))\r\n\r\n    // DISPATCH\r\n    const dispatch: ThunkDispatch<AppStateType, unknown, ActionsType> = useDispatch()\r\n    const initialize = () => dispatch(initializeApp())\r\n\r\n    useEffect(() => {\r\n        initialize().then(r => r)\r\n    }, [initialized])\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.grid}>\r\n            <Header/>\r\n            <Nav/>\r\n            <ScrollToTop smooth/>\r\n            <div className={s.content}>\r\n                <Routes>\r\n                    <Route path=\"/dialogs/*\" element={<Suspense fallback={<Preloader/>}> <Dialogs/> </Suspense>}/>\r\n                    <Route path=\"/profile/:userId\" element={<Profile/>}/>\r\n                    <Route path=\"/profile\" element={<Profile/>}/>\r\n                    <Route path=\"/users\" element={<Users titleText={'Samurais'}/>}/>\r\n                    <Route path=\"/login\" element={<Login/>}/>\r\n                    <Route path=\"*\" element={<NotFound/>}/>\r\n                    <Route path=\"/\" element={<Navigate to=\"/users\"/>}/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","C:\\Users\\artem\\my-app\\src\\redux\\reducers\\sidebarReducer.ts",["256","257"],[],"import {UsersInterface} from '../types/type'\r\nimport {AppStateType, InferActionsTypes} from '../redux-store'\r\nimport {ThunkDispatch} from 'redux-thunk'\r\nimport {userActions} from './usersReducer'\r\nimport {userApi} from '../../compo/api/usersApi'\r\n\r\n\r\n// Initial State\r\ntype InitialStateType = {\r\n    friends: UsersInterface[]\r\n}\r\nconst initialState = {\r\n    friends: []\r\n}\r\n\r\n\r\n// Reducer\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_FRIEND': {\r\n            return {...state, friends: [...action.friends]}\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof sidebarActions>\r\ntype DispatchThunkType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\n\r\n// actionCreator\r\nexport const sidebarActions = {\r\n    setFriends: (friends: UsersInterface[]) => ({type: 'SET_FRIEND', friends} as const)\r\n}\r\n\r\n\r\n// thunkCreator\r\nexport const getFriends = () => async (dispatch: DispatchThunkType) => {\r\n    // @ts-ignore\r\n    dispatch(sidebarActions.setFriends())\r\n}\r\n\r\n\r\n\r\n\r\nexport default  sidebarReducer","C:\\Users\\artem\\my-app\\src\\compo\\Users\\UsersForm.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\index.tsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\Contacts.jsx",[],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAboutForm.tsx",["258"],[],"C:\\Users\\artem\\my-app\\src\\compo\\Profile\\ProfileInfo\\ProfileInfoAbout\\ProfileAbout.tsx",[],[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":15},{"ruleId":"267","severity":1,"message":"268","line":67,"column":20,"nodeType":"269","messageId":"270","endLine":74,"endColumn":14,"suppressions":"271"},{"ruleId":"272","severity":1,"message":"273","line":73,"column":57,"nodeType":"274","messageId":"275","endLine":73,"endColumn":59,"suppressions":"276"},{"ruleId":"277","severity":1,"message":"278","line":64,"column":8,"nodeType":"279","endLine":64,"endColumn":42,"suggestions":"280"},{"ruleId":"277","severity":1,"message":"281","line":104,"column":8,"nodeType":"279","endLine":104,"endColumn":10,"suggestions":"282"},{"ruleId":"277","severity":1,"message":"283","line":112,"column":8,"nodeType":"279","endLine":112,"endColumn":29,"suggestions":"284"},{"ruleId":"263","severity":1,"message":"285","line":10,"column":10,"nodeType":"265","messageId":"266","endLine":10,"endColumn":17},{"ruleId":"277","severity":1,"message":"286","line":49,"column":8,"nodeType":"279","endLine":49,"endColumn":16,"suggestions":"287"},{"ruleId":"272","severity":1,"message":"288","line":54,"column":65,"nodeType":"274","messageId":"275","endLine":54,"endColumn":67},{"ruleId":"263","severity":1,"message":"289","line":5,"column":9,"nodeType":"265","messageId":"266","endLine":5,"endColumn":11},{"ruleId":"263","severity":1,"message":"290","line":8,"column":9,"nodeType":"265","messageId":"266","endLine":8,"endColumn":18},{"ruleId":"263","severity":1,"message":"291","line":8,"column":39,"nodeType":"265","messageId":"266","endLine":8,"endColumn":47},{"ruleId":"277","severity":1,"message":"292","line":22,"column":11,"nodeType":"293","endLine":22,"endColumn":55},{"ruleId":"263","severity":1,"message":"294","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":14},{"ruleId":"277","severity":1,"message":"295","line":33,"column":8,"nodeType":"279","endLine":33,"endColumn":21,"suggestions":"296"},{"ruleId":"263","severity":1,"message":"297","line":4,"column":9,"nodeType":"265","messageId":"266","endLine":4,"endColumn":20},{"ruleId":"263","severity":1,"message":"298","line":5,"column":9,"nodeType":"265","messageId":"266","endLine":5,"endColumn":16},{"ruleId":"263","severity":1,"message":"299","line":21,"column":11,"nodeType":"265","messageId":"266","endLine":21,"endColumn":14},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"@typescript-eslint/no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","@typescript-eslint/consistent-type-assertions","Use 'as InitialStateInterface' instead of '<InitialStateInterface>'.","TSTypeAssertion","as",["302"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["303"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'filter'. Either include them or remove the dependency array.","ArrayExpression",["304"],"React Hook useEffect has missing dependencies: 'currentPage', 'filter.friend', 'filter.term', 'getUserThunk_', and 'searchParams'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'setSearchParams'. Either include it or remove the dependency array.",["306"],"'useMemo' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfileStatus_' and 'getProfileThunk_'. Either include them or remove the dependency array.",["307"],"Expected '===' and instead saw '=='.","'FC' is defined but never used.","'getIsAuth' is defined but never used.","'getLogin' is defined but never used.","The 'loginThunk_' function makes the dependencies of useEffect Hook (at line 27) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'loginThunk_' in its own useCallback() Hook.","VariableDeclarator","'styled' is defined but never used.","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["308"],"'userActions' is defined but never used.","'userApi' is defined but never used.","'job' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"kind":"309","justification":"310"},{"kind":"309","justification":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"directive","","Update the dependencies array to be: [navigator, isAuth, getUserThunk_, currentPage, filter]",{"range":"321","text":"322"},"Update the dependencies array to be: [currentPage, filter.friend, filter.term, getUserThunk_, searchParams]",{"range":"323","text":"324"},"Update the dependencies array to be: [filter, currentPage, setSearchParams]",{"range":"325","text":"326"},"Update the dependencies array to be: [getProfileStatus_, getProfileThunk_, userId]",{"range":"327","text":"328"},"Update the dependencies array to be: [initialize, initialized]",{"range":"329","text":"330"},[2518,2552],"[navigator, isAuth, getUserThunk_, currentPage, filter]",[3870,3872],"[currentPage, filter.friend, filter.term, getUserThunk_, searchParams]",[4158,4179],"[filter, currentPage, setSearchParams]",[2109,2117],"[getProfileStatus_, getProfileThunk_, userId]",[1306,1319],"[initialize, initialized]"]